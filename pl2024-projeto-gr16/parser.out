Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BEGINCOMMENT
    INVERT
    LPAREN
    NEWLINE
    RPAREN
    WHITESPACE

Grammar

Rule 0     S' -> S
Rule 1     S -> Options
Rule 2     Options -> Expression
Rule 3     Options -> Function
Rule 4     Function -> Options COLON ID Options SEMICOLON
Rule 5     Expression -> Options Token
Rule 6     Expression -> <empty>
Rule 7     Token -> Operation
Rule 8     Token -> Quickie
Rule 9     Token -> Misk
Rule 10    Token -> Manuver
Rule 11    Token -> Logic
Rule 12    Token -> Loop
Rule 13    Token -> Condition
Rule 14    Token -> Variables
Rule 15    Token -> Elem
Rule 16    Token -> Io
Rule 17    Operation -> PLUS
Rule 18    Operation -> TIMES
Rule 19    Operation -> DIVIDE
Rule 20    Operation -> MINUS
Rule 21    Operation -> EXP
Rule 22    Operation -> MOD
Rule 23    Operation -> DIVMOD
Rule 24    Loop -> DO Options LOOP
Rule 25    Loop -> BEGIN Options UNTIL
Rule 26    Loop -> BEGIN Options WHILE Options REPEAT
Rule 27    Loop -> I
Rule 28    Loop -> DO Options PLUSLOOP
Rule 29    Condition -> IF Options ELSE Options THEN
Rule 30    Condition -> IF Options THEN
Rule 31    Quickie -> QUICKADDONE
Rule 32    Quickie -> QUICKADDTWO
Rule 33    Quickie -> QUICKSUBONE
Rule 34    Quickie -> QUICKSUBTWO
Rule 35    Quickie -> QUICKMULTWO
Rule 36    Quickie -> QUICKDIVTWO
Rule 37    Logic -> EQUAL
Rule 38    Logic -> NOTEQUAL
Rule 39    Logic -> GREATER
Rule 40    Logic -> LESS
Rule 41    Logic -> ZEROEQUALS
Rule 42    Logic -> ZEROLESS
Rule 43    Logic -> ZEROGREATER
Rule 44    Logic -> FALSE
Rule 45    Logic -> TRUE
Rule 46    Misk -> ABS
Rule 47    Misk -> NEGATE
Rule 48    Misk -> MIN
Rule 49    Misk -> MAX
Rule 50    Manuver -> DUP
Rule 51    Manuver -> 2DUP
Rule 52    Manuver -> SWAP
Rule 53    Manuver -> ROT
Rule 54    Manuver -> OVER
Rule 55    Manuver -> DROP
Rule 56    Variables -> VARIABLE ID
Rule 57    Variables -> ID EXCLAMATION
Rule 58    Variables -> ID ATSIGN
Rule 59    Variables -> ID QUESTIONMARK
Rule 60    Variables -> ID
Rule 61    Io -> DOT
Rule 62    Io -> KEY
Rule 63    Io -> CHAR
Rule 64    Io -> CR
Rule 65    Io -> SPACE
Rule 66    Io -> SPACES
Rule 67    Io -> EMIT
Rule 68    Elem -> NUMBER
Rule 69    Elem -> STRING

Terminals, with rules where they appear

2DUP                 : 51
ABS                  : 46
ATSIGN               : 58
BEGIN                : 25 26
BEGINCOMMENT         : 
CHAR                 : 63
COLON                : 4
CR                   : 64
DIVIDE               : 19
DIVMOD               : 23
DO                   : 24 28
DOT                  : 61
DROP                 : 55
DUP                  : 50
ELSE                 : 29
EMIT                 : 67
EQUAL                : 37
EXCLAMATION          : 57
EXP                  : 21
FALSE                : 44
GREATER              : 39
I                    : 27
ID                   : 4 56 57 58 59 60
IF                   : 29 30
INVERT               : 
KEY                  : 62
LESS                 : 40
LOOP                 : 24
LPAREN               : 
MAX                  : 49
MIN                  : 48
MINUS                : 20
MOD                  : 22
NEGATE               : 47
NEWLINE              : 
NOTEQUAL             : 38
NUMBER               : 68
OVER                 : 54
PLUS                 : 17
PLUSLOOP             : 28
QUESTIONMARK         : 59
QUICKADDONE          : 31
QUICKADDTWO          : 32
QUICKDIVTWO          : 36
QUICKMULTWO          : 35
QUICKSUBONE          : 33
QUICKSUBTWO          : 34
REPEAT               : 26
ROT                  : 53
RPAREN               : 
SEMICOLON            : 4
SPACE                : 65
SPACES               : 66
STRING               : 69
SWAP                 : 52
THEN                 : 29 30
TIMES                : 18
TRUE                 : 45
UNTIL                : 25
VARIABLE             : 56
WHILE                : 26
WHITESPACE           : 
ZEROEQUALS           : 41
ZEROGREATER          : 43
ZEROLESS             : 42
error                : 

Nonterminals, with rules where they appear

Condition            : 13
Elem                 : 15
Expression           : 2
Function             : 3
Io                   : 16
Logic                : 11
Loop                 : 12
Manuver              : 10
Misk                 : 9
Operation            : 7
Options              : 1 4 4 5 24 25 26 26 28 29 29 30
Quickie              : 8
S                    : 0
Token                : 5
Variables            : 14

Parsing method: LALR

state 0

    (0) S' -> . S
    (1) S -> . Options
    (2) Options -> . Expression
    (3) Options -> . Function
    (5) Expression -> . Options Token
    (6) Expression -> .
    (4) Function -> . Options COLON ID Options SEMICOLON

    COLON           reduce using rule 6 (Expression -> .)
    PLUS            reduce using rule 6 (Expression -> .)
    TIMES           reduce using rule 6 (Expression -> .)
    DIVIDE          reduce using rule 6 (Expression -> .)
    MINUS           reduce using rule 6 (Expression -> .)
    EXP             reduce using rule 6 (Expression -> .)
    MOD             reduce using rule 6 (Expression -> .)
    DIVMOD          reduce using rule 6 (Expression -> .)
    QUICKADDONE     reduce using rule 6 (Expression -> .)
    QUICKADDTWO     reduce using rule 6 (Expression -> .)
    QUICKSUBONE     reduce using rule 6 (Expression -> .)
    QUICKSUBTWO     reduce using rule 6 (Expression -> .)
    QUICKMULTWO     reduce using rule 6 (Expression -> .)
    QUICKDIVTWO     reduce using rule 6 (Expression -> .)
    ABS             reduce using rule 6 (Expression -> .)
    NEGATE          reduce using rule 6 (Expression -> .)
    MIN             reduce using rule 6 (Expression -> .)
    MAX             reduce using rule 6 (Expression -> .)
    DUP             reduce using rule 6 (Expression -> .)
    2DUP            reduce using rule 6 (Expression -> .)
    SWAP            reduce using rule 6 (Expression -> .)
    ROT             reduce using rule 6 (Expression -> .)
    OVER            reduce using rule 6 (Expression -> .)
    DROP            reduce using rule 6 (Expression -> .)
    EQUAL           reduce using rule 6 (Expression -> .)
    NOTEQUAL        reduce using rule 6 (Expression -> .)
    GREATER         reduce using rule 6 (Expression -> .)
    LESS            reduce using rule 6 (Expression -> .)
    ZEROEQUALS      reduce using rule 6 (Expression -> .)
    ZEROLESS        reduce using rule 6 (Expression -> .)
    ZEROGREATER     reduce using rule 6 (Expression -> .)
    FALSE           reduce using rule 6 (Expression -> .)
    TRUE            reduce using rule 6 (Expression -> .)
    DO              reduce using rule 6 (Expression -> .)
    BEGIN           reduce using rule 6 (Expression -> .)
    I               reduce using rule 6 (Expression -> .)
    IF              reduce using rule 6 (Expression -> .)
    VARIABLE        reduce using rule 6 (Expression -> .)
    ID              reduce using rule 6 (Expression -> .)
    NUMBER          reduce using rule 6 (Expression -> .)
    STRING          reduce using rule 6 (Expression -> .)
    DOT             reduce using rule 6 (Expression -> .)
    KEY             reduce using rule 6 (Expression -> .)
    CHAR            reduce using rule 6 (Expression -> .)
    CR              reduce using rule 6 (Expression -> .)
    SPACE           reduce using rule 6 (Expression -> .)
    SPACES          reduce using rule 6 (Expression -> .)
    EMIT            reduce using rule 6 (Expression -> .)
    $end            reduce using rule 6 (Expression -> .)

    S                              shift and go to state 1
    Options                        shift and go to state 2
    Expression                     shift and go to state 3
    Function                       shift and go to state 4

state 1

    (0) S' -> S .



state 2

    (1) S -> Options .
    (5) Expression -> Options . Token
    (4) Function -> Options . COLON ID Options SEMICOLON
    (7) Token -> . Operation
    (8) Token -> . Quickie
    (9) Token -> . Misk
    (10) Token -> . Manuver
    (11) Token -> . Logic
    (12) Token -> . Loop
    (13) Token -> . Condition
    (14) Token -> . Variables
    (15) Token -> . Elem
    (16) Token -> . Io
    (17) Operation -> . PLUS
    (18) Operation -> . TIMES
    (19) Operation -> . DIVIDE
    (20) Operation -> . MINUS
    (21) Operation -> . EXP
    (22) Operation -> . MOD
    (23) Operation -> . DIVMOD
    (31) Quickie -> . QUICKADDONE
    (32) Quickie -> . QUICKADDTWO
    (33) Quickie -> . QUICKSUBONE
    (34) Quickie -> . QUICKSUBTWO
    (35) Quickie -> . QUICKMULTWO
    (36) Quickie -> . QUICKDIVTWO
    (46) Misk -> . ABS
    (47) Misk -> . NEGATE
    (48) Misk -> . MIN
    (49) Misk -> . MAX
    (50) Manuver -> . DUP
    (51) Manuver -> . 2DUP
    (52) Manuver -> . SWAP
    (53) Manuver -> . ROT
    (54) Manuver -> . OVER
    (55) Manuver -> . DROP
    (37) Logic -> . EQUAL
    (38) Logic -> . NOTEQUAL
    (39) Logic -> . GREATER
    (40) Logic -> . LESS
    (41) Logic -> . ZEROEQUALS
    (42) Logic -> . ZEROLESS
    (43) Logic -> . ZEROGREATER
    (44) Logic -> . FALSE
    (45) Logic -> . TRUE
    (24) Loop -> . DO Options LOOP
    (25) Loop -> . BEGIN Options UNTIL
    (26) Loop -> . BEGIN Options WHILE Options REPEAT
    (27) Loop -> . I
    (28) Loop -> . DO Options PLUSLOOP
    (29) Condition -> . IF Options ELSE Options THEN
    (30) Condition -> . IF Options THEN
    (56) Variables -> . VARIABLE ID
    (57) Variables -> . ID EXCLAMATION
    (58) Variables -> . ID ATSIGN
    (59) Variables -> . ID QUESTIONMARK
    (60) Variables -> . ID
    (68) Elem -> . NUMBER
    (69) Elem -> . STRING
    (61) Io -> . DOT
    (62) Io -> . KEY
    (63) Io -> . CHAR
    (64) Io -> . CR
    (65) Io -> . SPACE
    (66) Io -> . SPACES
    (67) Io -> . EMIT

    $end            reduce using rule 1 (S -> Options .)
    COLON           shift and go to state 6
    PLUS            shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    MINUS           shift and go to state 21
    EXP             shift and go to state 22
    MOD             shift and go to state 23
    DIVMOD          shift and go to state 24
    QUICKADDONE     shift and go to state 25
    QUICKADDTWO     shift and go to state 26
    QUICKSUBONE     shift and go to state 27
    QUICKSUBTWO     shift and go to state 28
    QUICKMULTWO     shift and go to state 29
    QUICKDIVTWO     shift and go to state 30
    ABS             shift and go to state 31
    NEGATE          shift and go to state 32
    MIN             shift and go to state 33
    MAX             shift and go to state 34
    DUP             shift and go to state 35
    2DUP            shift and go to state 36
    SWAP            shift and go to state 37
    ROT             shift and go to state 38
    OVER            shift and go to state 39
    DROP            shift and go to state 40
    EQUAL           shift and go to state 41
    NOTEQUAL        shift and go to state 42
    GREATER         shift and go to state 43
    LESS            shift and go to state 44
    ZEROEQUALS      shift and go to state 45
    ZEROLESS        shift and go to state 46
    ZEROGREATER     shift and go to state 47
    FALSE           shift and go to state 48
    TRUE            shift and go to state 49
    DO              shift and go to state 50
    BEGIN           shift and go to state 51
    I               shift and go to state 52
    IF              shift and go to state 53
    VARIABLE        shift and go to state 54
    ID              shift and go to state 7
    NUMBER          shift and go to state 55
    STRING          shift and go to state 56
    DOT             shift and go to state 57
    KEY             shift and go to state 58
    CHAR            shift and go to state 59
    CR              shift and go to state 60
    SPACE           shift and go to state 61
    SPACES          shift and go to state 62
    EMIT            shift and go to state 63

    Token                          shift and go to state 5
    Operation                      shift and go to state 8
    Quickie                        shift and go to state 9
    Misk                           shift and go to state 10
    Manuver                        shift and go to state 11
    Logic                          shift and go to state 12
    Loop                           shift and go to state 13
    Condition                      shift and go to state 14
    Variables                      shift and go to state 15
    Elem                           shift and go to state 16
    Io                             shift and go to state 17

state 3

    (2) Options -> Expression .

    COLON           reduce using rule 2 (Options -> Expression .)
    PLUS            reduce using rule 2 (Options -> Expression .)
    TIMES           reduce using rule 2 (Options -> Expression .)
    DIVIDE          reduce using rule 2 (Options -> Expression .)
    MINUS           reduce using rule 2 (Options -> Expression .)
    EXP             reduce using rule 2 (Options -> Expression .)
    MOD             reduce using rule 2 (Options -> Expression .)
    DIVMOD          reduce using rule 2 (Options -> Expression .)
    QUICKADDONE     reduce using rule 2 (Options -> Expression .)
    QUICKADDTWO     reduce using rule 2 (Options -> Expression .)
    QUICKSUBONE     reduce using rule 2 (Options -> Expression .)
    QUICKSUBTWO     reduce using rule 2 (Options -> Expression .)
    QUICKMULTWO     reduce using rule 2 (Options -> Expression .)
    QUICKDIVTWO     reduce using rule 2 (Options -> Expression .)
    ABS             reduce using rule 2 (Options -> Expression .)
    NEGATE          reduce using rule 2 (Options -> Expression .)
    MIN             reduce using rule 2 (Options -> Expression .)
    MAX             reduce using rule 2 (Options -> Expression .)
    DUP             reduce using rule 2 (Options -> Expression .)
    2DUP            reduce using rule 2 (Options -> Expression .)
    SWAP            reduce using rule 2 (Options -> Expression .)
    ROT             reduce using rule 2 (Options -> Expression .)
    OVER            reduce using rule 2 (Options -> Expression .)
    DROP            reduce using rule 2 (Options -> Expression .)
    EQUAL           reduce using rule 2 (Options -> Expression .)
    NOTEQUAL        reduce using rule 2 (Options -> Expression .)
    GREATER         reduce using rule 2 (Options -> Expression .)
    LESS            reduce using rule 2 (Options -> Expression .)
    ZEROEQUALS      reduce using rule 2 (Options -> Expression .)
    ZEROLESS        reduce using rule 2 (Options -> Expression .)
    ZEROGREATER     reduce using rule 2 (Options -> Expression .)
    FALSE           reduce using rule 2 (Options -> Expression .)
    TRUE            reduce using rule 2 (Options -> Expression .)
    DO              reduce using rule 2 (Options -> Expression .)
    BEGIN           reduce using rule 2 (Options -> Expression .)
    I               reduce using rule 2 (Options -> Expression .)
    IF              reduce using rule 2 (Options -> Expression .)
    VARIABLE        reduce using rule 2 (Options -> Expression .)
    ID              reduce using rule 2 (Options -> Expression .)
    NUMBER          reduce using rule 2 (Options -> Expression .)
    STRING          reduce using rule 2 (Options -> Expression .)
    DOT             reduce using rule 2 (Options -> Expression .)
    KEY             reduce using rule 2 (Options -> Expression .)
    CHAR            reduce using rule 2 (Options -> Expression .)
    CR              reduce using rule 2 (Options -> Expression .)
    SPACE           reduce using rule 2 (Options -> Expression .)
    SPACES          reduce using rule 2 (Options -> Expression .)
    EMIT            reduce using rule 2 (Options -> Expression .)
    $end            reduce using rule 2 (Options -> Expression .)
    LOOP            reduce using rule 2 (Options -> Expression .)
    PLUSLOOP        reduce using rule 2 (Options -> Expression .)
    UNTIL           reduce using rule 2 (Options -> Expression .)
    WHILE           reduce using rule 2 (Options -> Expression .)
    ELSE            reduce using rule 2 (Options -> Expression .)
    THEN            reduce using rule 2 (Options -> Expression .)
    SEMICOLON       reduce using rule 2 (Options -> Expression .)
    REPEAT          reduce using rule 2 (Options -> Expression .)


state 4

    (3) Options -> Function .

    COLON           reduce using rule 3 (Options -> Function .)
    PLUS            reduce using rule 3 (Options -> Function .)
    TIMES           reduce using rule 3 (Options -> Function .)
    DIVIDE          reduce using rule 3 (Options -> Function .)
    MINUS           reduce using rule 3 (Options -> Function .)
    EXP             reduce using rule 3 (Options -> Function .)
    MOD             reduce using rule 3 (Options -> Function .)
    DIVMOD          reduce using rule 3 (Options -> Function .)
    QUICKADDONE     reduce using rule 3 (Options -> Function .)
    QUICKADDTWO     reduce using rule 3 (Options -> Function .)
    QUICKSUBONE     reduce using rule 3 (Options -> Function .)
    QUICKSUBTWO     reduce using rule 3 (Options -> Function .)
    QUICKMULTWO     reduce using rule 3 (Options -> Function .)
    QUICKDIVTWO     reduce using rule 3 (Options -> Function .)
    ABS             reduce using rule 3 (Options -> Function .)
    NEGATE          reduce using rule 3 (Options -> Function .)
    MIN             reduce using rule 3 (Options -> Function .)
    MAX             reduce using rule 3 (Options -> Function .)
    DUP             reduce using rule 3 (Options -> Function .)
    2DUP            reduce using rule 3 (Options -> Function .)
    SWAP            reduce using rule 3 (Options -> Function .)
    ROT             reduce using rule 3 (Options -> Function .)
    OVER            reduce using rule 3 (Options -> Function .)
    DROP            reduce using rule 3 (Options -> Function .)
    EQUAL           reduce using rule 3 (Options -> Function .)
    NOTEQUAL        reduce using rule 3 (Options -> Function .)
    GREATER         reduce using rule 3 (Options -> Function .)
    LESS            reduce using rule 3 (Options -> Function .)
    ZEROEQUALS      reduce using rule 3 (Options -> Function .)
    ZEROLESS        reduce using rule 3 (Options -> Function .)
    ZEROGREATER     reduce using rule 3 (Options -> Function .)
    FALSE           reduce using rule 3 (Options -> Function .)
    TRUE            reduce using rule 3 (Options -> Function .)
    DO              reduce using rule 3 (Options -> Function .)
    BEGIN           reduce using rule 3 (Options -> Function .)
    I               reduce using rule 3 (Options -> Function .)
    IF              reduce using rule 3 (Options -> Function .)
    VARIABLE        reduce using rule 3 (Options -> Function .)
    ID              reduce using rule 3 (Options -> Function .)
    NUMBER          reduce using rule 3 (Options -> Function .)
    STRING          reduce using rule 3 (Options -> Function .)
    DOT             reduce using rule 3 (Options -> Function .)
    KEY             reduce using rule 3 (Options -> Function .)
    CHAR            reduce using rule 3 (Options -> Function .)
    CR              reduce using rule 3 (Options -> Function .)
    SPACE           reduce using rule 3 (Options -> Function .)
    SPACES          reduce using rule 3 (Options -> Function .)
    EMIT            reduce using rule 3 (Options -> Function .)
    $end            reduce using rule 3 (Options -> Function .)
    LOOP            reduce using rule 3 (Options -> Function .)
    PLUSLOOP        reduce using rule 3 (Options -> Function .)
    UNTIL           reduce using rule 3 (Options -> Function .)
    WHILE           reduce using rule 3 (Options -> Function .)
    ELSE            reduce using rule 3 (Options -> Function .)
    THEN            reduce using rule 3 (Options -> Function .)
    SEMICOLON       reduce using rule 3 (Options -> Function .)
    REPEAT          reduce using rule 3 (Options -> Function .)


state 5

    (5) Expression -> Options Token .

    COLON           reduce using rule 5 (Expression -> Options Token .)
    PLUS            reduce using rule 5 (Expression -> Options Token .)
    TIMES           reduce using rule 5 (Expression -> Options Token .)
    DIVIDE          reduce using rule 5 (Expression -> Options Token .)
    MINUS           reduce using rule 5 (Expression -> Options Token .)
    EXP             reduce using rule 5 (Expression -> Options Token .)
    MOD             reduce using rule 5 (Expression -> Options Token .)
    DIVMOD          reduce using rule 5 (Expression -> Options Token .)
    QUICKADDONE     reduce using rule 5 (Expression -> Options Token .)
    QUICKADDTWO     reduce using rule 5 (Expression -> Options Token .)
    QUICKSUBONE     reduce using rule 5 (Expression -> Options Token .)
    QUICKSUBTWO     reduce using rule 5 (Expression -> Options Token .)
    QUICKMULTWO     reduce using rule 5 (Expression -> Options Token .)
    QUICKDIVTWO     reduce using rule 5 (Expression -> Options Token .)
    ABS             reduce using rule 5 (Expression -> Options Token .)
    NEGATE          reduce using rule 5 (Expression -> Options Token .)
    MIN             reduce using rule 5 (Expression -> Options Token .)
    MAX             reduce using rule 5 (Expression -> Options Token .)
    DUP             reduce using rule 5 (Expression -> Options Token .)
    2DUP            reduce using rule 5 (Expression -> Options Token .)
    SWAP            reduce using rule 5 (Expression -> Options Token .)
    ROT             reduce using rule 5 (Expression -> Options Token .)
    OVER            reduce using rule 5 (Expression -> Options Token .)
    DROP            reduce using rule 5 (Expression -> Options Token .)
    EQUAL           reduce using rule 5 (Expression -> Options Token .)
    NOTEQUAL        reduce using rule 5 (Expression -> Options Token .)
    GREATER         reduce using rule 5 (Expression -> Options Token .)
    LESS            reduce using rule 5 (Expression -> Options Token .)
    ZEROEQUALS      reduce using rule 5 (Expression -> Options Token .)
    ZEROLESS        reduce using rule 5 (Expression -> Options Token .)
    ZEROGREATER     reduce using rule 5 (Expression -> Options Token .)
    FALSE           reduce using rule 5 (Expression -> Options Token .)
    TRUE            reduce using rule 5 (Expression -> Options Token .)
    DO              reduce using rule 5 (Expression -> Options Token .)
    BEGIN           reduce using rule 5 (Expression -> Options Token .)
    I               reduce using rule 5 (Expression -> Options Token .)
    IF              reduce using rule 5 (Expression -> Options Token .)
    VARIABLE        reduce using rule 5 (Expression -> Options Token .)
    ID              reduce using rule 5 (Expression -> Options Token .)
    NUMBER          reduce using rule 5 (Expression -> Options Token .)
    STRING          reduce using rule 5 (Expression -> Options Token .)
    DOT             reduce using rule 5 (Expression -> Options Token .)
    KEY             reduce using rule 5 (Expression -> Options Token .)
    CHAR            reduce using rule 5 (Expression -> Options Token .)
    CR              reduce using rule 5 (Expression -> Options Token .)
    SPACE           reduce using rule 5 (Expression -> Options Token .)
    SPACES          reduce using rule 5 (Expression -> Options Token .)
    EMIT            reduce using rule 5 (Expression -> Options Token .)
    $end            reduce using rule 5 (Expression -> Options Token .)
    LOOP            reduce using rule 5 (Expression -> Options Token .)
    PLUSLOOP        reduce using rule 5 (Expression -> Options Token .)
    UNTIL           reduce using rule 5 (Expression -> Options Token .)
    WHILE           reduce using rule 5 (Expression -> Options Token .)
    ELSE            reduce using rule 5 (Expression -> Options Token .)
    THEN            reduce using rule 5 (Expression -> Options Token .)
    SEMICOLON       reduce using rule 5 (Expression -> Options Token .)
    REPEAT          reduce using rule 5 (Expression -> Options Token .)


state 6

    (4) Function -> Options COLON . ID Options SEMICOLON

    ID              shift and go to state 64


state 7

    (57) Variables -> ID . EXCLAMATION
    (58) Variables -> ID . ATSIGN
    (59) Variables -> ID . QUESTIONMARK
    (60) Variables -> ID .

    EXCLAMATION     shift and go to state 65
    ATSIGN          shift and go to state 66
    QUESTIONMARK    shift and go to state 67
    COLON           reduce using rule 60 (Variables -> ID .)
    PLUS            reduce using rule 60 (Variables -> ID .)
    TIMES           reduce using rule 60 (Variables -> ID .)
    DIVIDE          reduce using rule 60 (Variables -> ID .)
    MINUS           reduce using rule 60 (Variables -> ID .)
    EXP             reduce using rule 60 (Variables -> ID .)
    MOD             reduce using rule 60 (Variables -> ID .)
    DIVMOD          reduce using rule 60 (Variables -> ID .)
    QUICKADDONE     reduce using rule 60 (Variables -> ID .)
    QUICKADDTWO     reduce using rule 60 (Variables -> ID .)
    QUICKSUBONE     reduce using rule 60 (Variables -> ID .)
    QUICKSUBTWO     reduce using rule 60 (Variables -> ID .)
    QUICKMULTWO     reduce using rule 60 (Variables -> ID .)
    QUICKDIVTWO     reduce using rule 60 (Variables -> ID .)
    ABS             reduce using rule 60 (Variables -> ID .)
    NEGATE          reduce using rule 60 (Variables -> ID .)
    MIN             reduce using rule 60 (Variables -> ID .)
    MAX             reduce using rule 60 (Variables -> ID .)
    DUP             reduce using rule 60 (Variables -> ID .)
    2DUP            reduce using rule 60 (Variables -> ID .)
    SWAP            reduce using rule 60 (Variables -> ID .)
    ROT             reduce using rule 60 (Variables -> ID .)
    OVER            reduce using rule 60 (Variables -> ID .)
    DROP            reduce using rule 60 (Variables -> ID .)
    EQUAL           reduce using rule 60 (Variables -> ID .)
    NOTEQUAL        reduce using rule 60 (Variables -> ID .)
    GREATER         reduce using rule 60 (Variables -> ID .)
    LESS            reduce using rule 60 (Variables -> ID .)
    ZEROEQUALS      reduce using rule 60 (Variables -> ID .)
    ZEROLESS        reduce using rule 60 (Variables -> ID .)
    ZEROGREATER     reduce using rule 60 (Variables -> ID .)
    FALSE           reduce using rule 60 (Variables -> ID .)
    TRUE            reduce using rule 60 (Variables -> ID .)
    DO              reduce using rule 60 (Variables -> ID .)
    BEGIN           reduce using rule 60 (Variables -> ID .)
    I               reduce using rule 60 (Variables -> ID .)
    IF              reduce using rule 60 (Variables -> ID .)
    VARIABLE        reduce using rule 60 (Variables -> ID .)
    ID              reduce using rule 60 (Variables -> ID .)
    NUMBER          reduce using rule 60 (Variables -> ID .)
    STRING          reduce using rule 60 (Variables -> ID .)
    DOT             reduce using rule 60 (Variables -> ID .)
    KEY             reduce using rule 60 (Variables -> ID .)
    CHAR            reduce using rule 60 (Variables -> ID .)
    CR              reduce using rule 60 (Variables -> ID .)
    SPACE           reduce using rule 60 (Variables -> ID .)
    SPACES          reduce using rule 60 (Variables -> ID .)
    EMIT            reduce using rule 60 (Variables -> ID .)
    $end            reduce using rule 60 (Variables -> ID .)
    LOOP            reduce using rule 60 (Variables -> ID .)
    PLUSLOOP        reduce using rule 60 (Variables -> ID .)
    UNTIL           reduce using rule 60 (Variables -> ID .)
    WHILE           reduce using rule 60 (Variables -> ID .)
    ELSE            reduce using rule 60 (Variables -> ID .)
    THEN            reduce using rule 60 (Variables -> ID .)
    SEMICOLON       reduce using rule 60 (Variables -> ID .)
    REPEAT          reduce using rule 60 (Variables -> ID .)


state 8

    (7) Token -> Operation .

    COLON           reduce using rule 7 (Token -> Operation .)
    PLUS            reduce using rule 7 (Token -> Operation .)
    TIMES           reduce using rule 7 (Token -> Operation .)
    DIVIDE          reduce using rule 7 (Token -> Operation .)
    MINUS           reduce using rule 7 (Token -> Operation .)
    EXP             reduce using rule 7 (Token -> Operation .)
    MOD             reduce using rule 7 (Token -> Operation .)
    DIVMOD          reduce using rule 7 (Token -> Operation .)
    QUICKADDONE     reduce using rule 7 (Token -> Operation .)
    QUICKADDTWO     reduce using rule 7 (Token -> Operation .)
    QUICKSUBONE     reduce using rule 7 (Token -> Operation .)
    QUICKSUBTWO     reduce using rule 7 (Token -> Operation .)
    QUICKMULTWO     reduce using rule 7 (Token -> Operation .)
    QUICKDIVTWO     reduce using rule 7 (Token -> Operation .)
    ABS             reduce using rule 7 (Token -> Operation .)
    NEGATE          reduce using rule 7 (Token -> Operation .)
    MIN             reduce using rule 7 (Token -> Operation .)
    MAX             reduce using rule 7 (Token -> Operation .)
    DUP             reduce using rule 7 (Token -> Operation .)
    2DUP            reduce using rule 7 (Token -> Operation .)
    SWAP            reduce using rule 7 (Token -> Operation .)
    ROT             reduce using rule 7 (Token -> Operation .)
    OVER            reduce using rule 7 (Token -> Operation .)
    DROP            reduce using rule 7 (Token -> Operation .)
    EQUAL           reduce using rule 7 (Token -> Operation .)
    NOTEQUAL        reduce using rule 7 (Token -> Operation .)
    GREATER         reduce using rule 7 (Token -> Operation .)
    LESS            reduce using rule 7 (Token -> Operation .)
    ZEROEQUALS      reduce using rule 7 (Token -> Operation .)
    ZEROLESS        reduce using rule 7 (Token -> Operation .)
    ZEROGREATER     reduce using rule 7 (Token -> Operation .)
    FALSE           reduce using rule 7 (Token -> Operation .)
    TRUE            reduce using rule 7 (Token -> Operation .)
    DO              reduce using rule 7 (Token -> Operation .)
    BEGIN           reduce using rule 7 (Token -> Operation .)
    I               reduce using rule 7 (Token -> Operation .)
    IF              reduce using rule 7 (Token -> Operation .)
    VARIABLE        reduce using rule 7 (Token -> Operation .)
    ID              reduce using rule 7 (Token -> Operation .)
    NUMBER          reduce using rule 7 (Token -> Operation .)
    STRING          reduce using rule 7 (Token -> Operation .)
    DOT             reduce using rule 7 (Token -> Operation .)
    KEY             reduce using rule 7 (Token -> Operation .)
    CHAR            reduce using rule 7 (Token -> Operation .)
    CR              reduce using rule 7 (Token -> Operation .)
    SPACE           reduce using rule 7 (Token -> Operation .)
    SPACES          reduce using rule 7 (Token -> Operation .)
    EMIT            reduce using rule 7 (Token -> Operation .)
    $end            reduce using rule 7 (Token -> Operation .)
    LOOP            reduce using rule 7 (Token -> Operation .)
    PLUSLOOP        reduce using rule 7 (Token -> Operation .)
    UNTIL           reduce using rule 7 (Token -> Operation .)
    WHILE           reduce using rule 7 (Token -> Operation .)
    ELSE            reduce using rule 7 (Token -> Operation .)
    THEN            reduce using rule 7 (Token -> Operation .)
    SEMICOLON       reduce using rule 7 (Token -> Operation .)
    REPEAT          reduce using rule 7 (Token -> Operation .)


state 9

    (8) Token -> Quickie .

    COLON           reduce using rule 8 (Token -> Quickie .)
    PLUS            reduce using rule 8 (Token -> Quickie .)
    TIMES           reduce using rule 8 (Token -> Quickie .)
    DIVIDE          reduce using rule 8 (Token -> Quickie .)
    MINUS           reduce using rule 8 (Token -> Quickie .)
    EXP             reduce using rule 8 (Token -> Quickie .)
    MOD             reduce using rule 8 (Token -> Quickie .)
    DIVMOD          reduce using rule 8 (Token -> Quickie .)
    QUICKADDONE     reduce using rule 8 (Token -> Quickie .)
    QUICKADDTWO     reduce using rule 8 (Token -> Quickie .)
    QUICKSUBONE     reduce using rule 8 (Token -> Quickie .)
    QUICKSUBTWO     reduce using rule 8 (Token -> Quickie .)
    QUICKMULTWO     reduce using rule 8 (Token -> Quickie .)
    QUICKDIVTWO     reduce using rule 8 (Token -> Quickie .)
    ABS             reduce using rule 8 (Token -> Quickie .)
    NEGATE          reduce using rule 8 (Token -> Quickie .)
    MIN             reduce using rule 8 (Token -> Quickie .)
    MAX             reduce using rule 8 (Token -> Quickie .)
    DUP             reduce using rule 8 (Token -> Quickie .)
    2DUP            reduce using rule 8 (Token -> Quickie .)
    SWAP            reduce using rule 8 (Token -> Quickie .)
    ROT             reduce using rule 8 (Token -> Quickie .)
    OVER            reduce using rule 8 (Token -> Quickie .)
    DROP            reduce using rule 8 (Token -> Quickie .)
    EQUAL           reduce using rule 8 (Token -> Quickie .)
    NOTEQUAL        reduce using rule 8 (Token -> Quickie .)
    GREATER         reduce using rule 8 (Token -> Quickie .)
    LESS            reduce using rule 8 (Token -> Quickie .)
    ZEROEQUALS      reduce using rule 8 (Token -> Quickie .)
    ZEROLESS        reduce using rule 8 (Token -> Quickie .)
    ZEROGREATER     reduce using rule 8 (Token -> Quickie .)
    FALSE           reduce using rule 8 (Token -> Quickie .)
    TRUE            reduce using rule 8 (Token -> Quickie .)
    DO              reduce using rule 8 (Token -> Quickie .)
    BEGIN           reduce using rule 8 (Token -> Quickie .)
    I               reduce using rule 8 (Token -> Quickie .)
    IF              reduce using rule 8 (Token -> Quickie .)
    VARIABLE        reduce using rule 8 (Token -> Quickie .)
    ID              reduce using rule 8 (Token -> Quickie .)
    NUMBER          reduce using rule 8 (Token -> Quickie .)
    STRING          reduce using rule 8 (Token -> Quickie .)
    DOT             reduce using rule 8 (Token -> Quickie .)
    KEY             reduce using rule 8 (Token -> Quickie .)
    CHAR            reduce using rule 8 (Token -> Quickie .)
    CR              reduce using rule 8 (Token -> Quickie .)
    SPACE           reduce using rule 8 (Token -> Quickie .)
    SPACES          reduce using rule 8 (Token -> Quickie .)
    EMIT            reduce using rule 8 (Token -> Quickie .)
    $end            reduce using rule 8 (Token -> Quickie .)
    LOOP            reduce using rule 8 (Token -> Quickie .)
    PLUSLOOP        reduce using rule 8 (Token -> Quickie .)
    UNTIL           reduce using rule 8 (Token -> Quickie .)
    WHILE           reduce using rule 8 (Token -> Quickie .)
    ELSE            reduce using rule 8 (Token -> Quickie .)
    THEN            reduce using rule 8 (Token -> Quickie .)
    SEMICOLON       reduce using rule 8 (Token -> Quickie .)
    REPEAT          reduce using rule 8 (Token -> Quickie .)


state 10

    (9) Token -> Misk .

    COLON           reduce using rule 9 (Token -> Misk .)
    PLUS            reduce using rule 9 (Token -> Misk .)
    TIMES           reduce using rule 9 (Token -> Misk .)
    DIVIDE          reduce using rule 9 (Token -> Misk .)
    MINUS           reduce using rule 9 (Token -> Misk .)
    EXP             reduce using rule 9 (Token -> Misk .)
    MOD             reduce using rule 9 (Token -> Misk .)
    DIVMOD          reduce using rule 9 (Token -> Misk .)
    QUICKADDONE     reduce using rule 9 (Token -> Misk .)
    QUICKADDTWO     reduce using rule 9 (Token -> Misk .)
    QUICKSUBONE     reduce using rule 9 (Token -> Misk .)
    QUICKSUBTWO     reduce using rule 9 (Token -> Misk .)
    QUICKMULTWO     reduce using rule 9 (Token -> Misk .)
    QUICKDIVTWO     reduce using rule 9 (Token -> Misk .)
    ABS             reduce using rule 9 (Token -> Misk .)
    NEGATE          reduce using rule 9 (Token -> Misk .)
    MIN             reduce using rule 9 (Token -> Misk .)
    MAX             reduce using rule 9 (Token -> Misk .)
    DUP             reduce using rule 9 (Token -> Misk .)
    2DUP            reduce using rule 9 (Token -> Misk .)
    SWAP            reduce using rule 9 (Token -> Misk .)
    ROT             reduce using rule 9 (Token -> Misk .)
    OVER            reduce using rule 9 (Token -> Misk .)
    DROP            reduce using rule 9 (Token -> Misk .)
    EQUAL           reduce using rule 9 (Token -> Misk .)
    NOTEQUAL        reduce using rule 9 (Token -> Misk .)
    GREATER         reduce using rule 9 (Token -> Misk .)
    LESS            reduce using rule 9 (Token -> Misk .)
    ZEROEQUALS      reduce using rule 9 (Token -> Misk .)
    ZEROLESS        reduce using rule 9 (Token -> Misk .)
    ZEROGREATER     reduce using rule 9 (Token -> Misk .)
    FALSE           reduce using rule 9 (Token -> Misk .)
    TRUE            reduce using rule 9 (Token -> Misk .)
    DO              reduce using rule 9 (Token -> Misk .)
    BEGIN           reduce using rule 9 (Token -> Misk .)
    I               reduce using rule 9 (Token -> Misk .)
    IF              reduce using rule 9 (Token -> Misk .)
    VARIABLE        reduce using rule 9 (Token -> Misk .)
    ID              reduce using rule 9 (Token -> Misk .)
    NUMBER          reduce using rule 9 (Token -> Misk .)
    STRING          reduce using rule 9 (Token -> Misk .)
    DOT             reduce using rule 9 (Token -> Misk .)
    KEY             reduce using rule 9 (Token -> Misk .)
    CHAR            reduce using rule 9 (Token -> Misk .)
    CR              reduce using rule 9 (Token -> Misk .)
    SPACE           reduce using rule 9 (Token -> Misk .)
    SPACES          reduce using rule 9 (Token -> Misk .)
    EMIT            reduce using rule 9 (Token -> Misk .)
    $end            reduce using rule 9 (Token -> Misk .)
    LOOP            reduce using rule 9 (Token -> Misk .)
    PLUSLOOP        reduce using rule 9 (Token -> Misk .)
    UNTIL           reduce using rule 9 (Token -> Misk .)
    WHILE           reduce using rule 9 (Token -> Misk .)
    ELSE            reduce using rule 9 (Token -> Misk .)
    THEN            reduce using rule 9 (Token -> Misk .)
    SEMICOLON       reduce using rule 9 (Token -> Misk .)
    REPEAT          reduce using rule 9 (Token -> Misk .)


state 11

    (10) Token -> Manuver .

    COLON           reduce using rule 10 (Token -> Manuver .)
    PLUS            reduce using rule 10 (Token -> Manuver .)
    TIMES           reduce using rule 10 (Token -> Manuver .)
    DIVIDE          reduce using rule 10 (Token -> Manuver .)
    MINUS           reduce using rule 10 (Token -> Manuver .)
    EXP             reduce using rule 10 (Token -> Manuver .)
    MOD             reduce using rule 10 (Token -> Manuver .)
    DIVMOD          reduce using rule 10 (Token -> Manuver .)
    QUICKADDONE     reduce using rule 10 (Token -> Manuver .)
    QUICKADDTWO     reduce using rule 10 (Token -> Manuver .)
    QUICKSUBONE     reduce using rule 10 (Token -> Manuver .)
    QUICKSUBTWO     reduce using rule 10 (Token -> Manuver .)
    QUICKMULTWO     reduce using rule 10 (Token -> Manuver .)
    QUICKDIVTWO     reduce using rule 10 (Token -> Manuver .)
    ABS             reduce using rule 10 (Token -> Manuver .)
    NEGATE          reduce using rule 10 (Token -> Manuver .)
    MIN             reduce using rule 10 (Token -> Manuver .)
    MAX             reduce using rule 10 (Token -> Manuver .)
    DUP             reduce using rule 10 (Token -> Manuver .)
    2DUP            reduce using rule 10 (Token -> Manuver .)
    SWAP            reduce using rule 10 (Token -> Manuver .)
    ROT             reduce using rule 10 (Token -> Manuver .)
    OVER            reduce using rule 10 (Token -> Manuver .)
    DROP            reduce using rule 10 (Token -> Manuver .)
    EQUAL           reduce using rule 10 (Token -> Manuver .)
    NOTEQUAL        reduce using rule 10 (Token -> Manuver .)
    GREATER         reduce using rule 10 (Token -> Manuver .)
    LESS            reduce using rule 10 (Token -> Manuver .)
    ZEROEQUALS      reduce using rule 10 (Token -> Manuver .)
    ZEROLESS        reduce using rule 10 (Token -> Manuver .)
    ZEROGREATER     reduce using rule 10 (Token -> Manuver .)
    FALSE           reduce using rule 10 (Token -> Manuver .)
    TRUE            reduce using rule 10 (Token -> Manuver .)
    DO              reduce using rule 10 (Token -> Manuver .)
    BEGIN           reduce using rule 10 (Token -> Manuver .)
    I               reduce using rule 10 (Token -> Manuver .)
    IF              reduce using rule 10 (Token -> Manuver .)
    VARIABLE        reduce using rule 10 (Token -> Manuver .)
    ID              reduce using rule 10 (Token -> Manuver .)
    NUMBER          reduce using rule 10 (Token -> Manuver .)
    STRING          reduce using rule 10 (Token -> Manuver .)
    DOT             reduce using rule 10 (Token -> Manuver .)
    KEY             reduce using rule 10 (Token -> Manuver .)
    CHAR            reduce using rule 10 (Token -> Manuver .)
    CR              reduce using rule 10 (Token -> Manuver .)
    SPACE           reduce using rule 10 (Token -> Manuver .)
    SPACES          reduce using rule 10 (Token -> Manuver .)
    EMIT            reduce using rule 10 (Token -> Manuver .)
    $end            reduce using rule 10 (Token -> Manuver .)
    LOOP            reduce using rule 10 (Token -> Manuver .)
    PLUSLOOP        reduce using rule 10 (Token -> Manuver .)
    UNTIL           reduce using rule 10 (Token -> Manuver .)
    WHILE           reduce using rule 10 (Token -> Manuver .)
    ELSE            reduce using rule 10 (Token -> Manuver .)
    THEN            reduce using rule 10 (Token -> Manuver .)
    SEMICOLON       reduce using rule 10 (Token -> Manuver .)
    REPEAT          reduce using rule 10 (Token -> Manuver .)


state 12

    (11) Token -> Logic .

    COLON           reduce using rule 11 (Token -> Logic .)
    PLUS            reduce using rule 11 (Token -> Logic .)
    TIMES           reduce using rule 11 (Token -> Logic .)
    DIVIDE          reduce using rule 11 (Token -> Logic .)
    MINUS           reduce using rule 11 (Token -> Logic .)
    EXP             reduce using rule 11 (Token -> Logic .)
    MOD             reduce using rule 11 (Token -> Logic .)
    DIVMOD          reduce using rule 11 (Token -> Logic .)
    QUICKADDONE     reduce using rule 11 (Token -> Logic .)
    QUICKADDTWO     reduce using rule 11 (Token -> Logic .)
    QUICKSUBONE     reduce using rule 11 (Token -> Logic .)
    QUICKSUBTWO     reduce using rule 11 (Token -> Logic .)
    QUICKMULTWO     reduce using rule 11 (Token -> Logic .)
    QUICKDIVTWO     reduce using rule 11 (Token -> Logic .)
    ABS             reduce using rule 11 (Token -> Logic .)
    NEGATE          reduce using rule 11 (Token -> Logic .)
    MIN             reduce using rule 11 (Token -> Logic .)
    MAX             reduce using rule 11 (Token -> Logic .)
    DUP             reduce using rule 11 (Token -> Logic .)
    2DUP            reduce using rule 11 (Token -> Logic .)
    SWAP            reduce using rule 11 (Token -> Logic .)
    ROT             reduce using rule 11 (Token -> Logic .)
    OVER            reduce using rule 11 (Token -> Logic .)
    DROP            reduce using rule 11 (Token -> Logic .)
    EQUAL           reduce using rule 11 (Token -> Logic .)
    NOTEQUAL        reduce using rule 11 (Token -> Logic .)
    GREATER         reduce using rule 11 (Token -> Logic .)
    LESS            reduce using rule 11 (Token -> Logic .)
    ZEROEQUALS      reduce using rule 11 (Token -> Logic .)
    ZEROLESS        reduce using rule 11 (Token -> Logic .)
    ZEROGREATER     reduce using rule 11 (Token -> Logic .)
    FALSE           reduce using rule 11 (Token -> Logic .)
    TRUE            reduce using rule 11 (Token -> Logic .)
    DO              reduce using rule 11 (Token -> Logic .)
    BEGIN           reduce using rule 11 (Token -> Logic .)
    I               reduce using rule 11 (Token -> Logic .)
    IF              reduce using rule 11 (Token -> Logic .)
    VARIABLE        reduce using rule 11 (Token -> Logic .)
    ID              reduce using rule 11 (Token -> Logic .)
    NUMBER          reduce using rule 11 (Token -> Logic .)
    STRING          reduce using rule 11 (Token -> Logic .)
    DOT             reduce using rule 11 (Token -> Logic .)
    KEY             reduce using rule 11 (Token -> Logic .)
    CHAR            reduce using rule 11 (Token -> Logic .)
    CR              reduce using rule 11 (Token -> Logic .)
    SPACE           reduce using rule 11 (Token -> Logic .)
    SPACES          reduce using rule 11 (Token -> Logic .)
    EMIT            reduce using rule 11 (Token -> Logic .)
    $end            reduce using rule 11 (Token -> Logic .)
    LOOP            reduce using rule 11 (Token -> Logic .)
    PLUSLOOP        reduce using rule 11 (Token -> Logic .)
    UNTIL           reduce using rule 11 (Token -> Logic .)
    WHILE           reduce using rule 11 (Token -> Logic .)
    ELSE            reduce using rule 11 (Token -> Logic .)
    THEN            reduce using rule 11 (Token -> Logic .)
    SEMICOLON       reduce using rule 11 (Token -> Logic .)
    REPEAT          reduce using rule 11 (Token -> Logic .)


state 13

    (12) Token -> Loop .

    COLON           reduce using rule 12 (Token -> Loop .)
    PLUS            reduce using rule 12 (Token -> Loop .)
    TIMES           reduce using rule 12 (Token -> Loop .)
    DIVIDE          reduce using rule 12 (Token -> Loop .)
    MINUS           reduce using rule 12 (Token -> Loop .)
    EXP             reduce using rule 12 (Token -> Loop .)
    MOD             reduce using rule 12 (Token -> Loop .)
    DIVMOD          reduce using rule 12 (Token -> Loop .)
    QUICKADDONE     reduce using rule 12 (Token -> Loop .)
    QUICKADDTWO     reduce using rule 12 (Token -> Loop .)
    QUICKSUBONE     reduce using rule 12 (Token -> Loop .)
    QUICKSUBTWO     reduce using rule 12 (Token -> Loop .)
    QUICKMULTWO     reduce using rule 12 (Token -> Loop .)
    QUICKDIVTWO     reduce using rule 12 (Token -> Loop .)
    ABS             reduce using rule 12 (Token -> Loop .)
    NEGATE          reduce using rule 12 (Token -> Loop .)
    MIN             reduce using rule 12 (Token -> Loop .)
    MAX             reduce using rule 12 (Token -> Loop .)
    DUP             reduce using rule 12 (Token -> Loop .)
    2DUP            reduce using rule 12 (Token -> Loop .)
    SWAP            reduce using rule 12 (Token -> Loop .)
    ROT             reduce using rule 12 (Token -> Loop .)
    OVER            reduce using rule 12 (Token -> Loop .)
    DROP            reduce using rule 12 (Token -> Loop .)
    EQUAL           reduce using rule 12 (Token -> Loop .)
    NOTEQUAL        reduce using rule 12 (Token -> Loop .)
    GREATER         reduce using rule 12 (Token -> Loop .)
    LESS            reduce using rule 12 (Token -> Loop .)
    ZEROEQUALS      reduce using rule 12 (Token -> Loop .)
    ZEROLESS        reduce using rule 12 (Token -> Loop .)
    ZEROGREATER     reduce using rule 12 (Token -> Loop .)
    FALSE           reduce using rule 12 (Token -> Loop .)
    TRUE            reduce using rule 12 (Token -> Loop .)
    DO              reduce using rule 12 (Token -> Loop .)
    BEGIN           reduce using rule 12 (Token -> Loop .)
    I               reduce using rule 12 (Token -> Loop .)
    IF              reduce using rule 12 (Token -> Loop .)
    VARIABLE        reduce using rule 12 (Token -> Loop .)
    ID              reduce using rule 12 (Token -> Loop .)
    NUMBER          reduce using rule 12 (Token -> Loop .)
    STRING          reduce using rule 12 (Token -> Loop .)
    DOT             reduce using rule 12 (Token -> Loop .)
    KEY             reduce using rule 12 (Token -> Loop .)
    CHAR            reduce using rule 12 (Token -> Loop .)
    CR              reduce using rule 12 (Token -> Loop .)
    SPACE           reduce using rule 12 (Token -> Loop .)
    SPACES          reduce using rule 12 (Token -> Loop .)
    EMIT            reduce using rule 12 (Token -> Loop .)
    $end            reduce using rule 12 (Token -> Loop .)
    LOOP            reduce using rule 12 (Token -> Loop .)
    PLUSLOOP        reduce using rule 12 (Token -> Loop .)
    UNTIL           reduce using rule 12 (Token -> Loop .)
    WHILE           reduce using rule 12 (Token -> Loop .)
    ELSE            reduce using rule 12 (Token -> Loop .)
    THEN            reduce using rule 12 (Token -> Loop .)
    SEMICOLON       reduce using rule 12 (Token -> Loop .)
    REPEAT          reduce using rule 12 (Token -> Loop .)


state 14

    (13) Token -> Condition .

    COLON           reduce using rule 13 (Token -> Condition .)
    PLUS            reduce using rule 13 (Token -> Condition .)
    TIMES           reduce using rule 13 (Token -> Condition .)
    DIVIDE          reduce using rule 13 (Token -> Condition .)
    MINUS           reduce using rule 13 (Token -> Condition .)
    EXP             reduce using rule 13 (Token -> Condition .)
    MOD             reduce using rule 13 (Token -> Condition .)
    DIVMOD          reduce using rule 13 (Token -> Condition .)
    QUICKADDONE     reduce using rule 13 (Token -> Condition .)
    QUICKADDTWO     reduce using rule 13 (Token -> Condition .)
    QUICKSUBONE     reduce using rule 13 (Token -> Condition .)
    QUICKSUBTWO     reduce using rule 13 (Token -> Condition .)
    QUICKMULTWO     reduce using rule 13 (Token -> Condition .)
    QUICKDIVTWO     reduce using rule 13 (Token -> Condition .)
    ABS             reduce using rule 13 (Token -> Condition .)
    NEGATE          reduce using rule 13 (Token -> Condition .)
    MIN             reduce using rule 13 (Token -> Condition .)
    MAX             reduce using rule 13 (Token -> Condition .)
    DUP             reduce using rule 13 (Token -> Condition .)
    2DUP            reduce using rule 13 (Token -> Condition .)
    SWAP            reduce using rule 13 (Token -> Condition .)
    ROT             reduce using rule 13 (Token -> Condition .)
    OVER            reduce using rule 13 (Token -> Condition .)
    DROP            reduce using rule 13 (Token -> Condition .)
    EQUAL           reduce using rule 13 (Token -> Condition .)
    NOTEQUAL        reduce using rule 13 (Token -> Condition .)
    GREATER         reduce using rule 13 (Token -> Condition .)
    LESS            reduce using rule 13 (Token -> Condition .)
    ZEROEQUALS      reduce using rule 13 (Token -> Condition .)
    ZEROLESS        reduce using rule 13 (Token -> Condition .)
    ZEROGREATER     reduce using rule 13 (Token -> Condition .)
    FALSE           reduce using rule 13 (Token -> Condition .)
    TRUE            reduce using rule 13 (Token -> Condition .)
    DO              reduce using rule 13 (Token -> Condition .)
    BEGIN           reduce using rule 13 (Token -> Condition .)
    I               reduce using rule 13 (Token -> Condition .)
    IF              reduce using rule 13 (Token -> Condition .)
    VARIABLE        reduce using rule 13 (Token -> Condition .)
    ID              reduce using rule 13 (Token -> Condition .)
    NUMBER          reduce using rule 13 (Token -> Condition .)
    STRING          reduce using rule 13 (Token -> Condition .)
    DOT             reduce using rule 13 (Token -> Condition .)
    KEY             reduce using rule 13 (Token -> Condition .)
    CHAR            reduce using rule 13 (Token -> Condition .)
    CR              reduce using rule 13 (Token -> Condition .)
    SPACE           reduce using rule 13 (Token -> Condition .)
    SPACES          reduce using rule 13 (Token -> Condition .)
    EMIT            reduce using rule 13 (Token -> Condition .)
    $end            reduce using rule 13 (Token -> Condition .)
    LOOP            reduce using rule 13 (Token -> Condition .)
    PLUSLOOP        reduce using rule 13 (Token -> Condition .)
    UNTIL           reduce using rule 13 (Token -> Condition .)
    WHILE           reduce using rule 13 (Token -> Condition .)
    ELSE            reduce using rule 13 (Token -> Condition .)
    THEN            reduce using rule 13 (Token -> Condition .)
    SEMICOLON       reduce using rule 13 (Token -> Condition .)
    REPEAT          reduce using rule 13 (Token -> Condition .)


state 15

    (14) Token -> Variables .

    COLON           reduce using rule 14 (Token -> Variables .)
    PLUS            reduce using rule 14 (Token -> Variables .)
    TIMES           reduce using rule 14 (Token -> Variables .)
    DIVIDE          reduce using rule 14 (Token -> Variables .)
    MINUS           reduce using rule 14 (Token -> Variables .)
    EXP             reduce using rule 14 (Token -> Variables .)
    MOD             reduce using rule 14 (Token -> Variables .)
    DIVMOD          reduce using rule 14 (Token -> Variables .)
    QUICKADDONE     reduce using rule 14 (Token -> Variables .)
    QUICKADDTWO     reduce using rule 14 (Token -> Variables .)
    QUICKSUBONE     reduce using rule 14 (Token -> Variables .)
    QUICKSUBTWO     reduce using rule 14 (Token -> Variables .)
    QUICKMULTWO     reduce using rule 14 (Token -> Variables .)
    QUICKDIVTWO     reduce using rule 14 (Token -> Variables .)
    ABS             reduce using rule 14 (Token -> Variables .)
    NEGATE          reduce using rule 14 (Token -> Variables .)
    MIN             reduce using rule 14 (Token -> Variables .)
    MAX             reduce using rule 14 (Token -> Variables .)
    DUP             reduce using rule 14 (Token -> Variables .)
    2DUP            reduce using rule 14 (Token -> Variables .)
    SWAP            reduce using rule 14 (Token -> Variables .)
    ROT             reduce using rule 14 (Token -> Variables .)
    OVER            reduce using rule 14 (Token -> Variables .)
    DROP            reduce using rule 14 (Token -> Variables .)
    EQUAL           reduce using rule 14 (Token -> Variables .)
    NOTEQUAL        reduce using rule 14 (Token -> Variables .)
    GREATER         reduce using rule 14 (Token -> Variables .)
    LESS            reduce using rule 14 (Token -> Variables .)
    ZEROEQUALS      reduce using rule 14 (Token -> Variables .)
    ZEROLESS        reduce using rule 14 (Token -> Variables .)
    ZEROGREATER     reduce using rule 14 (Token -> Variables .)
    FALSE           reduce using rule 14 (Token -> Variables .)
    TRUE            reduce using rule 14 (Token -> Variables .)
    DO              reduce using rule 14 (Token -> Variables .)
    BEGIN           reduce using rule 14 (Token -> Variables .)
    I               reduce using rule 14 (Token -> Variables .)
    IF              reduce using rule 14 (Token -> Variables .)
    VARIABLE        reduce using rule 14 (Token -> Variables .)
    ID              reduce using rule 14 (Token -> Variables .)
    NUMBER          reduce using rule 14 (Token -> Variables .)
    STRING          reduce using rule 14 (Token -> Variables .)
    DOT             reduce using rule 14 (Token -> Variables .)
    KEY             reduce using rule 14 (Token -> Variables .)
    CHAR            reduce using rule 14 (Token -> Variables .)
    CR              reduce using rule 14 (Token -> Variables .)
    SPACE           reduce using rule 14 (Token -> Variables .)
    SPACES          reduce using rule 14 (Token -> Variables .)
    EMIT            reduce using rule 14 (Token -> Variables .)
    $end            reduce using rule 14 (Token -> Variables .)
    LOOP            reduce using rule 14 (Token -> Variables .)
    PLUSLOOP        reduce using rule 14 (Token -> Variables .)
    UNTIL           reduce using rule 14 (Token -> Variables .)
    WHILE           reduce using rule 14 (Token -> Variables .)
    ELSE            reduce using rule 14 (Token -> Variables .)
    THEN            reduce using rule 14 (Token -> Variables .)
    SEMICOLON       reduce using rule 14 (Token -> Variables .)
    REPEAT          reduce using rule 14 (Token -> Variables .)


state 16

    (15) Token -> Elem .

    COLON           reduce using rule 15 (Token -> Elem .)
    PLUS            reduce using rule 15 (Token -> Elem .)
    TIMES           reduce using rule 15 (Token -> Elem .)
    DIVIDE          reduce using rule 15 (Token -> Elem .)
    MINUS           reduce using rule 15 (Token -> Elem .)
    EXP             reduce using rule 15 (Token -> Elem .)
    MOD             reduce using rule 15 (Token -> Elem .)
    DIVMOD          reduce using rule 15 (Token -> Elem .)
    QUICKADDONE     reduce using rule 15 (Token -> Elem .)
    QUICKADDTWO     reduce using rule 15 (Token -> Elem .)
    QUICKSUBONE     reduce using rule 15 (Token -> Elem .)
    QUICKSUBTWO     reduce using rule 15 (Token -> Elem .)
    QUICKMULTWO     reduce using rule 15 (Token -> Elem .)
    QUICKDIVTWO     reduce using rule 15 (Token -> Elem .)
    ABS             reduce using rule 15 (Token -> Elem .)
    NEGATE          reduce using rule 15 (Token -> Elem .)
    MIN             reduce using rule 15 (Token -> Elem .)
    MAX             reduce using rule 15 (Token -> Elem .)
    DUP             reduce using rule 15 (Token -> Elem .)
    2DUP            reduce using rule 15 (Token -> Elem .)
    SWAP            reduce using rule 15 (Token -> Elem .)
    ROT             reduce using rule 15 (Token -> Elem .)
    OVER            reduce using rule 15 (Token -> Elem .)
    DROP            reduce using rule 15 (Token -> Elem .)
    EQUAL           reduce using rule 15 (Token -> Elem .)
    NOTEQUAL        reduce using rule 15 (Token -> Elem .)
    GREATER         reduce using rule 15 (Token -> Elem .)
    LESS            reduce using rule 15 (Token -> Elem .)
    ZEROEQUALS      reduce using rule 15 (Token -> Elem .)
    ZEROLESS        reduce using rule 15 (Token -> Elem .)
    ZEROGREATER     reduce using rule 15 (Token -> Elem .)
    FALSE           reduce using rule 15 (Token -> Elem .)
    TRUE            reduce using rule 15 (Token -> Elem .)
    DO              reduce using rule 15 (Token -> Elem .)
    BEGIN           reduce using rule 15 (Token -> Elem .)
    I               reduce using rule 15 (Token -> Elem .)
    IF              reduce using rule 15 (Token -> Elem .)
    VARIABLE        reduce using rule 15 (Token -> Elem .)
    ID              reduce using rule 15 (Token -> Elem .)
    NUMBER          reduce using rule 15 (Token -> Elem .)
    STRING          reduce using rule 15 (Token -> Elem .)
    DOT             reduce using rule 15 (Token -> Elem .)
    KEY             reduce using rule 15 (Token -> Elem .)
    CHAR            reduce using rule 15 (Token -> Elem .)
    CR              reduce using rule 15 (Token -> Elem .)
    SPACE           reduce using rule 15 (Token -> Elem .)
    SPACES          reduce using rule 15 (Token -> Elem .)
    EMIT            reduce using rule 15 (Token -> Elem .)
    $end            reduce using rule 15 (Token -> Elem .)
    LOOP            reduce using rule 15 (Token -> Elem .)
    PLUSLOOP        reduce using rule 15 (Token -> Elem .)
    UNTIL           reduce using rule 15 (Token -> Elem .)
    WHILE           reduce using rule 15 (Token -> Elem .)
    ELSE            reduce using rule 15 (Token -> Elem .)
    THEN            reduce using rule 15 (Token -> Elem .)
    SEMICOLON       reduce using rule 15 (Token -> Elem .)
    REPEAT          reduce using rule 15 (Token -> Elem .)


state 17

    (16) Token -> Io .

    COLON           reduce using rule 16 (Token -> Io .)
    PLUS            reduce using rule 16 (Token -> Io .)
    TIMES           reduce using rule 16 (Token -> Io .)
    DIVIDE          reduce using rule 16 (Token -> Io .)
    MINUS           reduce using rule 16 (Token -> Io .)
    EXP             reduce using rule 16 (Token -> Io .)
    MOD             reduce using rule 16 (Token -> Io .)
    DIVMOD          reduce using rule 16 (Token -> Io .)
    QUICKADDONE     reduce using rule 16 (Token -> Io .)
    QUICKADDTWO     reduce using rule 16 (Token -> Io .)
    QUICKSUBONE     reduce using rule 16 (Token -> Io .)
    QUICKSUBTWO     reduce using rule 16 (Token -> Io .)
    QUICKMULTWO     reduce using rule 16 (Token -> Io .)
    QUICKDIVTWO     reduce using rule 16 (Token -> Io .)
    ABS             reduce using rule 16 (Token -> Io .)
    NEGATE          reduce using rule 16 (Token -> Io .)
    MIN             reduce using rule 16 (Token -> Io .)
    MAX             reduce using rule 16 (Token -> Io .)
    DUP             reduce using rule 16 (Token -> Io .)
    2DUP            reduce using rule 16 (Token -> Io .)
    SWAP            reduce using rule 16 (Token -> Io .)
    ROT             reduce using rule 16 (Token -> Io .)
    OVER            reduce using rule 16 (Token -> Io .)
    DROP            reduce using rule 16 (Token -> Io .)
    EQUAL           reduce using rule 16 (Token -> Io .)
    NOTEQUAL        reduce using rule 16 (Token -> Io .)
    GREATER         reduce using rule 16 (Token -> Io .)
    LESS            reduce using rule 16 (Token -> Io .)
    ZEROEQUALS      reduce using rule 16 (Token -> Io .)
    ZEROLESS        reduce using rule 16 (Token -> Io .)
    ZEROGREATER     reduce using rule 16 (Token -> Io .)
    FALSE           reduce using rule 16 (Token -> Io .)
    TRUE            reduce using rule 16 (Token -> Io .)
    DO              reduce using rule 16 (Token -> Io .)
    BEGIN           reduce using rule 16 (Token -> Io .)
    I               reduce using rule 16 (Token -> Io .)
    IF              reduce using rule 16 (Token -> Io .)
    VARIABLE        reduce using rule 16 (Token -> Io .)
    ID              reduce using rule 16 (Token -> Io .)
    NUMBER          reduce using rule 16 (Token -> Io .)
    STRING          reduce using rule 16 (Token -> Io .)
    DOT             reduce using rule 16 (Token -> Io .)
    KEY             reduce using rule 16 (Token -> Io .)
    CHAR            reduce using rule 16 (Token -> Io .)
    CR              reduce using rule 16 (Token -> Io .)
    SPACE           reduce using rule 16 (Token -> Io .)
    SPACES          reduce using rule 16 (Token -> Io .)
    EMIT            reduce using rule 16 (Token -> Io .)
    $end            reduce using rule 16 (Token -> Io .)
    LOOP            reduce using rule 16 (Token -> Io .)
    PLUSLOOP        reduce using rule 16 (Token -> Io .)
    UNTIL           reduce using rule 16 (Token -> Io .)
    WHILE           reduce using rule 16 (Token -> Io .)
    ELSE            reduce using rule 16 (Token -> Io .)
    THEN            reduce using rule 16 (Token -> Io .)
    SEMICOLON       reduce using rule 16 (Token -> Io .)
    REPEAT          reduce using rule 16 (Token -> Io .)


state 18

    (17) Operation -> PLUS .

    COLON           reduce using rule 17 (Operation -> PLUS .)
    PLUS            reduce using rule 17 (Operation -> PLUS .)
    TIMES           reduce using rule 17 (Operation -> PLUS .)
    DIVIDE          reduce using rule 17 (Operation -> PLUS .)
    MINUS           reduce using rule 17 (Operation -> PLUS .)
    EXP             reduce using rule 17 (Operation -> PLUS .)
    MOD             reduce using rule 17 (Operation -> PLUS .)
    DIVMOD          reduce using rule 17 (Operation -> PLUS .)
    QUICKADDONE     reduce using rule 17 (Operation -> PLUS .)
    QUICKADDTWO     reduce using rule 17 (Operation -> PLUS .)
    QUICKSUBONE     reduce using rule 17 (Operation -> PLUS .)
    QUICKSUBTWO     reduce using rule 17 (Operation -> PLUS .)
    QUICKMULTWO     reduce using rule 17 (Operation -> PLUS .)
    QUICKDIVTWO     reduce using rule 17 (Operation -> PLUS .)
    ABS             reduce using rule 17 (Operation -> PLUS .)
    NEGATE          reduce using rule 17 (Operation -> PLUS .)
    MIN             reduce using rule 17 (Operation -> PLUS .)
    MAX             reduce using rule 17 (Operation -> PLUS .)
    DUP             reduce using rule 17 (Operation -> PLUS .)
    2DUP            reduce using rule 17 (Operation -> PLUS .)
    SWAP            reduce using rule 17 (Operation -> PLUS .)
    ROT             reduce using rule 17 (Operation -> PLUS .)
    OVER            reduce using rule 17 (Operation -> PLUS .)
    DROP            reduce using rule 17 (Operation -> PLUS .)
    EQUAL           reduce using rule 17 (Operation -> PLUS .)
    NOTEQUAL        reduce using rule 17 (Operation -> PLUS .)
    GREATER         reduce using rule 17 (Operation -> PLUS .)
    LESS            reduce using rule 17 (Operation -> PLUS .)
    ZEROEQUALS      reduce using rule 17 (Operation -> PLUS .)
    ZEROLESS        reduce using rule 17 (Operation -> PLUS .)
    ZEROGREATER     reduce using rule 17 (Operation -> PLUS .)
    FALSE           reduce using rule 17 (Operation -> PLUS .)
    TRUE            reduce using rule 17 (Operation -> PLUS .)
    DO              reduce using rule 17 (Operation -> PLUS .)
    BEGIN           reduce using rule 17 (Operation -> PLUS .)
    I               reduce using rule 17 (Operation -> PLUS .)
    IF              reduce using rule 17 (Operation -> PLUS .)
    VARIABLE        reduce using rule 17 (Operation -> PLUS .)
    ID              reduce using rule 17 (Operation -> PLUS .)
    NUMBER          reduce using rule 17 (Operation -> PLUS .)
    STRING          reduce using rule 17 (Operation -> PLUS .)
    DOT             reduce using rule 17 (Operation -> PLUS .)
    KEY             reduce using rule 17 (Operation -> PLUS .)
    CHAR            reduce using rule 17 (Operation -> PLUS .)
    CR              reduce using rule 17 (Operation -> PLUS .)
    SPACE           reduce using rule 17 (Operation -> PLUS .)
    SPACES          reduce using rule 17 (Operation -> PLUS .)
    EMIT            reduce using rule 17 (Operation -> PLUS .)
    $end            reduce using rule 17 (Operation -> PLUS .)
    LOOP            reduce using rule 17 (Operation -> PLUS .)
    PLUSLOOP        reduce using rule 17 (Operation -> PLUS .)
    UNTIL           reduce using rule 17 (Operation -> PLUS .)
    WHILE           reduce using rule 17 (Operation -> PLUS .)
    ELSE            reduce using rule 17 (Operation -> PLUS .)
    THEN            reduce using rule 17 (Operation -> PLUS .)
    SEMICOLON       reduce using rule 17 (Operation -> PLUS .)
    REPEAT          reduce using rule 17 (Operation -> PLUS .)


state 19

    (18) Operation -> TIMES .

    COLON           reduce using rule 18 (Operation -> TIMES .)
    PLUS            reduce using rule 18 (Operation -> TIMES .)
    TIMES           reduce using rule 18 (Operation -> TIMES .)
    DIVIDE          reduce using rule 18 (Operation -> TIMES .)
    MINUS           reduce using rule 18 (Operation -> TIMES .)
    EXP             reduce using rule 18 (Operation -> TIMES .)
    MOD             reduce using rule 18 (Operation -> TIMES .)
    DIVMOD          reduce using rule 18 (Operation -> TIMES .)
    QUICKADDONE     reduce using rule 18 (Operation -> TIMES .)
    QUICKADDTWO     reduce using rule 18 (Operation -> TIMES .)
    QUICKSUBONE     reduce using rule 18 (Operation -> TIMES .)
    QUICKSUBTWO     reduce using rule 18 (Operation -> TIMES .)
    QUICKMULTWO     reduce using rule 18 (Operation -> TIMES .)
    QUICKDIVTWO     reduce using rule 18 (Operation -> TIMES .)
    ABS             reduce using rule 18 (Operation -> TIMES .)
    NEGATE          reduce using rule 18 (Operation -> TIMES .)
    MIN             reduce using rule 18 (Operation -> TIMES .)
    MAX             reduce using rule 18 (Operation -> TIMES .)
    DUP             reduce using rule 18 (Operation -> TIMES .)
    2DUP            reduce using rule 18 (Operation -> TIMES .)
    SWAP            reduce using rule 18 (Operation -> TIMES .)
    ROT             reduce using rule 18 (Operation -> TIMES .)
    OVER            reduce using rule 18 (Operation -> TIMES .)
    DROP            reduce using rule 18 (Operation -> TIMES .)
    EQUAL           reduce using rule 18 (Operation -> TIMES .)
    NOTEQUAL        reduce using rule 18 (Operation -> TIMES .)
    GREATER         reduce using rule 18 (Operation -> TIMES .)
    LESS            reduce using rule 18 (Operation -> TIMES .)
    ZEROEQUALS      reduce using rule 18 (Operation -> TIMES .)
    ZEROLESS        reduce using rule 18 (Operation -> TIMES .)
    ZEROGREATER     reduce using rule 18 (Operation -> TIMES .)
    FALSE           reduce using rule 18 (Operation -> TIMES .)
    TRUE            reduce using rule 18 (Operation -> TIMES .)
    DO              reduce using rule 18 (Operation -> TIMES .)
    BEGIN           reduce using rule 18 (Operation -> TIMES .)
    I               reduce using rule 18 (Operation -> TIMES .)
    IF              reduce using rule 18 (Operation -> TIMES .)
    VARIABLE        reduce using rule 18 (Operation -> TIMES .)
    ID              reduce using rule 18 (Operation -> TIMES .)
    NUMBER          reduce using rule 18 (Operation -> TIMES .)
    STRING          reduce using rule 18 (Operation -> TIMES .)
    DOT             reduce using rule 18 (Operation -> TIMES .)
    KEY             reduce using rule 18 (Operation -> TIMES .)
    CHAR            reduce using rule 18 (Operation -> TIMES .)
    CR              reduce using rule 18 (Operation -> TIMES .)
    SPACE           reduce using rule 18 (Operation -> TIMES .)
    SPACES          reduce using rule 18 (Operation -> TIMES .)
    EMIT            reduce using rule 18 (Operation -> TIMES .)
    $end            reduce using rule 18 (Operation -> TIMES .)
    LOOP            reduce using rule 18 (Operation -> TIMES .)
    PLUSLOOP        reduce using rule 18 (Operation -> TIMES .)
    UNTIL           reduce using rule 18 (Operation -> TIMES .)
    WHILE           reduce using rule 18 (Operation -> TIMES .)
    ELSE            reduce using rule 18 (Operation -> TIMES .)
    THEN            reduce using rule 18 (Operation -> TIMES .)
    SEMICOLON       reduce using rule 18 (Operation -> TIMES .)
    REPEAT          reduce using rule 18 (Operation -> TIMES .)


state 20

    (19) Operation -> DIVIDE .

    COLON           reduce using rule 19 (Operation -> DIVIDE .)
    PLUS            reduce using rule 19 (Operation -> DIVIDE .)
    TIMES           reduce using rule 19 (Operation -> DIVIDE .)
    DIVIDE          reduce using rule 19 (Operation -> DIVIDE .)
    MINUS           reduce using rule 19 (Operation -> DIVIDE .)
    EXP             reduce using rule 19 (Operation -> DIVIDE .)
    MOD             reduce using rule 19 (Operation -> DIVIDE .)
    DIVMOD          reduce using rule 19 (Operation -> DIVIDE .)
    QUICKADDONE     reduce using rule 19 (Operation -> DIVIDE .)
    QUICKADDTWO     reduce using rule 19 (Operation -> DIVIDE .)
    QUICKSUBONE     reduce using rule 19 (Operation -> DIVIDE .)
    QUICKSUBTWO     reduce using rule 19 (Operation -> DIVIDE .)
    QUICKMULTWO     reduce using rule 19 (Operation -> DIVIDE .)
    QUICKDIVTWO     reduce using rule 19 (Operation -> DIVIDE .)
    ABS             reduce using rule 19 (Operation -> DIVIDE .)
    NEGATE          reduce using rule 19 (Operation -> DIVIDE .)
    MIN             reduce using rule 19 (Operation -> DIVIDE .)
    MAX             reduce using rule 19 (Operation -> DIVIDE .)
    DUP             reduce using rule 19 (Operation -> DIVIDE .)
    2DUP            reduce using rule 19 (Operation -> DIVIDE .)
    SWAP            reduce using rule 19 (Operation -> DIVIDE .)
    ROT             reduce using rule 19 (Operation -> DIVIDE .)
    OVER            reduce using rule 19 (Operation -> DIVIDE .)
    DROP            reduce using rule 19 (Operation -> DIVIDE .)
    EQUAL           reduce using rule 19 (Operation -> DIVIDE .)
    NOTEQUAL        reduce using rule 19 (Operation -> DIVIDE .)
    GREATER         reduce using rule 19 (Operation -> DIVIDE .)
    LESS            reduce using rule 19 (Operation -> DIVIDE .)
    ZEROEQUALS      reduce using rule 19 (Operation -> DIVIDE .)
    ZEROLESS        reduce using rule 19 (Operation -> DIVIDE .)
    ZEROGREATER     reduce using rule 19 (Operation -> DIVIDE .)
    FALSE           reduce using rule 19 (Operation -> DIVIDE .)
    TRUE            reduce using rule 19 (Operation -> DIVIDE .)
    DO              reduce using rule 19 (Operation -> DIVIDE .)
    BEGIN           reduce using rule 19 (Operation -> DIVIDE .)
    I               reduce using rule 19 (Operation -> DIVIDE .)
    IF              reduce using rule 19 (Operation -> DIVIDE .)
    VARIABLE        reduce using rule 19 (Operation -> DIVIDE .)
    ID              reduce using rule 19 (Operation -> DIVIDE .)
    NUMBER          reduce using rule 19 (Operation -> DIVIDE .)
    STRING          reduce using rule 19 (Operation -> DIVIDE .)
    DOT             reduce using rule 19 (Operation -> DIVIDE .)
    KEY             reduce using rule 19 (Operation -> DIVIDE .)
    CHAR            reduce using rule 19 (Operation -> DIVIDE .)
    CR              reduce using rule 19 (Operation -> DIVIDE .)
    SPACE           reduce using rule 19 (Operation -> DIVIDE .)
    SPACES          reduce using rule 19 (Operation -> DIVIDE .)
    EMIT            reduce using rule 19 (Operation -> DIVIDE .)
    $end            reduce using rule 19 (Operation -> DIVIDE .)
    LOOP            reduce using rule 19 (Operation -> DIVIDE .)
    PLUSLOOP        reduce using rule 19 (Operation -> DIVIDE .)
    UNTIL           reduce using rule 19 (Operation -> DIVIDE .)
    WHILE           reduce using rule 19 (Operation -> DIVIDE .)
    ELSE            reduce using rule 19 (Operation -> DIVIDE .)
    THEN            reduce using rule 19 (Operation -> DIVIDE .)
    SEMICOLON       reduce using rule 19 (Operation -> DIVIDE .)
    REPEAT          reduce using rule 19 (Operation -> DIVIDE .)


state 21

    (20) Operation -> MINUS .

    COLON           reduce using rule 20 (Operation -> MINUS .)
    PLUS            reduce using rule 20 (Operation -> MINUS .)
    TIMES           reduce using rule 20 (Operation -> MINUS .)
    DIVIDE          reduce using rule 20 (Operation -> MINUS .)
    MINUS           reduce using rule 20 (Operation -> MINUS .)
    EXP             reduce using rule 20 (Operation -> MINUS .)
    MOD             reduce using rule 20 (Operation -> MINUS .)
    DIVMOD          reduce using rule 20 (Operation -> MINUS .)
    QUICKADDONE     reduce using rule 20 (Operation -> MINUS .)
    QUICKADDTWO     reduce using rule 20 (Operation -> MINUS .)
    QUICKSUBONE     reduce using rule 20 (Operation -> MINUS .)
    QUICKSUBTWO     reduce using rule 20 (Operation -> MINUS .)
    QUICKMULTWO     reduce using rule 20 (Operation -> MINUS .)
    QUICKDIVTWO     reduce using rule 20 (Operation -> MINUS .)
    ABS             reduce using rule 20 (Operation -> MINUS .)
    NEGATE          reduce using rule 20 (Operation -> MINUS .)
    MIN             reduce using rule 20 (Operation -> MINUS .)
    MAX             reduce using rule 20 (Operation -> MINUS .)
    DUP             reduce using rule 20 (Operation -> MINUS .)
    2DUP            reduce using rule 20 (Operation -> MINUS .)
    SWAP            reduce using rule 20 (Operation -> MINUS .)
    ROT             reduce using rule 20 (Operation -> MINUS .)
    OVER            reduce using rule 20 (Operation -> MINUS .)
    DROP            reduce using rule 20 (Operation -> MINUS .)
    EQUAL           reduce using rule 20 (Operation -> MINUS .)
    NOTEQUAL        reduce using rule 20 (Operation -> MINUS .)
    GREATER         reduce using rule 20 (Operation -> MINUS .)
    LESS            reduce using rule 20 (Operation -> MINUS .)
    ZEROEQUALS      reduce using rule 20 (Operation -> MINUS .)
    ZEROLESS        reduce using rule 20 (Operation -> MINUS .)
    ZEROGREATER     reduce using rule 20 (Operation -> MINUS .)
    FALSE           reduce using rule 20 (Operation -> MINUS .)
    TRUE            reduce using rule 20 (Operation -> MINUS .)
    DO              reduce using rule 20 (Operation -> MINUS .)
    BEGIN           reduce using rule 20 (Operation -> MINUS .)
    I               reduce using rule 20 (Operation -> MINUS .)
    IF              reduce using rule 20 (Operation -> MINUS .)
    VARIABLE        reduce using rule 20 (Operation -> MINUS .)
    ID              reduce using rule 20 (Operation -> MINUS .)
    NUMBER          reduce using rule 20 (Operation -> MINUS .)
    STRING          reduce using rule 20 (Operation -> MINUS .)
    DOT             reduce using rule 20 (Operation -> MINUS .)
    KEY             reduce using rule 20 (Operation -> MINUS .)
    CHAR            reduce using rule 20 (Operation -> MINUS .)
    CR              reduce using rule 20 (Operation -> MINUS .)
    SPACE           reduce using rule 20 (Operation -> MINUS .)
    SPACES          reduce using rule 20 (Operation -> MINUS .)
    EMIT            reduce using rule 20 (Operation -> MINUS .)
    $end            reduce using rule 20 (Operation -> MINUS .)
    LOOP            reduce using rule 20 (Operation -> MINUS .)
    PLUSLOOP        reduce using rule 20 (Operation -> MINUS .)
    UNTIL           reduce using rule 20 (Operation -> MINUS .)
    WHILE           reduce using rule 20 (Operation -> MINUS .)
    ELSE            reduce using rule 20 (Operation -> MINUS .)
    THEN            reduce using rule 20 (Operation -> MINUS .)
    SEMICOLON       reduce using rule 20 (Operation -> MINUS .)
    REPEAT          reduce using rule 20 (Operation -> MINUS .)


state 22

    (21) Operation -> EXP .

    COLON           reduce using rule 21 (Operation -> EXP .)
    PLUS            reduce using rule 21 (Operation -> EXP .)
    TIMES           reduce using rule 21 (Operation -> EXP .)
    DIVIDE          reduce using rule 21 (Operation -> EXP .)
    MINUS           reduce using rule 21 (Operation -> EXP .)
    EXP             reduce using rule 21 (Operation -> EXP .)
    MOD             reduce using rule 21 (Operation -> EXP .)
    DIVMOD          reduce using rule 21 (Operation -> EXP .)
    QUICKADDONE     reduce using rule 21 (Operation -> EXP .)
    QUICKADDTWO     reduce using rule 21 (Operation -> EXP .)
    QUICKSUBONE     reduce using rule 21 (Operation -> EXP .)
    QUICKSUBTWO     reduce using rule 21 (Operation -> EXP .)
    QUICKMULTWO     reduce using rule 21 (Operation -> EXP .)
    QUICKDIVTWO     reduce using rule 21 (Operation -> EXP .)
    ABS             reduce using rule 21 (Operation -> EXP .)
    NEGATE          reduce using rule 21 (Operation -> EXP .)
    MIN             reduce using rule 21 (Operation -> EXP .)
    MAX             reduce using rule 21 (Operation -> EXP .)
    DUP             reduce using rule 21 (Operation -> EXP .)
    2DUP            reduce using rule 21 (Operation -> EXP .)
    SWAP            reduce using rule 21 (Operation -> EXP .)
    ROT             reduce using rule 21 (Operation -> EXP .)
    OVER            reduce using rule 21 (Operation -> EXP .)
    DROP            reduce using rule 21 (Operation -> EXP .)
    EQUAL           reduce using rule 21 (Operation -> EXP .)
    NOTEQUAL        reduce using rule 21 (Operation -> EXP .)
    GREATER         reduce using rule 21 (Operation -> EXP .)
    LESS            reduce using rule 21 (Operation -> EXP .)
    ZEROEQUALS      reduce using rule 21 (Operation -> EXP .)
    ZEROLESS        reduce using rule 21 (Operation -> EXP .)
    ZEROGREATER     reduce using rule 21 (Operation -> EXP .)
    FALSE           reduce using rule 21 (Operation -> EXP .)
    TRUE            reduce using rule 21 (Operation -> EXP .)
    DO              reduce using rule 21 (Operation -> EXP .)
    BEGIN           reduce using rule 21 (Operation -> EXP .)
    I               reduce using rule 21 (Operation -> EXP .)
    IF              reduce using rule 21 (Operation -> EXP .)
    VARIABLE        reduce using rule 21 (Operation -> EXP .)
    ID              reduce using rule 21 (Operation -> EXP .)
    NUMBER          reduce using rule 21 (Operation -> EXP .)
    STRING          reduce using rule 21 (Operation -> EXP .)
    DOT             reduce using rule 21 (Operation -> EXP .)
    KEY             reduce using rule 21 (Operation -> EXP .)
    CHAR            reduce using rule 21 (Operation -> EXP .)
    CR              reduce using rule 21 (Operation -> EXP .)
    SPACE           reduce using rule 21 (Operation -> EXP .)
    SPACES          reduce using rule 21 (Operation -> EXP .)
    EMIT            reduce using rule 21 (Operation -> EXP .)
    $end            reduce using rule 21 (Operation -> EXP .)
    LOOP            reduce using rule 21 (Operation -> EXP .)
    PLUSLOOP        reduce using rule 21 (Operation -> EXP .)
    UNTIL           reduce using rule 21 (Operation -> EXP .)
    WHILE           reduce using rule 21 (Operation -> EXP .)
    ELSE            reduce using rule 21 (Operation -> EXP .)
    THEN            reduce using rule 21 (Operation -> EXP .)
    SEMICOLON       reduce using rule 21 (Operation -> EXP .)
    REPEAT          reduce using rule 21 (Operation -> EXP .)


state 23

    (22) Operation -> MOD .

    COLON           reduce using rule 22 (Operation -> MOD .)
    PLUS            reduce using rule 22 (Operation -> MOD .)
    TIMES           reduce using rule 22 (Operation -> MOD .)
    DIVIDE          reduce using rule 22 (Operation -> MOD .)
    MINUS           reduce using rule 22 (Operation -> MOD .)
    EXP             reduce using rule 22 (Operation -> MOD .)
    MOD             reduce using rule 22 (Operation -> MOD .)
    DIVMOD          reduce using rule 22 (Operation -> MOD .)
    QUICKADDONE     reduce using rule 22 (Operation -> MOD .)
    QUICKADDTWO     reduce using rule 22 (Operation -> MOD .)
    QUICKSUBONE     reduce using rule 22 (Operation -> MOD .)
    QUICKSUBTWO     reduce using rule 22 (Operation -> MOD .)
    QUICKMULTWO     reduce using rule 22 (Operation -> MOD .)
    QUICKDIVTWO     reduce using rule 22 (Operation -> MOD .)
    ABS             reduce using rule 22 (Operation -> MOD .)
    NEGATE          reduce using rule 22 (Operation -> MOD .)
    MIN             reduce using rule 22 (Operation -> MOD .)
    MAX             reduce using rule 22 (Operation -> MOD .)
    DUP             reduce using rule 22 (Operation -> MOD .)
    2DUP            reduce using rule 22 (Operation -> MOD .)
    SWAP            reduce using rule 22 (Operation -> MOD .)
    ROT             reduce using rule 22 (Operation -> MOD .)
    OVER            reduce using rule 22 (Operation -> MOD .)
    DROP            reduce using rule 22 (Operation -> MOD .)
    EQUAL           reduce using rule 22 (Operation -> MOD .)
    NOTEQUAL        reduce using rule 22 (Operation -> MOD .)
    GREATER         reduce using rule 22 (Operation -> MOD .)
    LESS            reduce using rule 22 (Operation -> MOD .)
    ZEROEQUALS      reduce using rule 22 (Operation -> MOD .)
    ZEROLESS        reduce using rule 22 (Operation -> MOD .)
    ZEROGREATER     reduce using rule 22 (Operation -> MOD .)
    FALSE           reduce using rule 22 (Operation -> MOD .)
    TRUE            reduce using rule 22 (Operation -> MOD .)
    DO              reduce using rule 22 (Operation -> MOD .)
    BEGIN           reduce using rule 22 (Operation -> MOD .)
    I               reduce using rule 22 (Operation -> MOD .)
    IF              reduce using rule 22 (Operation -> MOD .)
    VARIABLE        reduce using rule 22 (Operation -> MOD .)
    ID              reduce using rule 22 (Operation -> MOD .)
    NUMBER          reduce using rule 22 (Operation -> MOD .)
    STRING          reduce using rule 22 (Operation -> MOD .)
    DOT             reduce using rule 22 (Operation -> MOD .)
    KEY             reduce using rule 22 (Operation -> MOD .)
    CHAR            reduce using rule 22 (Operation -> MOD .)
    CR              reduce using rule 22 (Operation -> MOD .)
    SPACE           reduce using rule 22 (Operation -> MOD .)
    SPACES          reduce using rule 22 (Operation -> MOD .)
    EMIT            reduce using rule 22 (Operation -> MOD .)
    $end            reduce using rule 22 (Operation -> MOD .)
    LOOP            reduce using rule 22 (Operation -> MOD .)
    PLUSLOOP        reduce using rule 22 (Operation -> MOD .)
    UNTIL           reduce using rule 22 (Operation -> MOD .)
    WHILE           reduce using rule 22 (Operation -> MOD .)
    ELSE            reduce using rule 22 (Operation -> MOD .)
    THEN            reduce using rule 22 (Operation -> MOD .)
    SEMICOLON       reduce using rule 22 (Operation -> MOD .)
    REPEAT          reduce using rule 22 (Operation -> MOD .)


state 24

    (23) Operation -> DIVMOD .

    COLON           reduce using rule 23 (Operation -> DIVMOD .)
    PLUS            reduce using rule 23 (Operation -> DIVMOD .)
    TIMES           reduce using rule 23 (Operation -> DIVMOD .)
    DIVIDE          reduce using rule 23 (Operation -> DIVMOD .)
    MINUS           reduce using rule 23 (Operation -> DIVMOD .)
    EXP             reduce using rule 23 (Operation -> DIVMOD .)
    MOD             reduce using rule 23 (Operation -> DIVMOD .)
    DIVMOD          reduce using rule 23 (Operation -> DIVMOD .)
    QUICKADDONE     reduce using rule 23 (Operation -> DIVMOD .)
    QUICKADDTWO     reduce using rule 23 (Operation -> DIVMOD .)
    QUICKSUBONE     reduce using rule 23 (Operation -> DIVMOD .)
    QUICKSUBTWO     reduce using rule 23 (Operation -> DIVMOD .)
    QUICKMULTWO     reduce using rule 23 (Operation -> DIVMOD .)
    QUICKDIVTWO     reduce using rule 23 (Operation -> DIVMOD .)
    ABS             reduce using rule 23 (Operation -> DIVMOD .)
    NEGATE          reduce using rule 23 (Operation -> DIVMOD .)
    MIN             reduce using rule 23 (Operation -> DIVMOD .)
    MAX             reduce using rule 23 (Operation -> DIVMOD .)
    DUP             reduce using rule 23 (Operation -> DIVMOD .)
    2DUP            reduce using rule 23 (Operation -> DIVMOD .)
    SWAP            reduce using rule 23 (Operation -> DIVMOD .)
    ROT             reduce using rule 23 (Operation -> DIVMOD .)
    OVER            reduce using rule 23 (Operation -> DIVMOD .)
    DROP            reduce using rule 23 (Operation -> DIVMOD .)
    EQUAL           reduce using rule 23 (Operation -> DIVMOD .)
    NOTEQUAL        reduce using rule 23 (Operation -> DIVMOD .)
    GREATER         reduce using rule 23 (Operation -> DIVMOD .)
    LESS            reduce using rule 23 (Operation -> DIVMOD .)
    ZEROEQUALS      reduce using rule 23 (Operation -> DIVMOD .)
    ZEROLESS        reduce using rule 23 (Operation -> DIVMOD .)
    ZEROGREATER     reduce using rule 23 (Operation -> DIVMOD .)
    FALSE           reduce using rule 23 (Operation -> DIVMOD .)
    TRUE            reduce using rule 23 (Operation -> DIVMOD .)
    DO              reduce using rule 23 (Operation -> DIVMOD .)
    BEGIN           reduce using rule 23 (Operation -> DIVMOD .)
    I               reduce using rule 23 (Operation -> DIVMOD .)
    IF              reduce using rule 23 (Operation -> DIVMOD .)
    VARIABLE        reduce using rule 23 (Operation -> DIVMOD .)
    ID              reduce using rule 23 (Operation -> DIVMOD .)
    NUMBER          reduce using rule 23 (Operation -> DIVMOD .)
    STRING          reduce using rule 23 (Operation -> DIVMOD .)
    DOT             reduce using rule 23 (Operation -> DIVMOD .)
    KEY             reduce using rule 23 (Operation -> DIVMOD .)
    CHAR            reduce using rule 23 (Operation -> DIVMOD .)
    CR              reduce using rule 23 (Operation -> DIVMOD .)
    SPACE           reduce using rule 23 (Operation -> DIVMOD .)
    SPACES          reduce using rule 23 (Operation -> DIVMOD .)
    EMIT            reduce using rule 23 (Operation -> DIVMOD .)
    $end            reduce using rule 23 (Operation -> DIVMOD .)
    LOOP            reduce using rule 23 (Operation -> DIVMOD .)
    PLUSLOOP        reduce using rule 23 (Operation -> DIVMOD .)
    UNTIL           reduce using rule 23 (Operation -> DIVMOD .)
    WHILE           reduce using rule 23 (Operation -> DIVMOD .)
    ELSE            reduce using rule 23 (Operation -> DIVMOD .)
    THEN            reduce using rule 23 (Operation -> DIVMOD .)
    SEMICOLON       reduce using rule 23 (Operation -> DIVMOD .)
    REPEAT          reduce using rule 23 (Operation -> DIVMOD .)


state 25

    (31) Quickie -> QUICKADDONE .

    COLON           reduce using rule 31 (Quickie -> QUICKADDONE .)
    PLUS            reduce using rule 31 (Quickie -> QUICKADDONE .)
    TIMES           reduce using rule 31 (Quickie -> QUICKADDONE .)
    DIVIDE          reduce using rule 31 (Quickie -> QUICKADDONE .)
    MINUS           reduce using rule 31 (Quickie -> QUICKADDONE .)
    EXP             reduce using rule 31 (Quickie -> QUICKADDONE .)
    MOD             reduce using rule 31 (Quickie -> QUICKADDONE .)
    DIVMOD          reduce using rule 31 (Quickie -> QUICKADDONE .)
    QUICKADDONE     reduce using rule 31 (Quickie -> QUICKADDONE .)
    QUICKADDTWO     reduce using rule 31 (Quickie -> QUICKADDONE .)
    QUICKSUBONE     reduce using rule 31 (Quickie -> QUICKADDONE .)
    QUICKSUBTWO     reduce using rule 31 (Quickie -> QUICKADDONE .)
    QUICKMULTWO     reduce using rule 31 (Quickie -> QUICKADDONE .)
    QUICKDIVTWO     reduce using rule 31 (Quickie -> QUICKADDONE .)
    ABS             reduce using rule 31 (Quickie -> QUICKADDONE .)
    NEGATE          reduce using rule 31 (Quickie -> QUICKADDONE .)
    MIN             reduce using rule 31 (Quickie -> QUICKADDONE .)
    MAX             reduce using rule 31 (Quickie -> QUICKADDONE .)
    DUP             reduce using rule 31 (Quickie -> QUICKADDONE .)
    2DUP            reduce using rule 31 (Quickie -> QUICKADDONE .)
    SWAP            reduce using rule 31 (Quickie -> QUICKADDONE .)
    ROT             reduce using rule 31 (Quickie -> QUICKADDONE .)
    OVER            reduce using rule 31 (Quickie -> QUICKADDONE .)
    DROP            reduce using rule 31 (Quickie -> QUICKADDONE .)
    EQUAL           reduce using rule 31 (Quickie -> QUICKADDONE .)
    NOTEQUAL        reduce using rule 31 (Quickie -> QUICKADDONE .)
    GREATER         reduce using rule 31 (Quickie -> QUICKADDONE .)
    LESS            reduce using rule 31 (Quickie -> QUICKADDONE .)
    ZEROEQUALS      reduce using rule 31 (Quickie -> QUICKADDONE .)
    ZEROLESS        reduce using rule 31 (Quickie -> QUICKADDONE .)
    ZEROGREATER     reduce using rule 31 (Quickie -> QUICKADDONE .)
    FALSE           reduce using rule 31 (Quickie -> QUICKADDONE .)
    TRUE            reduce using rule 31 (Quickie -> QUICKADDONE .)
    DO              reduce using rule 31 (Quickie -> QUICKADDONE .)
    BEGIN           reduce using rule 31 (Quickie -> QUICKADDONE .)
    I               reduce using rule 31 (Quickie -> QUICKADDONE .)
    IF              reduce using rule 31 (Quickie -> QUICKADDONE .)
    VARIABLE        reduce using rule 31 (Quickie -> QUICKADDONE .)
    ID              reduce using rule 31 (Quickie -> QUICKADDONE .)
    NUMBER          reduce using rule 31 (Quickie -> QUICKADDONE .)
    STRING          reduce using rule 31 (Quickie -> QUICKADDONE .)
    DOT             reduce using rule 31 (Quickie -> QUICKADDONE .)
    KEY             reduce using rule 31 (Quickie -> QUICKADDONE .)
    CHAR            reduce using rule 31 (Quickie -> QUICKADDONE .)
    CR              reduce using rule 31 (Quickie -> QUICKADDONE .)
    SPACE           reduce using rule 31 (Quickie -> QUICKADDONE .)
    SPACES          reduce using rule 31 (Quickie -> QUICKADDONE .)
    EMIT            reduce using rule 31 (Quickie -> QUICKADDONE .)
    $end            reduce using rule 31 (Quickie -> QUICKADDONE .)
    LOOP            reduce using rule 31 (Quickie -> QUICKADDONE .)
    PLUSLOOP        reduce using rule 31 (Quickie -> QUICKADDONE .)
    UNTIL           reduce using rule 31 (Quickie -> QUICKADDONE .)
    WHILE           reduce using rule 31 (Quickie -> QUICKADDONE .)
    ELSE            reduce using rule 31 (Quickie -> QUICKADDONE .)
    THEN            reduce using rule 31 (Quickie -> QUICKADDONE .)
    SEMICOLON       reduce using rule 31 (Quickie -> QUICKADDONE .)
    REPEAT          reduce using rule 31 (Quickie -> QUICKADDONE .)


state 26

    (32) Quickie -> QUICKADDTWO .

    COLON           reduce using rule 32 (Quickie -> QUICKADDTWO .)
    PLUS            reduce using rule 32 (Quickie -> QUICKADDTWO .)
    TIMES           reduce using rule 32 (Quickie -> QUICKADDTWO .)
    DIVIDE          reduce using rule 32 (Quickie -> QUICKADDTWO .)
    MINUS           reduce using rule 32 (Quickie -> QUICKADDTWO .)
    EXP             reduce using rule 32 (Quickie -> QUICKADDTWO .)
    MOD             reduce using rule 32 (Quickie -> QUICKADDTWO .)
    DIVMOD          reduce using rule 32 (Quickie -> QUICKADDTWO .)
    QUICKADDONE     reduce using rule 32 (Quickie -> QUICKADDTWO .)
    QUICKADDTWO     reduce using rule 32 (Quickie -> QUICKADDTWO .)
    QUICKSUBONE     reduce using rule 32 (Quickie -> QUICKADDTWO .)
    QUICKSUBTWO     reduce using rule 32 (Quickie -> QUICKADDTWO .)
    QUICKMULTWO     reduce using rule 32 (Quickie -> QUICKADDTWO .)
    QUICKDIVTWO     reduce using rule 32 (Quickie -> QUICKADDTWO .)
    ABS             reduce using rule 32 (Quickie -> QUICKADDTWO .)
    NEGATE          reduce using rule 32 (Quickie -> QUICKADDTWO .)
    MIN             reduce using rule 32 (Quickie -> QUICKADDTWO .)
    MAX             reduce using rule 32 (Quickie -> QUICKADDTWO .)
    DUP             reduce using rule 32 (Quickie -> QUICKADDTWO .)
    2DUP            reduce using rule 32 (Quickie -> QUICKADDTWO .)
    SWAP            reduce using rule 32 (Quickie -> QUICKADDTWO .)
    ROT             reduce using rule 32 (Quickie -> QUICKADDTWO .)
    OVER            reduce using rule 32 (Quickie -> QUICKADDTWO .)
    DROP            reduce using rule 32 (Quickie -> QUICKADDTWO .)
    EQUAL           reduce using rule 32 (Quickie -> QUICKADDTWO .)
    NOTEQUAL        reduce using rule 32 (Quickie -> QUICKADDTWO .)
    GREATER         reduce using rule 32 (Quickie -> QUICKADDTWO .)
    LESS            reduce using rule 32 (Quickie -> QUICKADDTWO .)
    ZEROEQUALS      reduce using rule 32 (Quickie -> QUICKADDTWO .)
    ZEROLESS        reduce using rule 32 (Quickie -> QUICKADDTWO .)
    ZEROGREATER     reduce using rule 32 (Quickie -> QUICKADDTWO .)
    FALSE           reduce using rule 32 (Quickie -> QUICKADDTWO .)
    TRUE            reduce using rule 32 (Quickie -> QUICKADDTWO .)
    DO              reduce using rule 32 (Quickie -> QUICKADDTWO .)
    BEGIN           reduce using rule 32 (Quickie -> QUICKADDTWO .)
    I               reduce using rule 32 (Quickie -> QUICKADDTWO .)
    IF              reduce using rule 32 (Quickie -> QUICKADDTWO .)
    VARIABLE        reduce using rule 32 (Quickie -> QUICKADDTWO .)
    ID              reduce using rule 32 (Quickie -> QUICKADDTWO .)
    NUMBER          reduce using rule 32 (Quickie -> QUICKADDTWO .)
    STRING          reduce using rule 32 (Quickie -> QUICKADDTWO .)
    DOT             reduce using rule 32 (Quickie -> QUICKADDTWO .)
    KEY             reduce using rule 32 (Quickie -> QUICKADDTWO .)
    CHAR            reduce using rule 32 (Quickie -> QUICKADDTWO .)
    CR              reduce using rule 32 (Quickie -> QUICKADDTWO .)
    SPACE           reduce using rule 32 (Quickie -> QUICKADDTWO .)
    SPACES          reduce using rule 32 (Quickie -> QUICKADDTWO .)
    EMIT            reduce using rule 32 (Quickie -> QUICKADDTWO .)
    $end            reduce using rule 32 (Quickie -> QUICKADDTWO .)
    LOOP            reduce using rule 32 (Quickie -> QUICKADDTWO .)
    PLUSLOOP        reduce using rule 32 (Quickie -> QUICKADDTWO .)
    UNTIL           reduce using rule 32 (Quickie -> QUICKADDTWO .)
    WHILE           reduce using rule 32 (Quickie -> QUICKADDTWO .)
    ELSE            reduce using rule 32 (Quickie -> QUICKADDTWO .)
    THEN            reduce using rule 32 (Quickie -> QUICKADDTWO .)
    SEMICOLON       reduce using rule 32 (Quickie -> QUICKADDTWO .)
    REPEAT          reduce using rule 32 (Quickie -> QUICKADDTWO .)


state 27

    (33) Quickie -> QUICKSUBONE .

    COLON           reduce using rule 33 (Quickie -> QUICKSUBONE .)
    PLUS            reduce using rule 33 (Quickie -> QUICKSUBONE .)
    TIMES           reduce using rule 33 (Quickie -> QUICKSUBONE .)
    DIVIDE          reduce using rule 33 (Quickie -> QUICKSUBONE .)
    MINUS           reduce using rule 33 (Quickie -> QUICKSUBONE .)
    EXP             reduce using rule 33 (Quickie -> QUICKSUBONE .)
    MOD             reduce using rule 33 (Quickie -> QUICKSUBONE .)
    DIVMOD          reduce using rule 33 (Quickie -> QUICKSUBONE .)
    QUICKADDONE     reduce using rule 33 (Quickie -> QUICKSUBONE .)
    QUICKADDTWO     reduce using rule 33 (Quickie -> QUICKSUBONE .)
    QUICKSUBONE     reduce using rule 33 (Quickie -> QUICKSUBONE .)
    QUICKSUBTWO     reduce using rule 33 (Quickie -> QUICKSUBONE .)
    QUICKMULTWO     reduce using rule 33 (Quickie -> QUICKSUBONE .)
    QUICKDIVTWO     reduce using rule 33 (Quickie -> QUICKSUBONE .)
    ABS             reduce using rule 33 (Quickie -> QUICKSUBONE .)
    NEGATE          reduce using rule 33 (Quickie -> QUICKSUBONE .)
    MIN             reduce using rule 33 (Quickie -> QUICKSUBONE .)
    MAX             reduce using rule 33 (Quickie -> QUICKSUBONE .)
    DUP             reduce using rule 33 (Quickie -> QUICKSUBONE .)
    2DUP            reduce using rule 33 (Quickie -> QUICKSUBONE .)
    SWAP            reduce using rule 33 (Quickie -> QUICKSUBONE .)
    ROT             reduce using rule 33 (Quickie -> QUICKSUBONE .)
    OVER            reduce using rule 33 (Quickie -> QUICKSUBONE .)
    DROP            reduce using rule 33 (Quickie -> QUICKSUBONE .)
    EQUAL           reduce using rule 33 (Quickie -> QUICKSUBONE .)
    NOTEQUAL        reduce using rule 33 (Quickie -> QUICKSUBONE .)
    GREATER         reduce using rule 33 (Quickie -> QUICKSUBONE .)
    LESS            reduce using rule 33 (Quickie -> QUICKSUBONE .)
    ZEROEQUALS      reduce using rule 33 (Quickie -> QUICKSUBONE .)
    ZEROLESS        reduce using rule 33 (Quickie -> QUICKSUBONE .)
    ZEROGREATER     reduce using rule 33 (Quickie -> QUICKSUBONE .)
    FALSE           reduce using rule 33 (Quickie -> QUICKSUBONE .)
    TRUE            reduce using rule 33 (Quickie -> QUICKSUBONE .)
    DO              reduce using rule 33 (Quickie -> QUICKSUBONE .)
    BEGIN           reduce using rule 33 (Quickie -> QUICKSUBONE .)
    I               reduce using rule 33 (Quickie -> QUICKSUBONE .)
    IF              reduce using rule 33 (Quickie -> QUICKSUBONE .)
    VARIABLE        reduce using rule 33 (Quickie -> QUICKSUBONE .)
    ID              reduce using rule 33 (Quickie -> QUICKSUBONE .)
    NUMBER          reduce using rule 33 (Quickie -> QUICKSUBONE .)
    STRING          reduce using rule 33 (Quickie -> QUICKSUBONE .)
    DOT             reduce using rule 33 (Quickie -> QUICKSUBONE .)
    KEY             reduce using rule 33 (Quickie -> QUICKSUBONE .)
    CHAR            reduce using rule 33 (Quickie -> QUICKSUBONE .)
    CR              reduce using rule 33 (Quickie -> QUICKSUBONE .)
    SPACE           reduce using rule 33 (Quickie -> QUICKSUBONE .)
    SPACES          reduce using rule 33 (Quickie -> QUICKSUBONE .)
    EMIT            reduce using rule 33 (Quickie -> QUICKSUBONE .)
    $end            reduce using rule 33 (Quickie -> QUICKSUBONE .)
    LOOP            reduce using rule 33 (Quickie -> QUICKSUBONE .)
    PLUSLOOP        reduce using rule 33 (Quickie -> QUICKSUBONE .)
    UNTIL           reduce using rule 33 (Quickie -> QUICKSUBONE .)
    WHILE           reduce using rule 33 (Quickie -> QUICKSUBONE .)
    ELSE            reduce using rule 33 (Quickie -> QUICKSUBONE .)
    THEN            reduce using rule 33 (Quickie -> QUICKSUBONE .)
    SEMICOLON       reduce using rule 33 (Quickie -> QUICKSUBONE .)
    REPEAT          reduce using rule 33 (Quickie -> QUICKSUBONE .)


state 28

    (34) Quickie -> QUICKSUBTWO .

    COLON           reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    PLUS            reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    TIMES           reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    DIVIDE          reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    MINUS           reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    EXP             reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    MOD             reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    DIVMOD          reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    QUICKADDONE     reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    QUICKADDTWO     reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    QUICKSUBONE     reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    QUICKSUBTWO     reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    QUICKMULTWO     reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    QUICKDIVTWO     reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    ABS             reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    NEGATE          reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    MIN             reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    MAX             reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    DUP             reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    2DUP            reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    SWAP            reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    ROT             reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    OVER            reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    DROP            reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    EQUAL           reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    NOTEQUAL        reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    GREATER         reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    LESS            reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    ZEROEQUALS      reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    ZEROLESS        reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    ZEROGREATER     reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    FALSE           reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    TRUE            reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    DO              reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    BEGIN           reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    I               reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    IF              reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    VARIABLE        reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    ID              reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    NUMBER          reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    STRING          reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    DOT             reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    KEY             reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    CHAR            reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    CR              reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    SPACE           reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    SPACES          reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    EMIT            reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    $end            reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    LOOP            reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    PLUSLOOP        reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    UNTIL           reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    WHILE           reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    ELSE            reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    THEN            reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    SEMICOLON       reduce using rule 34 (Quickie -> QUICKSUBTWO .)
    REPEAT          reduce using rule 34 (Quickie -> QUICKSUBTWO .)


state 29

    (35) Quickie -> QUICKMULTWO .

    COLON           reduce using rule 35 (Quickie -> QUICKMULTWO .)
    PLUS            reduce using rule 35 (Quickie -> QUICKMULTWO .)
    TIMES           reduce using rule 35 (Quickie -> QUICKMULTWO .)
    DIVIDE          reduce using rule 35 (Quickie -> QUICKMULTWO .)
    MINUS           reduce using rule 35 (Quickie -> QUICKMULTWO .)
    EXP             reduce using rule 35 (Quickie -> QUICKMULTWO .)
    MOD             reduce using rule 35 (Quickie -> QUICKMULTWO .)
    DIVMOD          reduce using rule 35 (Quickie -> QUICKMULTWO .)
    QUICKADDONE     reduce using rule 35 (Quickie -> QUICKMULTWO .)
    QUICKADDTWO     reduce using rule 35 (Quickie -> QUICKMULTWO .)
    QUICKSUBONE     reduce using rule 35 (Quickie -> QUICKMULTWO .)
    QUICKSUBTWO     reduce using rule 35 (Quickie -> QUICKMULTWO .)
    QUICKMULTWO     reduce using rule 35 (Quickie -> QUICKMULTWO .)
    QUICKDIVTWO     reduce using rule 35 (Quickie -> QUICKMULTWO .)
    ABS             reduce using rule 35 (Quickie -> QUICKMULTWO .)
    NEGATE          reduce using rule 35 (Quickie -> QUICKMULTWO .)
    MIN             reduce using rule 35 (Quickie -> QUICKMULTWO .)
    MAX             reduce using rule 35 (Quickie -> QUICKMULTWO .)
    DUP             reduce using rule 35 (Quickie -> QUICKMULTWO .)
    2DUP            reduce using rule 35 (Quickie -> QUICKMULTWO .)
    SWAP            reduce using rule 35 (Quickie -> QUICKMULTWO .)
    ROT             reduce using rule 35 (Quickie -> QUICKMULTWO .)
    OVER            reduce using rule 35 (Quickie -> QUICKMULTWO .)
    DROP            reduce using rule 35 (Quickie -> QUICKMULTWO .)
    EQUAL           reduce using rule 35 (Quickie -> QUICKMULTWO .)
    NOTEQUAL        reduce using rule 35 (Quickie -> QUICKMULTWO .)
    GREATER         reduce using rule 35 (Quickie -> QUICKMULTWO .)
    LESS            reduce using rule 35 (Quickie -> QUICKMULTWO .)
    ZEROEQUALS      reduce using rule 35 (Quickie -> QUICKMULTWO .)
    ZEROLESS        reduce using rule 35 (Quickie -> QUICKMULTWO .)
    ZEROGREATER     reduce using rule 35 (Quickie -> QUICKMULTWO .)
    FALSE           reduce using rule 35 (Quickie -> QUICKMULTWO .)
    TRUE            reduce using rule 35 (Quickie -> QUICKMULTWO .)
    DO              reduce using rule 35 (Quickie -> QUICKMULTWO .)
    BEGIN           reduce using rule 35 (Quickie -> QUICKMULTWO .)
    I               reduce using rule 35 (Quickie -> QUICKMULTWO .)
    IF              reduce using rule 35 (Quickie -> QUICKMULTWO .)
    VARIABLE        reduce using rule 35 (Quickie -> QUICKMULTWO .)
    ID              reduce using rule 35 (Quickie -> QUICKMULTWO .)
    NUMBER          reduce using rule 35 (Quickie -> QUICKMULTWO .)
    STRING          reduce using rule 35 (Quickie -> QUICKMULTWO .)
    DOT             reduce using rule 35 (Quickie -> QUICKMULTWO .)
    KEY             reduce using rule 35 (Quickie -> QUICKMULTWO .)
    CHAR            reduce using rule 35 (Quickie -> QUICKMULTWO .)
    CR              reduce using rule 35 (Quickie -> QUICKMULTWO .)
    SPACE           reduce using rule 35 (Quickie -> QUICKMULTWO .)
    SPACES          reduce using rule 35 (Quickie -> QUICKMULTWO .)
    EMIT            reduce using rule 35 (Quickie -> QUICKMULTWO .)
    $end            reduce using rule 35 (Quickie -> QUICKMULTWO .)
    LOOP            reduce using rule 35 (Quickie -> QUICKMULTWO .)
    PLUSLOOP        reduce using rule 35 (Quickie -> QUICKMULTWO .)
    UNTIL           reduce using rule 35 (Quickie -> QUICKMULTWO .)
    WHILE           reduce using rule 35 (Quickie -> QUICKMULTWO .)
    ELSE            reduce using rule 35 (Quickie -> QUICKMULTWO .)
    THEN            reduce using rule 35 (Quickie -> QUICKMULTWO .)
    SEMICOLON       reduce using rule 35 (Quickie -> QUICKMULTWO .)
    REPEAT          reduce using rule 35 (Quickie -> QUICKMULTWO .)


state 30

    (36) Quickie -> QUICKDIVTWO .

    COLON           reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    PLUS            reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    TIMES           reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    DIVIDE          reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    MINUS           reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    EXP             reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    MOD             reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    DIVMOD          reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    QUICKADDONE     reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    QUICKADDTWO     reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    QUICKSUBONE     reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    QUICKSUBTWO     reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    QUICKMULTWO     reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    QUICKDIVTWO     reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    ABS             reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    NEGATE          reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    MIN             reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    MAX             reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    DUP             reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    2DUP            reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    SWAP            reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    ROT             reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    OVER            reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    DROP            reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    EQUAL           reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    NOTEQUAL        reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    GREATER         reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    LESS            reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    ZEROEQUALS      reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    ZEROLESS        reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    ZEROGREATER     reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    FALSE           reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    TRUE            reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    DO              reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    BEGIN           reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    I               reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    IF              reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    VARIABLE        reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    ID              reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    NUMBER          reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    STRING          reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    DOT             reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    KEY             reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    CHAR            reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    CR              reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    SPACE           reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    SPACES          reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    EMIT            reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    $end            reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    LOOP            reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    PLUSLOOP        reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    UNTIL           reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    WHILE           reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    ELSE            reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    THEN            reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    SEMICOLON       reduce using rule 36 (Quickie -> QUICKDIVTWO .)
    REPEAT          reduce using rule 36 (Quickie -> QUICKDIVTWO .)


state 31

    (46) Misk -> ABS .

    COLON           reduce using rule 46 (Misk -> ABS .)
    PLUS            reduce using rule 46 (Misk -> ABS .)
    TIMES           reduce using rule 46 (Misk -> ABS .)
    DIVIDE          reduce using rule 46 (Misk -> ABS .)
    MINUS           reduce using rule 46 (Misk -> ABS .)
    EXP             reduce using rule 46 (Misk -> ABS .)
    MOD             reduce using rule 46 (Misk -> ABS .)
    DIVMOD          reduce using rule 46 (Misk -> ABS .)
    QUICKADDONE     reduce using rule 46 (Misk -> ABS .)
    QUICKADDTWO     reduce using rule 46 (Misk -> ABS .)
    QUICKSUBONE     reduce using rule 46 (Misk -> ABS .)
    QUICKSUBTWO     reduce using rule 46 (Misk -> ABS .)
    QUICKMULTWO     reduce using rule 46 (Misk -> ABS .)
    QUICKDIVTWO     reduce using rule 46 (Misk -> ABS .)
    ABS             reduce using rule 46 (Misk -> ABS .)
    NEGATE          reduce using rule 46 (Misk -> ABS .)
    MIN             reduce using rule 46 (Misk -> ABS .)
    MAX             reduce using rule 46 (Misk -> ABS .)
    DUP             reduce using rule 46 (Misk -> ABS .)
    2DUP            reduce using rule 46 (Misk -> ABS .)
    SWAP            reduce using rule 46 (Misk -> ABS .)
    ROT             reduce using rule 46 (Misk -> ABS .)
    OVER            reduce using rule 46 (Misk -> ABS .)
    DROP            reduce using rule 46 (Misk -> ABS .)
    EQUAL           reduce using rule 46 (Misk -> ABS .)
    NOTEQUAL        reduce using rule 46 (Misk -> ABS .)
    GREATER         reduce using rule 46 (Misk -> ABS .)
    LESS            reduce using rule 46 (Misk -> ABS .)
    ZEROEQUALS      reduce using rule 46 (Misk -> ABS .)
    ZEROLESS        reduce using rule 46 (Misk -> ABS .)
    ZEROGREATER     reduce using rule 46 (Misk -> ABS .)
    FALSE           reduce using rule 46 (Misk -> ABS .)
    TRUE            reduce using rule 46 (Misk -> ABS .)
    DO              reduce using rule 46 (Misk -> ABS .)
    BEGIN           reduce using rule 46 (Misk -> ABS .)
    I               reduce using rule 46 (Misk -> ABS .)
    IF              reduce using rule 46 (Misk -> ABS .)
    VARIABLE        reduce using rule 46 (Misk -> ABS .)
    ID              reduce using rule 46 (Misk -> ABS .)
    NUMBER          reduce using rule 46 (Misk -> ABS .)
    STRING          reduce using rule 46 (Misk -> ABS .)
    DOT             reduce using rule 46 (Misk -> ABS .)
    KEY             reduce using rule 46 (Misk -> ABS .)
    CHAR            reduce using rule 46 (Misk -> ABS .)
    CR              reduce using rule 46 (Misk -> ABS .)
    SPACE           reduce using rule 46 (Misk -> ABS .)
    SPACES          reduce using rule 46 (Misk -> ABS .)
    EMIT            reduce using rule 46 (Misk -> ABS .)
    $end            reduce using rule 46 (Misk -> ABS .)
    LOOP            reduce using rule 46 (Misk -> ABS .)
    PLUSLOOP        reduce using rule 46 (Misk -> ABS .)
    UNTIL           reduce using rule 46 (Misk -> ABS .)
    WHILE           reduce using rule 46 (Misk -> ABS .)
    ELSE            reduce using rule 46 (Misk -> ABS .)
    THEN            reduce using rule 46 (Misk -> ABS .)
    SEMICOLON       reduce using rule 46 (Misk -> ABS .)
    REPEAT          reduce using rule 46 (Misk -> ABS .)


state 32

    (47) Misk -> NEGATE .

    COLON           reduce using rule 47 (Misk -> NEGATE .)
    PLUS            reduce using rule 47 (Misk -> NEGATE .)
    TIMES           reduce using rule 47 (Misk -> NEGATE .)
    DIVIDE          reduce using rule 47 (Misk -> NEGATE .)
    MINUS           reduce using rule 47 (Misk -> NEGATE .)
    EXP             reduce using rule 47 (Misk -> NEGATE .)
    MOD             reduce using rule 47 (Misk -> NEGATE .)
    DIVMOD          reduce using rule 47 (Misk -> NEGATE .)
    QUICKADDONE     reduce using rule 47 (Misk -> NEGATE .)
    QUICKADDTWO     reduce using rule 47 (Misk -> NEGATE .)
    QUICKSUBONE     reduce using rule 47 (Misk -> NEGATE .)
    QUICKSUBTWO     reduce using rule 47 (Misk -> NEGATE .)
    QUICKMULTWO     reduce using rule 47 (Misk -> NEGATE .)
    QUICKDIVTWO     reduce using rule 47 (Misk -> NEGATE .)
    ABS             reduce using rule 47 (Misk -> NEGATE .)
    NEGATE          reduce using rule 47 (Misk -> NEGATE .)
    MIN             reduce using rule 47 (Misk -> NEGATE .)
    MAX             reduce using rule 47 (Misk -> NEGATE .)
    DUP             reduce using rule 47 (Misk -> NEGATE .)
    2DUP            reduce using rule 47 (Misk -> NEGATE .)
    SWAP            reduce using rule 47 (Misk -> NEGATE .)
    ROT             reduce using rule 47 (Misk -> NEGATE .)
    OVER            reduce using rule 47 (Misk -> NEGATE .)
    DROP            reduce using rule 47 (Misk -> NEGATE .)
    EQUAL           reduce using rule 47 (Misk -> NEGATE .)
    NOTEQUAL        reduce using rule 47 (Misk -> NEGATE .)
    GREATER         reduce using rule 47 (Misk -> NEGATE .)
    LESS            reduce using rule 47 (Misk -> NEGATE .)
    ZEROEQUALS      reduce using rule 47 (Misk -> NEGATE .)
    ZEROLESS        reduce using rule 47 (Misk -> NEGATE .)
    ZEROGREATER     reduce using rule 47 (Misk -> NEGATE .)
    FALSE           reduce using rule 47 (Misk -> NEGATE .)
    TRUE            reduce using rule 47 (Misk -> NEGATE .)
    DO              reduce using rule 47 (Misk -> NEGATE .)
    BEGIN           reduce using rule 47 (Misk -> NEGATE .)
    I               reduce using rule 47 (Misk -> NEGATE .)
    IF              reduce using rule 47 (Misk -> NEGATE .)
    VARIABLE        reduce using rule 47 (Misk -> NEGATE .)
    ID              reduce using rule 47 (Misk -> NEGATE .)
    NUMBER          reduce using rule 47 (Misk -> NEGATE .)
    STRING          reduce using rule 47 (Misk -> NEGATE .)
    DOT             reduce using rule 47 (Misk -> NEGATE .)
    KEY             reduce using rule 47 (Misk -> NEGATE .)
    CHAR            reduce using rule 47 (Misk -> NEGATE .)
    CR              reduce using rule 47 (Misk -> NEGATE .)
    SPACE           reduce using rule 47 (Misk -> NEGATE .)
    SPACES          reduce using rule 47 (Misk -> NEGATE .)
    EMIT            reduce using rule 47 (Misk -> NEGATE .)
    $end            reduce using rule 47 (Misk -> NEGATE .)
    LOOP            reduce using rule 47 (Misk -> NEGATE .)
    PLUSLOOP        reduce using rule 47 (Misk -> NEGATE .)
    UNTIL           reduce using rule 47 (Misk -> NEGATE .)
    WHILE           reduce using rule 47 (Misk -> NEGATE .)
    ELSE            reduce using rule 47 (Misk -> NEGATE .)
    THEN            reduce using rule 47 (Misk -> NEGATE .)
    SEMICOLON       reduce using rule 47 (Misk -> NEGATE .)
    REPEAT          reduce using rule 47 (Misk -> NEGATE .)


state 33

    (48) Misk -> MIN .

    COLON           reduce using rule 48 (Misk -> MIN .)
    PLUS            reduce using rule 48 (Misk -> MIN .)
    TIMES           reduce using rule 48 (Misk -> MIN .)
    DIVIDE          reduce using rule 48 (Misk -> MIN .)
    MINUS           reduce using rule 48 (Misk -> MIN .)
    EXP             reduce using rule 48 (Misk -> MIN .)
    MOD             reduce using rule 48 (Misk -> MIN .)
    DIVMOD          reduce using rule 48 (Misk -> MIN .)
    QUICKADDONE     reduce using rule 48 (Misk -> MIN .)
    QUICKADDTWO     reduce using rule 48 (Misk -> MIN .)
    QUICKSUBONE     reduce using rule 48 (Misk -> MIN .)
    QUICKSUBTWO     reduce using rule 48 (Misk -> MIN .)
    QUICKMULTWO     reduce using rule 48 (Misk -> MIN .)
    QUICKDIVTWO     reduce using rule 48 (Misk -> MIN .)
    ABS             reduce using rule 48 (Misk -> MIN .)
    NEGATE          reduce using rule 48 (Misk -> MIN .)
    MIN             reduce using rule 48 (Misk -> MIN .)
    MAX             reduce using rule 48 (Misk -> MIN .)
    DUP             reduce using rule 48 (Misk -> MIN .)
    2DUP            reduce using rule 48 (Misk -> MIN .)
    SWAP            reduce using rule 48 (Misk -> MIN .)
    ROT             reduce using rule 48 (Misk -> MIN .)
    OVER            reduce using rule 48 (Misk -> MIN .)
    DROP            reduce using rule 48 (Misk -> MIN .)
    EQUAL           reduce using rule 48 (Misk -> MIN .)
    NOTEQUAL        reduce using rule 48 (Misk -> MIN .)
    GREATER         reduce using rule 48 (Misk -> MIN .)
    LESS            reduce using rule 48 (Misk -> MIN .)
    ZEROEQUALS      reduce using rule 48 (Misk -> MIN .)
    ZEROLESS        reduce using rule 48 (Misk -> MIN .)
    ZEROGREATER     reduce using rule 48 (Misk -> MIN .)
    FALSE           reduce using rule 48 (Misk -> MIN .)
    TRUE            reduce using rule 48 (Misk -> MIN .)
    DO              reduce using rule 48 (Misk -> MIN .)
    BEGIN           reduce using rule 48 (Misk -> MIN .)
    I               reduce using rule 48 (Misk -> MIN .)
    IF              reduce using rule 48 (Misk -> MIN .)
    VARIABLE        reduce using rule 48 (Misk -> MIN .)
    ID              reduce using rule 48 (Misk -> MIN .)
    NUMBER          reduce using rule 48 (Misk -> MIN .)
    STRING          reduce using rule 48 (Misk -> MIN .)
    DOT             reduce using rule 48 (Misk -> MIN .)
    KEY             reduce using rule 48 (Misk -> MIN .)
    CHAR            reduce using rule 48 (Misk -> MIN .)
    CR              reduce using rule 48 (Misk -> MIN .)
    SPACE           reduce using rule 48 (Misk -> MIN .)
    SPACES          reduce using rule 48 (Misk -> MIN .)
    EMIT            reduce using rule 48 (Misk -> MIN .)
    $end            reduce using rule 48 (Misk -> MIN .)
    LOOP            reduce using rule 48 (Misk -> MIN .)
    PLUSLOOP        reduce using rule 48 (Misk -> MIN .)
    UNTIL           reduce using rule 48 (Misk -> MIN .)
    WHILE           reduce using rule 48 (Misk -> MIN .)
    ELSE            reduce using rule 48 (Misk -> MIN .)
    THEN            reduce using rule 48 (Misk -> MIN .)
    SEMICOLON       reduce using rule 48 (Misk -> MIN .)
    REPEAT          reduce using rule 48 (Misk -> MIN .)


state 34

    (49) Misk -> MAX .

    COLON           reduce using rule 49 (Misk -> MAX .)
    PLUS            reduce using rule 49 (Misk -> MAX .)
    TIMES           reduce using rule 49 (Misk -> MAX .)
    DIVIDE          reduce using rule 49 (Misk -> MAX .)
    MINUS           reduce using rule 49 (Misk -> MAX .)
    EXP             reduce using rule 49 (Misk -> MAX .)
    MOD             reduce using rule 49 (Misk -> MAX .)
    DIVMOD          reduce using rule 49 (Misk -> MAX .)
    QUICKADDONE     reduce using rule 49 (Misk -> MAX .)
    QUICKADDTWO     reduce using rule 49 (Misk -> MAX .)
    QUICKSUBONE     reduce using rule 49 (Misk -> MAX .)
    QUICKSUBTWO     reduce using rule 49 (Misk -> MAX .)
    QUICKMULTWO     reduce using rule 49 (Misk -> MAX .)
    QUICKDIVTWO     reduce using rule 49 (Misk -> MAX .)
    ABS             reduce using rule 49 (Misk -> MAX .)
    NEGATE          reduce using rule 49 (Misk -> MAX .)
    MIN             reduce using rule 49 (Misk -> MAX .)
    MAX             reduce using rule 49 (Misk -> MAX .)
    DUP             reduce using rule 49 (Misk -> MAX .)
    2DUP            reduce using rule 49 (Misk -> MAX .)
    SWAP            reduce using rule 49 (Misk -> MAX .)
    ROT             reduce using rule 49 (Misk -> MAX .)
    OVER            reduce using rule 49 (Misk -> MAX .)
    DROP            reduce using rule 49 (Misk -> MAX .)
    EQUAL           reduce using rule 49 (Misk -> MAX .)
    NOTEQUAL        reduce using rule 49 (Misk -> MAX .)
    GREATER         reduce using rule 49 (Misk -> MAX .)
    LESS            reduce using rule 49 (Misk -> MAX .)
    ZEROEQUALS      reduce using rule 49 (Misk -> MAX .)
    ZEROLESS        reduce using rule 49 (Misk -> MAX .)
    ZEROGREATER     reduce using rule 49 (Misk -> MAX .)
    FALSE           reduce using rule 49 (Misk -> MAX .)
    TRUE            reduce using rule 49 (Misk -> MAX .)
    DO              reduce using rule 49 (Misk -> MAX .)
    BEGIN           reduce using rule 49 (Misk -> MAX .)
    I               reduce using rule 49 (Misk -> MAX .)
    IF              reduce using rule 49 (Misk -> MAX .)
    VARIABLE        reduce using rule 49 (Misk -> MAX .)
    ID              reduce using rule 49 (Misk -> MAX .)
    NUMBER          reduce using rule 49 (Misk -> MAX .)
    STRING          reduce using rule 49 (Misk -> MAX .)
    DOT             reduce using rule 49 (Misk -> MAX .)
    KEY             reduce using rule 49 (Misk -> MAX .)
    CHAR            reduce using rule 49 (Misk -> MAX .)
    CR              reduce using rule 49 (Misk -> MAX .)
    SPACE           reduce using rule 49 (Misk -> MAX .)
    SPACES          reduce using rule 49 (Misk -> MAX .)
    EMIT            reduce using rule 49 (Misk -> MAX .)
    $end            reduce using rule 49 (Misk -> MAX .)
    LOOP            reduce using rule 49 (Misk -> MAX .)
    PLUSLOOP        reduce using rule 49 (Misk -> MAX .)
    UNTIL           reduce using rule 49 (Misk -> MAX .)
    WHILE           reduce using rule 49 (Misk -> MAX .)
    ELSE            reduce using rule 49 (Misk -> MAX .)
    THEN            reduce using rule 49 (Misk -> MAX .)
    SEMICOLON       reduce using rule 49 (Misk -> MAX .)
    REPEAT          reduce using rule 49 (Misk -> MAX .)


state 35

    (50) Manuver -> DUP .

    COLON           reduce using rule 50 (Manuver -> DUP .)
    PLUS            reduce using rule 50 (Manuver -> DUP .)
    TIMES           reduce using rule 50 (Manuver -> DUP .)
    DIVIDE          reduce using rule 50 (Manuver -> DUP .)
    MINUS           reduce using rule 50 (Manuver -> DUP .)
    EXP             reduce using rule 50 (Manuver -> DUP .)
    MOD             reduce using rule 50 (Manuver -> DUP .)
    DIVMOD          reduce using rule 50 (Manuver -> DUP .)
    QUICKADDONE     reduce using rule 50 (Manuver -> DUP .)
    QUICKADDTWO     reduce using rule 50 (Manuver -> DUP .)
    QUICKSUBONE     reduce using rule 50 (Manuver -> DUP .)
    QUICKSUBTWO     reduce using rule 50 (Manuver -> DUP .)
    QUICKMULTWO     reduce using rule 50 (Manuver -> DUP .)
    QUICKDIVTWO     reduce using rule 50 (Manuver -> DUP .)
    ABS             reduce using rule 50 (Manuver -> DUP .)
    NEGATE          reduce using rule 50 (Manuver -> DUP .)
    MIN             reduce using rule 50 (Manuver -> DUP .)
    MAX             reduce using rule 50 (Manuver -> DUP .)
    DUP             reduce using rule 50 (Manuver -> DUP .)
    2DUP            reduce using rule 50 (Manuver -> DUP .)
    SWAP            reduce using rule 50 (Manuver -> DUP .)
    ROT             reduce using rule 50 (Manuver -> DUP .)
    OVER            reduce using rule 50 (Manuver -> DUP .)
    DROP            reduce using rule 50 (Manuver -> DUP .)
    EQUAL           reduce using rule 50 (Manuver -> DUP .)
    NOTEQUAL        reduce using rule 50 (Manuver -> DUP .)
    GREATER         reduce using rule 50 (Manuver -> DUP .)
    LESS            reduce using rule 50 (Manuver -> DUP .)
    ZEROEQUALS      reduce using rule 50 (Manuver -> DUP .)
    ZEROLESS        reduce using rule 50 (Manuver -> DUP .)
    ZEROGREATER     reduce using rule 50 (Manuver -> DUP .)
    FALSE           reduce using rule 50 (Manuver -> DUP .)
    TRUE            reduce using rule 50 (Manuver -> DUP .)
    DO              reduce using rule 50 (Manuver -> DUP .)
    BEGIN           reduce using rule 50 (Manuver -> DUP .)
    I               reduce using rule 50 (Manuver -> DUP .)
    IF              reduce using rule 50 (Manuver -> DUP .)
    VARIABLE        reduce using rule 50 (Manuver -> DUP .)
    ID              reduce using rule 50 (Manuver -> DUP .)
    NUMBER          reduce using rule 50 (Manuver -> DUP .)
    STRING          reduce using rule 50 (Manuver -> DUP .)
    DOT             reduce using rule 50 (Manuver -> DUP .)
    KEY             reduce using rule 50 (Manuver -> DUP .)
    CHAR            reduce using rule 50 (Manuver -> DUP .)
    CR              reduce using rule 50 (Manuver -> DUP .)
    SPACE           reduce using rule 50 (Manuver -> DUP .)
    SPACES          reduce using rule 50 (Manuver -> DUP .)
    EMIT            reduce using rule 50 (Manuver -> DUP .)
    $end            reduce using rule 50 (Manuver -> DUP .)
    LOOP            reduce using rule 50 (Manuver -> DUP .)
    PLUSLOOP        reduce using rule 50 (Manuver -> DUP .)
    UNTIL           reduce using rule 50 (Manuver -> DUP .)
    WHILE           reduce using rule 50 (Manuver -> DUP .)
    ELSE            reduce using rule 50 (Manuver -> DUP .)
    THEN            reduce using rule 50 (Manuver -> DUP .)
    SEMICOLON       reduce using rule 50 (Manuver -> DUP .)
    REPEAT          reduce using rule 50 (Manuver -> DUP .)


state 36

    (51) Manuver -> 2DUP .

    COLON           reduce using rule 51 (Manuver -> 2DUP .)
    PLUS            reduce using rule 51 (Manuver -> 2DUP .)
    TIMES           reduce using rule 51 (Manuver -> 2DUP .)
    DIVIDE          reduce using rule 51 (Manuver -> 2DUP .)
    MINUS           reduce using rule 51 (Manuver -> 2DUP .)
    EXP             reduce using rule 51 (Manuver -> 2DUP .)
    MOD             reduce using rule 51 (Manuver -> 2DUP .)
    DIVMOD          reduce using rule 51 (Manuver -> 2DUP .)
    QUICKADDONE     reduce using rule 51 (Manuver -> 2DUP .)
    QUICKADDTWO     reduce using rule 51 (Manuver -> 2DUP .)
    QUICKSUBONE     reduce using rule 51 (Manuver -> 2DUP .)
    QUICKSUBTWO     reduce using rule 51 (Manuver -> 2DUP .)
    QUICKMULTWO     reduce using rule 51 (Manuver -> 2DUP .)
    QUICKDIVTWO     reduce using rule 51 (Manuver -> 2DUP .)
    ABS             reduce using rule 51 (Manuver -> 2DUP .)
    NEGATE          reduce using rule 51 (Manuver -> 2DUP .)
    MIN             reduce using rule 51 (Manuver -> 2DUP .)
    MAX             reduce using rule 51 (Manuver -> 2DUP .)
    DUP             reduce using rule 51 (Manuver -> 2DUP .)
    2DUP            reduce using rule 51 (Manuver -> 2DUP .)
    SWAP            reduce using rule 51 (Manuver -> 2DUP .)
    ROT             reduce using rule 51 (Manuver -> 2DUP .)
    OVER            reduce using rule 51 (Manuver -> 2DUP .)
    DROP            reduce using rule 51 (Manuver -> 2DUP .)
    EQUAL           reduce using rule 51 (Manuver -> 2DUP .)
    NOTEQUAL        reduce using rule 51 (Manuver -> 2DUP .)
    GREATER         reduce using rule 51 (Manuver -> 2DUP .)
    LESS            reduce using rule 51 (Manuver -> 2DUP .)
    ZEROEQUALS      reduce using rule 51 (Manuver -> 2DUP .)
    ZEROLESS        reduce using rule 51 (Manuver -> 2DUP .)
    ZEROGREATER     reduce using rule 51 (Manuver -> 2DUP .)
    FALSE           reduce using rule 51 (Manuver -> 2DUP .)
    TRUE            reduce using rule 51 (Manuver -> 2DUP .)
    DO              reduce using rule 51 (Manuver -> 2DUP .)
    BEGIN           reduce using rule 51 (Manuver -> 2DUP .)
    I               reduce using rule 51 (Manuver -> 2DUP .)
    IF              reduce using rule 51 (Manuver -> 2DUP .)
    VARIABLE        reduce using rule 51 (Manuver -> 2DUP .)
    ID              reduce using rule 51 (Manuver -> 2DUP .)
    NUMBER          reduce using rule 51 (Manuver -> 2DUP .)
    STRING          reduce using rule 51 (Manuver -> 2DUP .)
    DOT             reduce using rule 51 (Manuver -> 2DUP .)
    KEY             reduce using rule 51 (Manuver -> 2DUP .)
    CHAR            reduce using rule 51 (Manuver -> 2DUP .)
    CR              reduce using rule 51 (Manuver -> 2DUP .)
    SPACE           reduce using rule 51 (Manuver -> 2DUP .)
    SPACES          reduce using rule 51 (Manuver -> 2DUP .)
    EMIT            reduce using rule 51 (Manuver -> 2DUP .)
    $end            reduce using rule 51 (Manuver -> 2DUP .)
    LOOP            reduce using rule 51 (Manuver -> 2DUP .)
    PLUSLOOP        reduce using rule 51 (Manuver -> 2DUP .)
    UNTIL           reduce using rule 51 (Manuver -> 2DUP .)
    WHILE           reduce using rule 51 (Manuver -> 2DUP .)
    ELSE            reduce using rule 51 (Manuver -> 2DUP .)
    THEN            reduce using rule 51 (Manuver -> 2DUP .)
    SEMICOLON       reduce using rule 51 (Manuver -> 2DUP .)
    REPEAT          reduce using rule 51 (Manuver -> 2DUP .)


state 37

    (52) Manuver -> SWAP .

    COLON           reduce using rule 52 (Manuver -> SWAP .)
    PLUS            reduce using rule 52 (Manuver -> SWAP .)
    TIMES           reduce using rule 52 (Manuver -> SWAP .)
    DIVIDE          reduce using rule 52 (Manuver -> SWAP .)
    MINUS           reduce using rule 52 (Manuver -> SWAP .)
    EXP             reduce using rule 52 (Manuver -> SWAP .)
    MOD             reduce using rule 52 (Manuver -> SWAP .)
    DIVMOD          reduce using rule 52 (Manuver -> SWAP .)
    QUICKADDONE     reduce using rule 52 (Manuver -> SWAP .)
    QUICKADDTWO     reduce using rule 52 (Manuver -> SWAP .)
    QUICKSUBONE     reduce using rule 52 (Manuver -> SWAP .)
    QUICKSUBTWO     reduce using rule 52 (Manuver -> SWAP .)
    QUICKMULTWO     reduce using rule 52 (Manuver -> SWAP .)
    QUICKDIVTWO     reduce using rule 52 (Manuver -> SWAP .)
    ABS             reduce using rule 52 (Manuver -> SWAP .)
    NEGATE          reduce using rule 52 (Manuver -> SWAP .)
    MIN             reduce using rule 52 (Manuver -> SWAP .)
    MAX             reduce using rule 52 (Manuver -> SWAP .)
    DUP             reduce using rule 52 (Manuver -> SWAP .)
    2DUP            reduce using rule 52 (Manuver -> SWAP .)
    SWAP            reduce using rule 52 (Manuver -> SWAP .)
    ROT             reduce using rule 52 (Manuver -> SWAP .)
    OVER            reduce using rule 52 (Manuver -> SWAP .)
    DROP            reduce using rule 52 (Manuver -> SWAP .)
    EQUAL           reduce using rule 52 (Manuver -> SWAP .)
    NOTEQUAL        reduce using rule 52 (Manuver -> SWAP .)
    GREATER         reduce using rule 52 (Manuver -> SWAP .)
    LESS            reduce using rule 52 (Manuver -> SWAP .)
    ZEROEQUALS      reduce using rule 52 (Manuver -> SWAP .)
    ZEROLESS        reduce using rule 52 (Manuver -> SWAP .)
    ZEROGREATER     reduce using rule 52 (Manuver -> SWAP .)
    FALSE           reduce using rule 52 (Manuver -> SWAP .)
    TRUE            reduce using rule 52 (Manuver -> SWAP .)
    DO              reduce using rule 52 (Manuver -> SWAP .)
    BEGIN           reduce using rule 52 (Manuver -> SWAP .)
    I               reduce using rule 52 (Manuver -> SWAP .)
    IF              reduce using rule 52 (Manuver -> SWAP .)
    VARIABLE        reduce using rule 52 (Manuver -> SWAP .)
    ID              reduce using rule 52 (Manuver -> SWAP .)
    NUMBER          reduce using rule 52 (Manuver -> SWAP .)
    STRING          reduce using rule 52 (Manuver -> SWAP .)
    DOT             reduce using rule 52 (Manuver -> SWAP .)
    KEY             reduce using rule 52 (Manuver -> SWAP .)
    CHAR            reduce using rule 52 (Manuver -> SWAP .)
    CR              reduce using rule 52 (Manuver -> SWAP .)
    SPACE           reduce using rule 52 (Manuver -> SWAP .)
    SPACES          reduce using rule 52 (Manuver -> SWAP .)
    EMIT            reduce using rule 52 (Manuver -> SWAP .)
    $end            reduce using rule 52 (Manuver -> SWAP .)
    LOOP            reduce using rule 52 (Manuver -> SWAP .)
    PLUSLOOP        reduce using rule 52 (Manuver -> SWAP .)
    UNTIL           reduce using rule 52 (Manuver -> SWAP .)
    WHILE           reduce using rule 52 (Manuver -> SWAP .)
    ELSE            reduce using rule 52 (Manuver -> SWAP .)
    THEN            reduce using rule 52 (Manuver -> SWAP .)
    SEMICOLON       reduce using rule 52 (Manuver -> SWAP .)
    REPEAT          reduce using rule 52 (Manuver -> SWAP .)


state 38

    (53) Manuver -> ROT .

    COLON           reduce using rule 53 (Manuver -> ROT .)
    PLUS            reduce using rule 53 (Manuver -> ROT .)
    TIMES           reduce using rule 53 (Manuver -> ROT .)
    DIVIDE          reduce using rule 53 (Manuver -> ROT .)
    MINUS           reduce using rule 53 (Manuver -> ROT .)
    EXP             reduce using rule 53 (Manuver -> ROT .)
    MOD             reduce using rule 53 (Manuver -> ROT .)
    DIVMOD          reduce using rule 53 (Manuver -> ROT .)
    QUICKADDONE     reduce using rule 53 (Manuver -> ROT .)
    QUICKADDTWO     reduce using rule 53 (Manuver -> ROT .)
    QUICKSUBONE     reduce using rule 53 (Manuver -> ROT .)
    QUICKSUBTWO     reduce using rule 53 (Manuver -> ROT .)
    QUICKMULTWO     reduce using rule 53 (Manuver -> ROT .)
    QUICKDIVTWO     reduce using rule 53 (Manuver -> ROT .)
    ABS             reduce using rule 53 (Manuver -> ROT .)
    NEGATE          reduce using rule 53 (Manuver -> ROT .)
    MIN             reduce using rule 53 (Manuver -> ROT .)
    MAX             reduce using rule 53 (Manuver -> ROT .)
    DUP             reduce using rule 53 (Manuver -> ROT .)
    2DUP            reduce using rule 53 (Manuver -> ROT .)
    SWAP            reduce using rule 53 (Manuver -> ROT .)
    ROT             reduce using rule 53 (Manuver -> ROT .)
    OVER            reduce using rule 53 (Manuver -> ROT .)
    DROP            reduce using rule 53 (Manuver -> ROT .)
    EQUAL           reduce using rule 53 (Manuver -> ROT .)
    NOTEQUAL        reduce using rule 53 (Manuver -> ROT .)
    GREATER         reduce using rule 53 (Manuver -> ROT .)
    LESS            reduce using rule 53 (Manuver -> ROT .)
    ZEROEQUALS      reduce using rule 53 (Manuver -> ROT .)
    ZEROLESS        reduce using rule 53 (Manuver -> ROT .)
    ZEROGREATER     reduce using rule 53 (Manuver -> ROT .)
    FALSE           reduce using rule 53 (Manuver -> ROT .)
    TRUE            reduce using rule 53 (Manuver -> ROT .)
    DO              reduce using rule 53 (Manuver -> ROT .)
    BEGIN           reduce using rule 53 (Manuver -> ROT .)
    I               reduce using rule 53 (Manuver -> ROT .)
    IF              reduce using rule 53 (Manuver -> ROT .)
    VARIABLE        reduce using rule 53 (Manuver -> ROT .)
    ID              reduce using rule 53 (Manuver -> ROT .)
    NUMBER          reduce using rule 53 (Manuver -> ROT .)
    STRING          reduce using rule 53 (Manuver -> ROT .)
    DOT             reduce using rule 53 (Manuver -> ROT .)
    KEY             reduce using rule 53 (Manuver -> ROT .)
    CHAR            reduce using rule 53 (Manuver -> ROT .)
    CR              reduce using rule 53 (Manuver -> ROT .)
    SPACE           reduce using rule 53 (Manuver -> ROT .)
    SPACES          reduce using rule 53 (Manuver -> ROT .)
    EMIT            reduce using rule 53 (Manuver -> ROT .)
    $end            reduce using rule 53 (Manuver -> ROT .)
    LOOP            reduce using rule 53 (Manuver -> ROT .)
    PLUSLOOP        reduce using rule 53 (Manuver -> ROT .)
    UNTIL           reduce using rule 53 (Manuver -> ROT .)
    WHILE           reduce using rule 53 (Manuver -> ROT .)
    ELSE            reduce using rule 53 (Manuver -> ROT .)
    THEN            reduce using rule 53 (Manuver -> ROT .)
    SEMICOLON       reduce using rule 53 (Manuver -> ROT .)
    REPEAT          reduce using rule 53 (Manuver -> ROT .)


state 39

    (54) Manuver -> OVER .

    COLON           reduce using rule 54 (Manuver -> OVER .)
    PLUS            reduce using rule 54 (Manuver -> OVER .)
    TIMES           reduce using rule 54 (Manuver -> OVER .)
    DIVIDE          reduce using rule 54 (Manuver -> OVER .)
    MINUS           reduce using rule 54 (Manuver -> OVER .)
    EXP             reduce using rule 54 (Manuver -> OVER .)
    MOD             reduce using rule 54 (Manuver -> OVER .)
    DIVMOD          reduce using rule 54 (Manuver -> OVER .)
    QUICKADDONE     reduce using rule 54 (Manuver -> OVER .)
    QUICKADDTWO     reduce using rule 54 (Manuver -> OVER .)
    QUICKSUBONE     reduce using rule 54 (Manuver -> OVER .)
    QUICKSUBTWO     reduce using rule 54 (Manuver -> OVER .)
    QUICKMULTWO     reduce using rule 54 (Manuver -> OVER .)
    QUICKDIVTWO     reduce using rule 54 (Manuver -> OVER .)
    ABS             reduce using rule 54 (Manuver -> OVER .)
    NEGATE          reduce using rule 54 (Manuver -> OVER .)
    MIN             reduce using rule 54 (Manuver -> OVER .)
    MAX             reduce using rule 54 (Manuver -> OVER .)
    DUP             reduce using rule 54 (Manuver -> OVER .)
    2DUP            reduce using rule 54 (Manuver -> OVER .)
    SWAP            reduce using rule 54 (Manuver -> OVER .)
    ROT             reduce using rule 54 (Manuver -> OVER .)
    OVER            reduce using rule 54 (Manuver -> OVER .)
    DROP            reduce using rule 54 (Manuver -> OVER .)
    EQUAL           reduce using rule 54 (Manuver -> OVER .)
    NOTEQUAL        reduce using rule 54 (Manuver -> OVER .)
    GREATER         reduce using rule 54 (Manuver -> OVER .)
    LESS            reduce using rule 54 (Manuver -> OVER .)
    ZEROEQUALS      reduce using rule 54 (Manuver -> OVER .)
    ZEROLESS        reduce using rule 54 (Manuver -> OVER .)
    ZEROGREATER     reduce using rule 54 (Manuver -> OVER .)
    FALSE           reduce using rule 54 (Manuver -> OVER .)
    TRUE            reduce using rule 54 (Manuver -> OVER .)
    DO              reduce using rule 54 (Manuver -> OVER .)
    BEGIN           reduce using rule 54 (Manuver -> OVER .)
    I               reduce using rule 54 (Manuver -> OVER .)
    IF              reduce using rule 54 (Manuver -> OVER .)
    VARIABLE        reduce using rule 54 (Manuver -> OVER .)
    ID              reduce using rule 54 (Manuver -> OVER .)
    NUMBER          reduce using rule 54 (Manuver -> OVER .)
    STRING          reduce using rule 54 (Manuver -> OVER .)
    DOT             reduce using rule 54 (Manuver -> OVER .)
    KEY             reduce using rule 54 (Manuver -> OVER .)
    CHAR            reduce using rule 54 (Manuver -> OVER .)
    CR              reduce using rule 54 (Manuver -> OVER .)
    SPACE           reduce using rule 54 (Manuver -> OVER .)
    SPACES          reduce using rule 54 (Manuver -> OVER .)
    EMIT            reduce using rule 54 (Manuver -> OVER .)
    $end            reduce using rule 54 (Manuver -> OVER .)
    LOOP            reduce using rule 54 (Manuver -> OVER .)
    PLUSLOOP        reduce using rule 54 (Manuver -> OVER .)
    UNTIL           reduce using rule 54 (Manuver -> OVER .)
    WHILE           reduce using rule 54 (Manuver -> OVER .)
    ELSE            reduce using rule 54 (Manuver -> OVER .)
    THEN            reduce using rule 54 (Manuver -> OVER .)
    SEMICOLON       reduce using rule 54 (Manuver -> OVER .)
    REPEAT          reduce using rule 54 (Manuver -> OVER .)


state 40

    (55) Manuver -> DROP .

    COLON           reduce using rule 55 (Manuver -> DROP .)
    PLUS            reduce using rule 55 (Manuver -> DROP .)
    TIMES           reduce using rule 55 (Manuver -> DROP .)
    DIVIDE          reduce using rule 55 (Manuver -> DROP .)
    MINUS           reduce using rule 55 (Manuver -> DROP .)
    EXP             reduce using rule 55 (Manuver -> DROP .)
    MOD             reduce using rule 55 (Manuver -> DROP .)
    DIVMOD          reduce using rule 55 (Manuver -> DROP .)
    QUICKADDONE     reduce using rule 55 (Manuver -> DROP .)
    QUICKADDTWO     reduce using rule 55 (Manuver -> DROP .)
    QUICKSUBONE     reduce using rule 55 (Manuver -> DROP .)
    QUICKSUBTWO     reduce using rule 55 (Manuver -> DROP .)
    QUICKMULTWO     reduce using rule 55 (Manuver -> DROP .)
    QUICKDIVTWO     reduce using rule 55 (Manuver -> DROP .)
    ABS             reduce using rule 55 (Manuver -> DROP .)
    NEGATE          reduce using rule 55 (Manuver -> DROP .)
    MIN             reduce using rule 55 (Manuver -> DROP .)
    MAX             reduce using rule 55 (Manuver -> DROP .)
    DUP             reduce using rule 55 (Manuver -> DROP .)
    2DUP            reduce using rule 55 (Manuver -> DROP .)
    SWAP            reduce using rule 55 (Manuver -> DROP .)
    ROT             reduce using rule 55 (Manuver -> DROP .)
    OVER            reduce using rule 55 (Manuver -> DROP .)
    DROP            reduce using rule 55 (Manuver -> DROP .)
    EQUAL           reduce using rule 55 (Manuver -> DROP .)
    NOTEQUAL        reduce using rule 55 (Manuver -> DROP .)
    GREATER         reduce using rule 55 (Manuver -> DROP .)
    LESS            reduce using rule 55 (Manuver -> DROP .)
    ZEROEQUALS      reduce using rule 55 (Manuver -> DROP .)
    ZEROLESS        reduce using rule 55 (Manuver -> DROP .)
    ZEROGREATER     reduce using rule 55 (Manuver -> DROP .)
    FALSE           reduce using rule 55 (Manuver -> DROP .)
    TRUE            reduce using rule 55 (Manuver -> DROP .)
    DO              reduce using rule 55 (Manuver -> DROP .)
    BEGIN           reduce using rule 55 (Manuver -> DROP .)
    I               reduce using rule 55 (Manuver -> DROP .)
    IF              reduce using rule 55 (Manuver -> DROP .)
    VARIABLE        reduce using rule 55 (Manuver -> DROP .)
    ID              reduce using rule 55 (Manuver -> DROP .)
    NUMBER          reduce using rule 55 (Manuver -> DROP .)
    STRING          reduce using rule 55 (Manuver -> DROP .)
    DOT             reduce using rule 55 (Manuver -> DROP .)
    KEY             reduce using rule 55 (Manuver -> DROP .)
    CHAR            reduce using rule 55 (Manuver -> DROP .)
    CR              reduce using rule 55 (Manuver -> DROP .)
    SPACE           reduce using rule 55 (Manuver -> DROP .)
    SPACES          reduce using rule 55 (Manuver -> DROP .)
    EMIT            reduce using rule 55 (Manuver -> DROP .)
    $end            reduce using rule 55 (Manuver -> DROP .)
    LOOP            reduce using rule 55 (Manuver -> DROP .)
    PLUSLOOP        reduce using rule 55 (Manuver -> DROP .)
    UNTIL           reduce using rule 55 (Manuver -> DROP .)
    WHILE           reduce using rule 55 (Manuver -> DROP .)
    ELSE            reduce using rule 55 (Manuver -> DROP .)
    THEN            reduce using rule 55 (Manuver -> DROP .)
    SEMICOLON       reduce using rule 55 (Manuver -> DROP .)
    REPEAT          reduce using rule 55 (Manuver -> DROP .)


state 41

    (37) Logic -> EQUAL .

    COLON           reduce using rule 37 (Logic -> EQUAL .)
    PLUS            reduce using rule 37 (Logic -> EQUAL .)
    TIMES           reduce using rule 37 (Logic -> EQUAL .)
    DIVIDE          reduce using rule 37 (Logic -> EQUAL .)
    MINUS           reduce using rule 37 (Logic -> EQUAL .)
    EXP             reduce using rule 37 (Logic -> EQUAL .)
    MOD             reduce using rule 37 (Logic -> EQUAL .)
    DIVMOD          reduce using rule 37 (Logic -> EQUAL .)
    QUICKADDONE     reduce using rule 37 (Logic -> EQUAL .)
    QUICKADDTWO     reduce using rule 37 (Logic -> EQUAL .)
    QUICKSUBONE     reduce using rule 37 (Logic -> EQUAL .)
    QUICKSUBTWO     reduce using rule 37 (Logic -> EQUAL .)
    QUICKMULTWO     reduce using rule 37 (Logic -> EQUAL .)
    QUICKDIVTWO     reduce using rule 37 (Logic -> EQUAL .)
    ABS             reduce using rule 37 (Logic -> EQUAL .)
    NEGATE          reduce using rule 37 (Logic -> EQUAL .)
    MIN             reduce using rule 37 (Logic -> EQUAL .)
    MAX             reduce using rule 37 (Logic -> EQUAL .)
    DUP             reduce using rule 37 (Logic -> EQUAL .)
    2DUP            reduce using rule 37 (Logic -> EQUAL .)
    SWAP            reduce using rule 37 (Logic -> EQUAL .)
    ROT             reduce using rule 37 (Logic -> EQUAL .)
    OVER            reduce using rule 37 (Logic -> EQUAL .)
    DROP            reduce using rule 37 (Logic -> EQUAL .)
    EQUAL           reduce using rule 37 (Logic -> EQUAL .)
    NOTEQUAL        reduce using rule 37 (Logic -> EQUAL .)
    GREATER         reduce using rule 37 (Logic -> EQUAL .)
    LESS            reduce using rule 37 (Logic -> EQUAL .)
    ZEROEQUALS      reduce using rule 37 (Logic -> EQUAL .)
    ZEROLESS        reduce using rule 37 (Logic -> EQUAL .)
    ZEROGREATER     reduce using rule 37 (Logic -> EQUAL .)
    FALSE           reduce using rule 37 (Logic -> EQUAL .)
    TRUE            reduce using rule 37 (Logic -> EQUAL .)
    DO              reduce using rule 37 (Logic -> EQUAL .)
    BEGIN           reduce using rule 37 (Logic -> EQUAL .)
    I               reduce using rule 37 (Logic -> EQUAL .)
    IF              reduce using rule 37 (Logic -> EQUAL .)
    VARIABLE        reduce using rule 37 (Logic -> EQUAL .)
    ID              reduce using rule 37 (Logic -> EQUAL .)
    NUMBER          reduce using rule 37 (Logic -> EQUAL .)
    STRING          reduce using rule 37 (Logic -> EQUAL .)
    DOT             reduce using rule 37 (Logic -> EQUAL .)
    KEY             reduce using rule 37 (Logic -> EQUAL .)
    CHAR            reduce using rule 37 (Logic -> EQUAL .)
    CR              reduce using rule 37 (Logic -> EQUAL .)
    SPACE           reduce using rule 37 (Logic -> EQUAL .)
    SPACES          reduce using rule 37 (Logic -> EQUAL .)
    EMIT            reduce using rule 37 (Logic -> EQUAL .)
    $end            reduce using rule 37 (Logic -> EQUAL .)
    LOOP            reduce using rule 37 (Logic -> EQUAL .)
    PLUSLOOP        reduce using rule 37 (Logic -> EQUAL .)
    UNTIL           reduce using rule 37 (Logic -> EQUAL .)
    WHILE           reduce using rule 37 (Logic -> EQUAL .)
    ELSE            reduce using rule 37 (Logic -> EQUAL .)
    THEN            reduce using rule 37 (Logic -> EQUAL .)
    SEMICOLON       reduce using rule 37 (Logic -> EQUAL .)
    REPEAT          reduce using rule 37 (Logic -> EQUAL .)


state 42

    (38) Logic -> NOTEQUAL .

    COLON           reduce using rule 38 (Logic -> NOTEQUAL .)
    PLUS            reduce using rule 38 (Logic -> NOTEQUAL .)
    TIMES           reduce using rule 38 (Logic -> NOTEQUAL .)
    DIVIDE          reduce using rule 38 (Logic -> NOTEQUAL .)
    MINUS           reduce using rule 38 (Logic -> NOTEQUAL .)
    EXP             reduce using rule 38 (Logic -> NOTEQUAL .)
    MOD             reduce using rule 38 (Logic -> NOTEQUAL .)
    DIVMOD          reduce using rule 38 (Logic -> NOTEQUAL .)
    QUICKADDONE     reduce using rule 38 (Logic -> NOTEQUAL .)
    QUICKADDTWO     reduce using rule 38 (Logic -> NOTEQUAL .)
    QUICKSUBONE     reduce using rule 38 (Logic -> NOTEQUAL .)
    QUICKSUBTWO     reduce using rule 38 (Logic -> NOTEQUAL .)
    QUICKMULTWO     reduce using rule 38 (Logic -> NOTEQUAL .)
    QUICKDIVTWO     reduce using rule 38 (Logic -> NOTEQUAL .)
    ABS             reduce using rule 38 (Logic -> NOTEQUAL .)
    NEGATE          reduce using rule 38 (Logic -> NOTEQUAL .)
    MIN             reduce using rule 38 (Logic -> NOTEQUAL .)
    MAX             reduce using rule 38 (Logic -> NOTEQUAL .)
    DUP             reduce using rule 38 (Logic -> NOTEQUAL .)
    2DUP            reduce using rule 38 (Logic -> NOTEQUAL .)
    SWAP            reduce using rule 38 (Logic -> NOTEQUAL .)
    ROT             reduce using rule 38 (Logic -> NOTEQUAL .)
    OVER            reduce using rule 38 (Logic -> NOTEQUAL .)
    DROP            reduce using rule 38 (Logic -> NOTEQUAL .)
    EQUAL           reduce using rule 38 (Logic -> NOTEQUAL .)
    NOTEQUAL        reduce using rule 38 (Logic -> NOTEQUAL .)
    GREATER         reduce using rule 38 (Logic -> NOTEQUAL .)
    LESS            reduce using rule 38 (Logic -> NOTEQUAL .)
    ZEROEQUALS      reduce using rule 38 (Logic -> NOTEQUAL .)
    ZEROLESS        reduce using rule 38 (Logic -> NOTEQUAL .)
    ZEROGREATER     reduce using rule 38 (Logic -> NOTEQUAL .)
    FALSE           reduce using rule 38 (Logic -> NOTEQUAL .)
    TRUE            reduce using rule 38 (Logic -> NOTEQUAL .)
    DO              reduce using rule 38 (Logic -> NOTEQUAL .)
    BEGIN           reduce using rule 38 (Logic -> NOTEQUAL .)
    I               reduce using rule 38 (Logic -> NOTEQUAL .)
    IF              reduce using rule 38 (Logic -> NOTEQUAL .)
    VARIABLE        reduce using rule 38 (Logic -> NOTEQUAL .)
    ID              reduce using rule 38 (Logic -> NOTEQUAL .)
    NUMBER          reduce using rule 38 (Logic -> NOTEQUAL .)
    STRING          reduce using rule 38 (Logic -> NOTEQUAL .)
    DOT             reduce using rule 38 (Logic -> NOTEQUAL .)
    KEY             reduce using rule 38 (Logic -> NOTEQUAL .)
    CHAR            reduce using rule 38 (Logic -> NOTEQUAL .)
    CR              reduce using rule 38 (Logic -> NOTEQUAL .)
    SPACE           reduce using rule 38 (Logic -> NOTEQUAL .)
    SPACES          reduce using rule 38 (Logic -> NOTEQUAL .)
    EMIT            reduce using rule 38 (Logic -> NOTEQUAL .)
    $end            reduce using rule 38 (Logic -> NOTEQUAL .)
    LOOP            reduce using rule 38 (Logic -> NOTEQUAL .)
    PLUSLOOP        reduce using rule 38 (Logic -> NOTEQUAL .)
    UNTIL           reduce using rule 38 (Logic -> NOTEQUAL .)
    WHILE           reduce using rule 38 (Logic -> NOTEQUAL .)
    ELSE            reduce using rule 38 (Logic -> NOTEQUAL .)
    THEN            reduce using rule 38 (Logic -> NOTEQUAL .)
    SEMICOLON       reduce using rule 38 (Logic -> NOTEQUAL .)
    REPEAT          reduce using rule 38 (Logic -> NOTEQUAL .)


state 43

    (39) Logic -> GREATER .

    COLON           reduce using rule 39 (Logic -> GREATER .)
    PLUS            reduce using rule 39 (Logic -> GREATER .)
    TIMES           reduce using rule 39 (Logic -> GREATER .)
    DIVIDE          reduce using rule 39 (Logic -> GREATER .)
    MINUS           reduce using rule 39 (Logic -> GREATER .)
    EXP             reduce using rule 39 (Logic -> GREATER .)
    MOD             reduce using rule 39 (Logic -> GREATER .)
    DIVMOD          reduce using rule 39 (Logic -> GREATER .)
    QUICKADDONE     reduce using rule 39 (Logic -> GREATER .)
    QUICKADDTWO     reduce using rule 39 (Logic -> GREATER .)
    QUICKSUBONE     reduce using rule 39 (Logic -> GREATER .)
    QUICKSUBTWO     reduce using rule 39 (Logic -> GREATER .)
    QUICKMULTWO     reduce using rule 39 (Logic -> GREATER .)
    QUICKDIVTWO     reduce using rule 39 (Logic -> GREATER .)
    ABS             reduce using rule 39 (Logic -> GREATER .)
    NEGATE          reduce using rule 39 (Logic -> GREATER .)
    MIN             reduce using rule 39 (Logic -> GREATER .)
    MAX             reduce using rule 39 (Logic -> GREATER .)
    DUP             reduce using rule 39 (Logic -> GREATER .)
    2DUP            reduce using rule 39 (Logic -> GREATER .)
    SWAP            reduce using rule 39 (Logic -> GREATER .)
    ROT             reduce using rule 39 (Logic -> GREATER .)
    OVER            reduce using rule 39 (Logic -> GREATER .)
    DROP            reduce using rule 39 (Logic -> GREATER .)
    EQUAL           reduce using rule 39 (Logic -> GREATER .)
    NOTEQUAL        reduce using rule 39 (Logic -> GREATER .)
    GREATER         reduce using rule 39 (Logic -> GREATER .)
    LESS            reduce using rule 39 (Logic -> GREATER .)
    ZEROEQUALS      reduce using rule 39 (Logic -> GREATER .)
    ZEROLESS        reduce using rule 39 (Logic -> GREATER .)
    ZEROGREATER     reduce using rule 39 (Logic -> GREATER .)
    FALSE           reduce using rule 39 (Logic -> GREATER .)
    TRUE            reduce using rule 39 (Logic -> GREATER .)
    DO              reduce using rule 39 (Logic -> GREATER .)
    BEGIN           reduce using rule 39 (Logic -> GREATER .)
    I               reduce using rule 39 (Logic -> GREATER .)
    IF              reduce using rule 39 (Logic -> GREATER .)
    VARIABLE        reduce using rule 39 (Logic -> GREATER .)
    ID              reduce using rule 39 (Logic -> GREATER .)
    NUMBER          reduce using rule 39 (Logic -> GREATER .)
    STRING          reduce using rule 39 (Logic -> GREATER .)
    DOT             reduce using rule 39 (Logic -> GREATER .)
    KEY             reduce using rule 39 (Logic -> GREATER .)
    CHAR            reduce using rule 39 (Logic -> GREATER .)
    CR              reduce using rule 39 (Logic -> GREATER .)
    SPACE           reduce using rule 39 (Logic -> GREATER .)
    SPACES          reduce using rule 39 (Logic -> GREATER .)
    EMIT            reduce using rule 39 (Logic -> GREATER .)
    $end            reduce using rule 39 (Logic -> GREATER .)
    LOOP            reduce using rule 39 (Logic -> GREATER .)
    PLUSLOOP        reduce using rule 39 (Logic -> GREATER .)
    UNTIL           reduce using rule 39 (Logic -> GREATER .)
    WHILE           reduce using rule 39 (Logic -> GREATER .)
    ELSE            reduce using rule 39 (Logic -> GREATER .)
    THEN            reduce using rule 39 (Logic -> GREATER .)
    SEMICOLON       reduce using rule 39 (Logic -> GREATER .)
    REPEAT          reduce using rule 39 (Logic -> GREATER .)


state 44

    (40) Logic -> LESS .

    COLON           reduce using rule 40 (Logic -> LESS .)
    PLUS            reduce using rule 40 (Logic -> LESS .)
    TIMES           reduce using rule 40 (Logic -> LESS .)
    DIVIDE          reduce using rule 40 (Logic -> LESS .)
    MINUS           reduce using rule 40 (Logic -> LESS .)
    EXP             reduce using rule 40 (Logic -> LESS .)
    MOD             reduce using rule 40 (Logic -> LESS .)
    DIVMOD          reduce using rule 40 (Logic -> LESS .)
    QUICKADDONE     reduce using rule 40 (Logic -> LESS .)
    QUICKADDTWO     reduce using rule 40 (Logic -> LESS .)
    QUICKSUBONE     reduce using rule 40 (Logic -> LESS .)
    QUICKSUBTWO     reduce using rule 40 (Logic -> LESS .)
    QUICKMULTWO     reduce using rule 40 (Logic -> LESS .)
    QUICKDIVTWO     reduce using rule 40 (Logic -> LESS .)
    ABS             reduce using rule 40 (Logic -> LESS .)
    NEGATE          reduce using rule 40 (Logic -> LESS .)
    MIN             reduce using rule 40 (Logic -> LESS .)
    MAX             reduce using rule 40 (Logic -> LESS .)
    DUP             reduce using rule 40 (Logic -> LESS .)
    2DUP            reduce using rule 40 (Logic -> LESS .)
    SWAP            reduce using rule 40 (Logic -> LESS .)
    ROT             reduce using rule 40 (Logic -> LESS .)
    OVER            reduce using rule 40 (Logic -> LESS .)
    DROP            reduce using rule 40 (Logic -> LESS .)
    EQUAL           reduce using rule 40 (Logic -> LESS .)
    NOTEQUAL        reduce using rule 40 (Logic -> LESS .)
    GREATER         reduce using rule 40 (Logic -> LESS .)
    LESS            reduce using rule 40 (Logic -> LESS .)
    ZEROEQUALS      reduce using rule 40 (Logic -> LESS .)
    ZEROLESS        reduce using rule 40 (Logic -> LESS .)
    ZEROGREATER     reduce using rule 40 (Logic -> LESS .)
    FALSE           reduce using rule 40 (Logic -> LESS .)
    TRUE            reduce using rule 40 (Logic -> LESS .)
    DO              reduce using rule 40 (Logic -> LESS .)
    BEGIN           reduce using rule 40 (Logic -> LESS .)
    I               reduce using rule 40 (Logic -> LESS .)
    IF              reduce using rule 40 (Logic -> LESS .)
    VARIABLE        reduce using rule 40 (Logic -> LESS .)
    ID              reduce using rule 40 (Logic -> LESS .)
    NUMBER          reduce using rule 40 (Logic -> LESS .)
    STRING          reduce using rule 40 (Logic -> LESS .)
    DOT             reduce using rule 40 (Logic -> LESS .)
    KEY             reduce using rule 40 (Logic -> LESS .)
    CHAR            reduce using rule 40 (Logic -> LESS .)
    CR              reduce using rule 40 (Logic -> LESS .)
    SPACE           reduce using rule 40 (Logic -> LESS .)
    SPACES          reduce using rule 40 (Logic -> LESS .)
    EMIT            reduce using rule 40 (Logic -> LESS .)
    $end            reduce using rule 40 (Logic -> LESS .)
    LOOP            reduce using rule 40 (Logic -> LESS .)
    PLUSLOOP        reduce using rule 40 (Logic -> LESS .)
    UNTIL           reduce using rule 40 (Logic -> LESS .)
    WHILE           reduce using rule 40 (Logic -> LESS .)
    ELSE            reduce using rule 40 (Logic -> LESS .)
    THEN            reduce using rule 40 (Logic -> LESS .)
    SEMICOLON       reduce using rule 40 (Logic -> LESS .)
    REPEAT          reduce using rule 40 (Logic -> LESS .)


state 45

    (41) Logic -> ZEROEQUALS .

    COLON           reduce using rule 41 (Logic -> ZEROEQUALS .)
    PLUS            reduce using rule 41 (Logic -> ZEROEQUALS .)
    TIMES           reduce using rule 41 (Logic -> ZEROEQUALS .)
    DIVIDE          reduce using rule 41 (Logic -> ZEROEQUALS .)
    MINUS           reduce using rule 41 (Logic -> ZEROEQUALS .)
    EXP             reduce using rule 41 (Logic -> ZEROEQUALS .)
    MOD             reduce using rule 41 (Logic -> ZEROEQUALS .)
    DIVMOD          reduce using rule 41 (Logic -> ZEROEQUALS .)
    QUICKADDONE     reduce using rule 41 (Logic -> ZEROEQUALS .)
    QUICKADDTWO     reduce using rule 41 (Logic -> ZEROEQUALS .)
    QUICKSUBONE     reduce using rule 41 (Logic -> ZEROEQUALS .)
    QUICKSUBTWO     reduce using rule 41 (Logic -> ZEROEQUALS .)
    QUICKMULTWO     reduce using rule 41 (Logic -> ZEROEQUALS .)
    QUICKDIVTWO     reduce using rule 41 (Logic -> ZEROEQUALS .)
    ABS             reduce using rule 41 (Logic -> ZEROEQUALS .)
    NEGATE          reduce using rule 41 (Logic -> ZEROEQUALS .)
    MIN             reduce using rule 41 (Logic -> ZEROEQUALS .)
    MAX             reduce using rule 41 (Logic -> ZEROEQUALS .)
    DUP             reduce using rule 41 (Logic -> ZEROEQUALS .)
    2DUP            reduce using rule 41 (Logic -> ZEROEQUALS .)
    SWAP            reduce using rule 41 (Logic -> ZEROEQUALS .)
    ROT             reduce using rule 41 (Logic -> ZEROEQUALS .)
    OVER            reduce using rule 41 (Logic -> ZEROEQUALS .)
    DROP            reduce using rule 41 (Logic -> ZEROEQUALS .)
    EQUAL           reduce using rule 41 (Logic -> ZEROEQUALS .)
    NOTEQUAL        reduce using rule 41 (Logic -> ZEROEQUALS .)
    GREATER         reduce using rule 41 (Logic -> ZEROEQUALS .)
    LESS            reduce using rule 41 (Logic -> ZEROEQUALS .)
    ZEROEQUALS      reduce using rule 41 (Logic -> ZEROEQUALS .)
    ZEROLESS        reduce using rule 41 (Logic -> ZEROEQUALS .)
    ZEROGREATER     reduce using rule 41 (Logic -> ZEROEQUALS .)
    FALSE           reduce using rule 41 (Logic -> ZEROEQUALS .)
    TRUE            reduce using rule 41 (Logic -> ZEROEQUALS .)
    DO              reduce using rule 41 (Logic -> ZEROEQUALS .)
    BEGIN           reduce using rule 41 (Logic -> ZEROEQUALS .)
    I               reduce using rule 41 (Logic -> ZEROEQUALS .)
    IF              reduce using rule 41 (Logic -> ZEROEQUALS .)
    VARIABLE        reduce using rule 41 (Logic -> ZEROEQUALS .)
    ID              reduce using rule 41 (Logic -> ZEROEQUALS .)
    NUMBER          reduce using rule 41 (Logic -> ZEROEQUALS .)
    STRING          reduce using rule 41 (Logic -> ZEROEQUALS .)
    DOT             reduce using rule 41 (Logic -> ZEROEQUALS .)
    KEY             reduce using rule 41 (Logic -> ZEROEQUALS .)
    CHAR            reduce using rule 41 (Logic -> ZEROEQUALS .)
    CR              reduce using rule 41 (Logic -> ZEROEQUALS .)
    SPACE           reduce using rule 41 (Logic -> ZEROEQUALS .)
    SPACES          reduce using rule 41 (Logic -> ZEROEQUALS .)
    EMIT            reduce using rule 41 (Logic -> ZEROEQUALS .)
    $end            reduce using rule 41 (Logic -> ZEROEQUALS .)
    LOOP            reduce using rule 41 (Logic -> ZEROEQUALS .)
    PLUSLOOP        reduce using rule 41 (Logic -> ZEROEQUALS .)
    UNTIL           reduce using rule 41 (Logic -> ZEROEQUALS .)
    WHILE           reduce using rule 41 (Logic -> ZEROEQUALS .)
    ELSE            reduce using rule 41 (Logic -> ZEROEQUALS .)
    THEN            reduce using rule 41 (Logic -> ZEROEQUALS .)
    SEMICOLON       reduce using rule 41 (Logic -> ZEROEQUALS .)
    REPEAT          reduce using rule 41 (Logic -> ZEROEQUALS .)


state 46

    (42) Logic -> ZEROLESS .

    COLON           reduce using rule 42 (Logic -> ZEROLESS .)
    PLUS            reduce using rule 42 (Logic -> ZEROLESS .)
    TIMES           reduce using rule 42 (Logic -> ZEROLESS .)
    DIVIDE          reduce using rule 42 (Logic -> ZEROLESS .)
    MINUS           reduce using rule 42 (Logic -> ZEROLESS .)
    EXP             reduce using rule 42 (Logic -> ZEROLESS .)
    MOD             reduce using rule 42 (Logic -> ZEROLESS .)
    DIVMOD          reduce using rule 42 (Logic -> ZEROLESS .)
    QUICKADDONE     reduce using rule 42 (Logic -> ZEROLESS .)
    QUICKADDTWO     reduce using rule 42 (Logic -> ZEROLESS .)
    QUICKSUBONE     reduce using rule 42 (Logic -> ZEROLESS .)
    QUICKSUBTWO     reduce using rule 42 (Logic -> ZEROLESS .)
    QUICKMULTWO     reduce using rule 42 (Logic -> ZEROLESS .)
    QUICKDIVTWO     reduce using rule 42 (Logic -> ZEROLESS .)
    ABS             reduce using rule 42 (Logic -> ZEROLESS .)
    NEGATE          reduce using rule 42 (Logic -> ZEROLESS .)
    MIN             reduce using rule 42 (Logic -> ZEROLESS .)
    MAX             reduce using rule 42 (Logic -> ZEROLESS .)
    DUP             reduce using rule 42 (Logic -> ZEROLESS .)
    2DUP            reduce using rule 42 (Logic -> ZEROLESS .)
    SWAP            reduce using rule 42 (Logic -> ZEROLESS .)
    ROT             reduce using rule 42 (Logic -> ZEROLESS .)
    OVER            reduce using rule 42 (Logic -> ZEROLESS .)
    DROP            reduce using rule 42 (Logic -> ZEROLESS .)
    EQUAL           reduce using rule 42 (Logic -> ZEROLESS .)
    NOTEQUAL        reduce using rule 42 (Logic -> ZEROLESS .)
    GREATER         reduce using rule 42 (Logic -> ZEROLESS .)
    LESS            reduce using rule 42 (Logic -> ZEROLESS .)
    ZEROEQUALS      reduce using rule 42 (Logic -> ZEROLESS .)
    ZEROLESS        reduce using rule 42 (Logic -> ZEROLESS .)
    ZEROGREATER     reduce using rule 42 (Logic -> ZEROLESS .)
    FALSE           reduce using rule 42 (Logic -> ZEROLESS .)
    TRUE            reduce using rule 42 (Logic -> ZEROLESS .)
    DO              reduce using rule 42 (Logic -> ZEROLESS .)
    BEGIN           reduce using rule 42 (Logic -> ZEROLESS .)
    I               reduce using rule 42 (Logic -> ZEROLESS .)
    IF              reduce using rule 42 (Logic -> ZEROLESS .)
    VARIABLE        reduce using rule 42 (Logic -> ZEROLESS .)
    ID              reduce using rule 42 (Logic -> ZEROLESS .)
    NUMBER          reduce using rule 42 (Logic -> ZEROLESS .)
    STRING          reduce using rule 42 (Logic -> ZEROLESS .)
    DOT             reduce using rule 42 (Logic -> ZEROLESS .)
    KEY             reduce using rule 42 (Logic -> ZEROLESS .)
    CHAR            reduce using rule 42 (Logic -> ZEROLESS .)
    CR              reduce using rule 42 (Logic -> ZEROLESS .)
    SPACE           reduce using rule 42 (Logic -> ZEROLESS .)
    SPACES          reduce using rule 42 (Logic -> ZEROLESS .)
    EMIT            reduce using rule 42 (Logic -> ZEROLESS .)
    $end            reduce using rule 42 (Logic -> ZEROLESS .)
    LOOP            reduce using rule 42 (Logic -> ZEROLESS .)
    PLUSLOOP        reduce using rule 42 (Logic -> ZEROLESS .)
    UNTIL           reduce using rule 42 (Logic -> ZEROLESS .)
    WHILE           reduce using rule 42 (Logic -> ZEROLESS .)
    ELSE            reduce using rule 42 (Logic -> ZEROLESS .)
    THEN            reduce using rule 42 (Logic -> ZEROLESS .)
    SEMICOLON       reduce using rule 42 (Logic -> ZEROLESS .)
    REPEAT          reduce using rule 42 (Logic -> ZEROLESS .)


state 47

    (43) Logic -> ZEROGREATER .

    COLON           reduce using rule 43 (Logic -> ZEROGREATER .)
    PLUS            reduce using rule 43 (Logic -> ZEROGREATER .)
    TIMES           reduce using rule 43 (Logic -> ZEROGREATER .)
    DIVIDE          reduce using rule 43 (Logic -> ZEROGREATER .)
    MINUS           reduce using rule 43 (Logic -> ZEROGREATER .)
    EXP             reduce using rule 43 (Logic -> ZEROGREATER .)
    MOD             reduce using rule 43 (Logic -> ZEROGREATER .)
    DIVMOD          reduce using rule 43 (Logic -> ZEROGREATER .)
    QUICKADDONE     reduce using rule 43 (Logic -> ZEROGREATER .)
    QUICKADDTWO     reduce using rule 43 (Logic -> ZEROGREATER .)
    QUICKSUBONE     reduce using rule 43 (Logic -> ZEROGREATER .)
    QUICKSUBTWO     reduce using rule 43 (Logic -> ZEROGREATER .)
    QUICKMULTWO     reduce using rule 43 (Logic -> ZEROGREATER .)
    QUICKDIVTWO     reduce using rule 43 (Logic -> ZEROGREATER .)
    ABS             reduce using rule 43 (Logic -> ZEROGREATER .)
    NEGATE          reduce using rule 43 (Logic -> ZEROGREATER .)
    MIN             reduce using rule 43 (Logic -> ZEROGREATER .)
    MAX             reduce using rule 43 (Logic -> ZEROGREATER .)
    DUP             reduce using rule 43 (Logic -> ZEROGREATER .)
    2DUP            reduce using rule 43 (Logic -> ZEROGREATER .)
    SWAP            reduce using rule 43 (Logic -> ZEROGREATER .)
    ROT             reduce using rule 43 (Logic -> ZEROGREATER .)
    OVER            reduce using rule 43 (Logic -> ZEROGREATER .)
    DROP            reduce using rule 43 (Logic -> ZEROGREATER .)
    EQUAL           reduce using rule 43 (Logic -> ZEROGREATER .)
    NOTEQUAL        reduce using rule 43 (Logic -> ZEROGREATER .)
    GREATER         reduce using rule 43 (Logic -> ZEROGREATER .)
    LESS            reduce using rule 43 (Logic -> ZEROGREATER .)
    ZEROEQUALS      reduce using rule 43 (Logic -> ZEROGREATER .)
    ZEROLESS        reduce using rule 43 (Logic -> ZEROGREATER .)
    ZEROGREATER     reduce using rule 43 (Logic -> ZEROGREATER .)
    FALSE           reduce using rule 43 (Logic -> ZEROGREATER .)
    TRUE            reduce using rule 43 (Logic -> ZEROGREATER .)
    DO              reduce using rule 43 (Logic -> ZEROGREATER .)
    BEGIN           reduce using rule 43 (Logic -> ZEROGREATER .)
    I               reduce using rule 43 (Logic -> ZEROGREATER .)
    IF              reduce using rule 43 (Logic -> ZEROGREATER .)
    VARIABLE        reduce using rule 43 (Logic -> ZEROGREATER .)
    ID              reduce using rule 43 (Logic -> ZEROGREATER .)
    NUMBER          reduce using rule 43 (Logic -> ZEROGREATER .)
    STRING          reduce using rule 43 (Logic -> ZEROGREATER .)
    DOT             reduce using rule 43 (Logic -> ZEROGREATER .)
    KEY             reduce using rule 43 (Logic -> ZEROGREATER .)
    CHAR            reduce using rule 43 (Logic -> ZEROGREATER .)
    CR              reduce using rule 43 (Logic -> ZEROGREATER .)
    SPACE           reduce using rule 43 (Logic -> ZEROGREATER .)
    SPACES          reduce using rule 43 (Logic -> ZEROGREATER .)
    EMIT            reduce using rule 43 (Logic -> ZEROGREATER .)
    $end            reduce using rule 43 (Logic -> ZEROGREATER .)
    LOOP            reduce using rule 43 (Logic -> ZEROGREATER .)
    PLUSLOOP        reduce using rule 43 (Logic -> ZEROGREATER .)
    UNTIL           reduce using rule 43 (Logic -> ZEROGREATER .)
    WHILE           reduce using rule 43 (Logic -> ZEROGREATER .)
    ELSE            reduce using rule 43 (Logic -> ZEROGREATER .)
    THEN            reduce using rule 43 (Logic -> ZEROGREATER .)
    SEMICOLON       reduce using rule 43 (Logic -> ZEROGREATER .)
    REPEAT          reduce using rule 43 (Logic -> ZEROGREATER .)


state 48

    (44) Logic -> FALSE .

    COLON           reduce using rule 44 (Logic -> FALSE .)
    PLUS            reduce using rule 44 (Logic -> FALSE .)
    TIMES           reduce using rule 44 (Logic -> FALSE .)
    DIVIDE          reduce using rule 44 (Logic -> FALSE .)
    MINUS           reduce using rule 44 (Logic -> FALSE .)
    EXP             reduce using rule 44 (Logic -> FALSE .)
    MOD             reduce using rule 44 (Logic -> FALSE .)
    DIVMOD          reduce using rule 44 (Logic -> FALSE .)
    QUICKADDONE     reduce using rule 44 (Logic -> FALSE .)
    QUICKADDTWO     reduce using rule 44 (Logic -> FALSE .)
    QUICKSUBONE     reduce using rule 44 (Logic -> FALSE .)
    QUICKSUBTWO     reduce using rule 44 (Logic -> FALSE .)
    QUICKMULTWO     reduce using rule 44 (Logic -> FALSE .)
    QUICKDIVTWO     reduce using rule 44 (Logic -> FALSE .)
    ABS             reduce using rule 44 (Logic -> FALSE .)
    NEGATE          reduce using rule 44 (Logic -> FALSE .)
    MIN             reduce using rule 44 (Logic -> FALSE .)
    MAX             reduce using rule 44 (Logic -> FALSE .)
    DUP             reduce using rule 44 (Logic -> FALSE .)
    2DUP            reduce using rule 44 (Logic -> FALSE .)
    SWAP            reduce using rule 44 (Logic -> FALSE .)
    ROT             reduce using rule 44 (Logic -> FALSE .)
    OVER            reduce using rule 44 (Logic -> FALSE .)
    DROP            reduce using rule 44 (Logic -> FALSE .)
    EQUAL           reduce using rule 44 (Logic -> FALSE .)
    NOTEQUAL        reduce using rule 44 (Logic -> FALSE .)
    GREATER         reduce using rule 44 (Logic -> FALSE .)
    LESS            reduce using rule 44 (Logic -> FALSE .)
    ZEROEQUALS      reduce using rule 44 (Logic -> FALSE .)
    ZEROLESS        reduce using rule 44 (Logic -> FALSE .)
    ZEROGREATER     reduce using rule 44 (Logic -> FALSE .)
    FALSE           reduce using rule 44 (Logic -> FALSE .)
    TRUE            reduce using rule 44 (Logic -> FALSE .)
    DO              reduce using rule 44 (Logic -> FALSE .)
    BEGIN           reduce using rule 44 (Logic -> FALSE .)
    I               reduce using rule 44 (Logic -> FALSE .)
    IF              reduce using rule 44 (Logic -> FALSE .)
    VARIABLE        reduce using rule 44 (Logic -> FALSE .)
    ID              reduce using rule 44 (Logic -> FALSE .)
    NUMBER          reduce using rule 44 (Logic -> FALSE .)
    STRING          reduce using rule 44 (Logic -> FALSE .)
    DOT             reduce using rule 44 (Logic -> FALSE .)
    KEY             reduce using rule 44 (Logic -> FALSE .)
    CHAR            reduce using rule 44 (Logic -> FALSE .)
    CR              reduce using rule 44 (Logic -> FALSE .)
    SPACE           reduce using rule 44 (Logic -> FALSE .)
    SPACES          reduce using rule 44 (Logic -> FALSE .)
    EMIT            reduce using rule 44 (Logic -> FALSE .)
    $end            reduce using rule 44 (Logic -> FALSE .)
    LOOP            reduce using rule 44 (Logic -> FALSE .)
    PLUSLOOP        reduce using rule 44 (Logic -> FALSE .)
    UNTIL           reduce using rule 44 (Logic -> FALSE .)
    WHILE           reduce using rule 44 (Logic -> FALSE .)
    ELSE            reduce using rule 44 (Logic -> FALSE .)
    THEN            reduce using rule 44 (Logic -> FALSE .)
    SEMICOLON       reduce using rule 44 (Logic -> FALSE .)
    REPEAT          reduce using rule 44 (Logic -> FALSE .)


state 49

    (45) Logic -> TRUE .

    COLON           reduce using rule 45 (Logic -> TRUE .)
    PLUS            reduce using rule 45 (Logic -> TRUE .)
    TIMES           reduce using rule 45 (Logic -> TRUE .)
    DIVIDE          reduce using rule 45 (Logic -> TRUE .)
    MINUS           reduce using rule 45 (Logic -> TRUE .)
    EXP             reduce using rule 45 (Logic -> TRUE .)
    MOD             reduce using rule 45 (Logic -> TRUE .)
    DIVMOD          reduce using rule 45 (Logic -> TRUE .)
    QUICKADDONE     reduce using rule 45 (Logic -> TRUE .)
    QUICKADDTWO     reduce using rule 45 (Logic -> TRUE .)
    QUICKSUBONE     reduce using rule 45 (Logic -> TRUE .)
    QUICKSUBTWO     reduce using rule 45 (Logic -> TRUE .)
    QUICKMULTWO     reduce using rule 45 (Logic -> TRUE .)
    QUICKDIVTWO     reduce using rule 45 (Logic -> TRUE .)
    ABS             reduce using rule 45 (Logic -> TRUE .)
    NEGATE          reduce using rule 45 (Logic -> TRUE .)
    MIN             reduce using rule 45 (Logic -> TRUE .)
    MAX             reduce using rule 45 (Logic -> TRUE .)
    DUP             reduce using rule 45 (Logic -> TRUE .)
    2DUP            reduce using rule 45 (Logic -> TRUE .)
    SWAP            reduce using rule 45 (Logic -> TRUE .)
    ROT             reduce using rule 45 (Logic -> TRUE .)
    OVER            reduce using rule 45 (Logic -> TRUE .)
    DROP            reduce using rule 45 (Logic -> TRUE .)
    EQUAL           reduce using rule 45 (Logic -> TRUE .)
    NOTEQUAL        reduce using rule 45 (Logic -> TRUE .)
    GREATER         reduce using rule 45 (Logic -> TRUE .)
    LESS            reduce using rule 45 (Logic -> TRUE .)
    ZEROEQUALS      reduce using rule 45 (Logic -> TRUE .)
    ZEROLESS        reduce using rule 45 (Logic -> TRUE .)
    ZEROGREATER     reduce using rule 45 (Logic -> TRUE .)
    FALSE           reduce using rule 45 (Logic -> TRUE .)
    TRUE            reduce using rule 45 (Logic -> TRUE .)
    DO              reduce using rule 45 (Logic -> TRUE .)
    BEGIN           reduce using rule 45 (Logic -> TRUE .)
    I               reduce using rule 45 (Logic -> TRUE .)
    IF              reduce using rule 45 (Logic -> TRUE .)
    VARIABLE        reduce using rule 45 (Logic -> TRUE .)
    ID              reduce using rule 45 (Logic -> TRUE .)
    NUMBER          reduce using rule 45 (Logic -> TRUE .)
    STRING          reduce using rule 45 (Logic -> TRUE .)
    DOT             reduce using rule 45 (Logic -> TRUE .)
    KEY             reduce using rule 45 (Logic -> TRUE .)
    CHAR            reduce using rule 45 (Logic -> TRUE .)
    CR              reduce using rule 45 (Logic -> TRUE .)
    SPACE           reduce using rule 45 (Logic -> TRUE .)
    SPACES          reduce using rule 45 (Logic -> TRUE .)
    EMIT            reduce using rule 45 (Logic -> TRUE .)
    $end            reduce using rule 45 (Logic -> TRUE .)
    LOOP            reduce using rule 45 (Logic -> TRUE .)
    PLUSLOOP        reduce using rule 45 (Logic -> TRUE .)
    UNTIL           reduce using rule 45 (Logic -> TRUE .)
    WHILE           reduce using rule 45 (Logic -> TRUE .)
    ELSE            reduce using rule 45 (Logic -> TRUE .)
    THEN            reduce using rule 45 (Logic -> TRUE .)
    SEMICOLON       reduce using rule 45 (Logic -> TRUE .)
    REPEAT          reduce using rule 45 (Logic -> TRUE .)


state 50

    (24) Loop -> DO . Options LOOP
    (28) Loop -> DO . Options PLUSLOOP
    (2) Options -> . Expression
    (3) Options -> . Function
    (5) Expression -> . Options Token
    (6) Expression -> .
    (4) Function -> . Options COLON ID Options SEMICOLON

    LOOP            reduce using rule 6 (Expression -> .)
    PLUSLOOP        reduce using rule 6 (Expression -> .)
    COLON           reduce using rule 6 (Expression -> .)
    PLUS            reduce using rule 6 (Expression -> .)
    TIMES           reduce using rule 6 (Expression -> .)
    DIVIDE          reduce using rule 6 (Expression -> .)
    MINUS           reduce using rule 6 (Expression -> .)
    EXP             reduce using rule 6 (Expression -> .)
    MOD             reduce using rule 6 (Expression -> .)
    DIVMOD          reduce using rule 6 (Expression -> .)
    QUICKADDONE     reduce using rule 6 (Expression -> .)
    QUICKADDTWO     reduce using rule 6 (Expression -> .)
    QUICKSUBONE     reduce using rule 6 (Expression -> .)
    QUICKSUBTWO     reduce using rule 6 (Expression -> .)
    QUICKMULTWO     reduce using rule 6 (Expression -> .)
    QUICKDIVTWO     reduce using rule 6 (Expression -> .)
    ABS             reduce using rule 6 (Expression -> .)
    NEGATE          reduce using rule 6 (Expression -> .)
    MIN             reduce using rule 6 (Expression -> .)
    MAX             reduce using rule 6 (Expression -> .)
    DUP             reduce using rule 6 (Expression -> .)
    2DUP            reduce using rule 6 (Expression -> .)
    SWAP            reduce using rule 6 (Expression -> .)
    ROT             reduce using rule 6 (Expression -> .)
    OVER            reduce using rule 6 (Expression -> .)
    DROP            reduce using rule 6 (Expression -> .)
    EQUAL           reduce using rule 6 (Expression -> .)
    NOTEQUAL        reduce using rule 6 (Expression -> .)
    GREATER         reduce using rule 6 (Expression -> .)
    LESS            reduce using rule 6 (Expression -> .)
    ZEROEQUALS      reduce using rule 6 (Expression -> .)
    ZEROLESS        reduce using rule 6 (Expression -> .)
    ZEROGREATER     reduce using rule 6 (Expression -> .)
    FALSE           reduce using rule 6 (Expression -> .)
    TRUE            reduce using rule 6 (Expression -> .)
    DO              reduce using rule 6 (Expression -> .)
    BEGIN           reduce using rule 6 (Expression -> .)
    I               reduce using rule 6 (Expression -> .)
    IF              reduce using rule 6 (Expression -> .)
    VARIABLE        reduce using rule 6 (Expression -> .)
    ID              reduce using rule 6 (Expression -> .)
    NUMBER          reduce using rule 6 (Expression -> .)
    STRING          reduce using rule 6 (Expression -> .)
    DOT             reduce using rule 6 (Expression -> .)
    KEY             reduce using rule 6 (Expression -> .)
    CHAR            reduce using rule 6 (Expression -> .)
    CR              reduce using rule 6 (Expression -> .)
    SPACE           reduce using rule 6 (Expression -> .)
    SPACES          reduce using rule 6 (Expression -> .)
    EMIT            reduce using rule 6 (Expression -> .)

    Options                        shift and go to state 68
    Expression                     shift and go to state 3
    Function                       shift and go to state 4

state 51

    (25) Loop -> BEGIN . Options UNTIL
    (26) Loop -> BEGIN . Options WHILE Options REPEAT
    (2) Options -> . Expression
    (3) Options -> . Function
    (5) Expression -> . Options Token
    (6) Expression -> .
    (4) Function -> . Options COLON ID Options SEMICOLON

    UNTIL           reduce using rule 6 (Expression -> .)
    WHILE           reduce using rule 6 (Expression -> .)
    COLON           reduce using rule 6 (Expression -> .)
    PLUS            reduce using rule 6 (Expression -> .)
    TIMES           reduce using rule 6 (Expression -> .)
    DIVIDE          reduce using rule 6 (Expression -> .)
    MINUS           reduce using rule 6 (Expression -> .)
    EXP             reduce using rule 6 (Expression -> .)
    MOD             reduce using rule 6 (Expression -> .)
    DIVMOD          reduce using rule 6 (Expression -> .)
    QUICKADDONE     reduce using rule 6 (Expression -> .)
    QUICKADDTWO     reduce using rule 6 (Expression -> .)
    QUICKSUBONE     reduce using rule 6 (Expression -> .)
    QUICKSUBTWO     reduce using rule 6 (Expression -> .)
    QUICKMULTWO     reduce using rule 6 (Expression -> .)
    QUICKDIVTWO     reduce using rule 6 (Expression -> .)
    ABS             reduce using rule 6 (Expression -> .)
    NEGATE          reduce using rule 6 (Expression -> .)
    MIN             reduce using rule 6 (Expression -> .)
    MAX             reduce using rule 6 (Expression -> .)
    DUP             reduce using rule 6 (Expression -> .)
    2DUP            reduce using rule 6 (Expression -> .)
    SWAP            reduce using rule 6 (Expression -> .)
    ROT             reduce using rule 6 (Expression -> .)
    OVER            reduce using rule 6 (Expression -> .)
    DROP            reduce using rule 6 (Expression -> .)
    EQUAL           reduce using rule 6 (Expression -> .)
    NOTEQUAL        reduce using rule 6 (Expression -> .)
    GREATER         reduce using rule 6 (Expression -> .)
    LESS            reduce using rule 6 (Expression -> .)
    ZEROEQUALS      reduce using rule 6 (Expression -> .)
    ZEROLESS        reduce using rule 6 (Expression -> .)
    ZEROGREATER     reduce using rule 6 (Expression -> .)
    FALSE           reduce using rule 6 (Expression -> .)
    TRUE            reduce using rule 6 (Expression -> .)
    DO              reduce using rule 6 (Expression -> .)
    BEGIN           reduce using rule 6 (Expression -> .)
    I               reduce using rule 6 (Expression -> .)
    IF              reduce using rule 6 (Expression -> .)
    VARIABLE        reduce using rule 6 (Expression -> .)
    ID              reduce using rule 6 (Expression -> .)
    NUMBER          reduce using rule 6 (Expression -> .)
    STRING          reduce using rule 6 (Expression -> .)
    DOT             reduce using rule 6 (Expression -> .)
    KEY             reduce using rule 6 (Expression -> .)
    CHAR            reduce using rule 6 (Expression -> .)
    CR              reduce using rule 6 (Expression -> .)
    SPACE           reduce using rule 6 (Expression -> .)
    SPACES          reduce using rule 6 (Expression -> .)
    EMIT            reduce using rule 6 (Expression -> .)

    Options                        shift and go to state 69
    Expression                     shift and go to state 3
    Function                       shift and go to state 4

state 52

    (27) Loop -> I .

    COLON           reduce using rule 27 (Loop -> I .)
    PLUS            reduce using rule 27 (Loop -> I .)
    TIMES           reduce using rule 27 (Loop -> I .)
    DIVIDE          reduce using rule 27 (Loop -> I .)
    MINUS           reduce using rule 27 (Loop -> I .)
    EXP             reduce using rule 27 (Loop -> I .)
    MOD             reduce using rule 27 (Loop -> I .)
    DIVMOD          reduce using rule 27 (Loop -> I .)
    QUICKADDONE     reduce using rule 27 (Loop -> I .)
    QUICKADDTWO     reduce using rule 27 (Loop -> I .)
    QUICKSUBONE     reduce using rule 27 (Loop -> I .)
    QUICKSUBTWO     reduce using rule 27 (Loop -> I .)
    QUICKMULTWO     reduce using rule 27 (Loop -> I .)
    QUICKDIVTWO     reduce using rule 27 (Loop -> I .)
    ABS             reduce using rule 27 (Loop -> I .)
    NEGATE          reduce using rule 27 (Loop -> I .)
    MIN             reduce using rule 27 (Loop -> I .)
    MAX             reduce using rule 27 (Loop -> I .)
    DUP             reduce using rule 27 (Loop -> I .)
    2DUP            reduce using rule 27 (Loop -> I .)
    SWAP            reduce using rule 27 (Loop -> I .)
    ROT             reduce using rule 27 (Loop -> I .)
    OVER            reduce using rule 27 (Loop -> I .)
    DROP            reduce using rule 27 (Loop -> I .)
    EQUAL           reduce using rule 27 (Loop -> I .)
    NOTEQUAL        reduce using rule 27 (Loop -> I .)
    GREATER         reduce using rule 27 (Loop -> I .)
    LESS            reduce using rule 27 (Loop -> I .)
    ZEROEQUALS      reduce using rule 27 (Loop -> I .)
    ZEROLESS        reduce using rule 27 (Loop -> I .)
    ZEROGREATER     reduce using rule 27 (Loop -> I .)
    FALSE           reduce using rule 27 (Loop -> I .)
    TRUE            reduce using rule 27 (Loop -> I .)
    DO              reduce using rule 27 (Loop -> I .)
    BEGIN           reduce using rule 27 (Loop -> I .)
    I               reduce using rule 27 (Loop -> I .)
    IF              reduce using rule 27 (Loop -> I .)
    VARIABLE        reduce using rule 27 (Loop -> I .)
    ID              reduce using rule 27 (Loop -> I .)
    NUMBER          reduce using rule 27 (Loop -> I .)
    STRING          reduce using rule 27 (Loop -> I .)
    DOT             reduce using rule 27 (Loop -> I .)
    KEY             reduce using rule 27 (Loop -> I .)
    CHAR            reduce using rule 27 (Loop -> I .)
    CR              reduce using rule 27 (Loop -> I .)
    SPACE           reduce using rule 27 (Loop -> I .)
    SPACES          reduce using rule 27 (Loop -> I .)
    EMIT            reduce using rule 27 (Loop -> I .)
    $end            reduce using rule 27 (Loop -> I .)
    LOOP            reduce using rule 27 (Loop -> I .)
    PLUSLOOP        reduce using rule 27 (Loop -> I .)
    UNTIL           reduce using rule 27 (Loop -> I .)
    WHILE           reduce using rule 27 (Loop -> I .)
    ELSE            reduce using rule 27 (Loop -> I .)
    THEN            reduce using rule 27 (Loop -> I .)
    SEMICOLON       reduce using rule 27 (Loop -> I .)
    REPEAT          reduce using rule 27 (Loop -> I .)


state 53

    (29) Condition -> IF . Options ELSE Options THEN
    (30) Condition -> IF . Options THEN
    (2) Options -> . Expression
    (3) Options -> . Function
    (5) Expression -> . Options Token
    (6) Expression -> .
    (4) Function -> . Options COLON ID Options SEMICOLON

    ELSE            reduce using rule 6 (Expression -> .)
    THEN            reduce using rule 6 (Expression -> .)
    COLON           reduce using rule 6 (Expression -> .)
    PLUS            reduce using rule 6 (Expression -> .)
    TIMES           reduce using rule 6 (Expression -> .)
    DIVIDE          reduce using rule 6 (Expression -> .)
    MINUS           reduce using rule 6 (Expression -> .)
    EXP             reduce using rule 6 (Expression -> .)
    MOD             reduce using rule 6 (Expression -> .)
    DIVMOD          reduce using rule 6 (Expression -> .)
    QUICKADDONE     reduce using rule 6 (Expression -> .)
    QUICKADDTWO     reduce using rule 6 (Expression -> .)
    QUICKSUBONE     reduce using rule 6 (Expression -> .)
    QUICKSUBTWO     reduce using rule 6 (Expression -> .)
    QUICKMULTWO     reduce using rule 6 (Expression -> .)
    QUICKDIVTWO     reduce using rule 6 (Expression -> .)
    ABS             reduce using rule 6 (Expression -> .)
    NEGATE          reduce using rule 6 (Expression -> .)
    MIN             reduce using rule 6 (Expression -> .)
    MAX             reduce using rule 6 (Expression -> .)
    DUP             reduce using rule 6 (Expression -> .)
    2DUP            reduce using rule 6 (Expression -> .)
    SWAP            reduce using rule 6 (Expression -> .)
    ROT             reduce using rule 6 (Expression -> .)
    OVER            reduce using rule 6 (Expression -> .)
    DROP            reduce using rule 6 (Expression -> .)
    EQUAL           reduce using rule 6 (Expression -> .)
    NOTEQUAL        reduce using rule 6 (Expression -> .)
    GREATER         reduce using rule 6 (Expression -> .)
    LESS            reduce using rule 6 (Expression -> .)
    ZEROEQUALS      reduce using rule 6 (Expression -> .)
    ZEROLESS        reduce using rule 6 (Expression -> .)
    ZEROGREATER     reduce using rule 6 (Expression -> .)
    FALSE           reduce using rule 6 (Expression -> .)
    TRUE            reduce using rule 6 (Expression -> .)
    DO              reduce using rule 6 (Expression -> .)
    BEGIN           reduce using rule 6 (Expression -> .)
    I               reduce using rule 6 (Expression -> .)
    IF              reduce using rule 6 (Expression -> .)
    VARIABLE        reduce using rule 6 (Expression -> .)
    ID              reduce using rule 6 (Expression -> .)
    NUMBER          reduce using rule 6 (Expression -> .)
    STRING          reduce using rule 6 (Expression -> .)
    DOT             reduce using rule 6 (Expression -> .)
    KEY             reduce using rule 6 (Expression -> .)
    CHAR            reduce using rule 6 (Expression -> .)
    CR              reduce using rule 6 (Expression -> .)
    SPACE           reduce using rule 6 (Expression -> .)
    SPACES          reduce using rule 6 (Expression -> .)
    EMIT            reduce using rule 6 (Expression -> .)

    Options                        shift and go to state 70
    Expression                     shift and go to state 3
    Function                       shift and go to state 4

state 54

    (56) Variables -> VARIABLE . ID

    ID              shift and go to state 71


state 55

    (68) Elem -> NUMBER .

    COLON           reduce using rule 68 (Elem -> NUMBER .)
    PLUS            reduce using rule 68 (Elem -> NUMBER .)
    TIMES           reduce using rule 68 (Elem -> NUMBER .)
    DIVIDE          reduce using rule 68 (Elem -> NUMBER .)
    MINUS           reduce using rule 68 (Elem -> NUMBER .)
    EXP             reduce using rule 68 (Elem -> NUMBER .)
    MOD             reduce using rule 68 (Elem -> NUMBER .)
    DIVMOD          reduce using rule 68 (Elem -> NUMBER .)
    QUICKADDONE     reduce using rule 68 (Elem -> NUMBER .)
    QUICKADDTWO     reduce using rule 68 (Elem -> NUMBER .)
    QUICKSUBONE     reduce using rule 68 (Elem -> NUMBER .)
    QUICKSUBTWO     reduce using rule 68 (Elem -> NUMBER .)
    QUICKMULTWO     reduce using rule 68 (Elem -> NUMBER .)
    QUICKDIVTWO     reduce using rule 68 (Elem -> NUMBER .)
    ABS             reduce using rule 68 (Elem -> NUMBER .)
    NEGATE          reduce using rule 68 (Elem -> NUMBER .)
    MIN             reduce using rule 68 (Elem -> NUMBER .)
    MAX             reduce using rule 68 (Elem -> NUMBER .)
    DUP             reduce using rule 68 (Elem -> NUMBER .)
    2DUP            reduce using rule 68 (Elem -> NUMBER .)
    SWAP            reduce using rule 68 (Elem -> NUMBER .)
    ROT             reduce using rule 68 (Elem -> NUMBER .)
    OVER            reduce using rule 68 (Elem -> NUMBER .)
    DROP            reduce using rule 68 (Elem -> NUMBER .)
    EQUAL           reduce using rule 68 (Elem -> NUMBER .)
    NOTEQUAL        reduce using rule 68 (Elem -> NUMBER .)
    GREATER         reduce using rule 68 (Elem -> NUMBER .)
    LESS            reduce using rule 68 (Elem -> NUMBER .)
    ZEROEQUALS      reduce using rule 68 (Elem -> NUMBER .)
    ZEROLESS        reduce using rule 68 (Elem -> NUMBER .)
    ZEROGREATER     reduce using rule 68 (Elem -> NUMBER .)
    FALSE           reduce using rule 68 (Elem -> NUMBER .)
    TRUE            reduce using rule 68 (Elem -> NUMBER .)
    DO              reduce using rule 68 (Elem -> NUMBER .)
    BEGIN           reduce using rule 68 (Elem -> NUMBER .)
    I               reduce using rule 68 (Elem -> NUMBER .)
    IF              reduce using rule 68 (Elem -> NUMBER .)
    VARIABLE        reduce using rule 68 (Elem -> NUMBER .)
    ID              reduce using rule 68 (Elem -> NUMBER .)
    NUMBER          reduce using rule 68 (Elem -> NUMBER .)
    STRING          reduce using rule 68 (Elem -> NUMBER .)
    DOT             reduce using rule 68 (Elem -> NUMBER .)
    KEY             reduce using rule 68 (Elem -> NUMBER .)
    CHAR            reduce using rule 68 (Elem -> NUMBER .)
    CR              reduce using rule 68 (Elem -> NUMBER .)
    SPACE           reduce using rule 68 (Elem -> NUMBER .)
    SPACES          reduce using rule 68 (Elem -> NUMBER .)
    EMIT            reduce using rule 68 (Elem -> NUMBER .)
    $end            reduce using rule 68 (Elem -> NUMBER .)
    LOOP            reduce using rule 68 (Elem -> NUMBER .)
    PLUSLOOP        reduce using rule 68 (Elem -> NUMBER .)
    UNTIL           reduce using rule 68 (Elem -> NUMBER .)
    WHILE           reduce using rule 68 (Elem -> NUMBER .)
    ELSE            reduce using rule 68 (Elem -> NUMBER .)
    THEN            reduce using rule 68 (Elem -> NUMBER .)
    SEMICOLON       reduce using rule 68 (Elem -> NUMBER .)
    REPEAT          reduce using rule 68 (Elem -> NUMBER .)


state 56

    (69) Elem -> STRING .

    COLON           reduce using rule 69 (Elem -> STRING .)
    PLUS            reduce using rule 69 (Elem -> STRING .)
    TIMES           reduce using rule 69 (Elem -> STRING .)
    DIVIDE          reduce using rule 69 (Elem -> STRING .)
    MINUS           reduce using rule 69 (Elem -> STRING .)
    EXP             reduce using rule 69 (Elem -> STRING .)
    MOD             reduce using rule 69 (Elem -> STRING .)
    DIVMOD          reduce using rule 69 (Elem -> STRING .)
    QUICKADDONE     reduce using rule 69 (Elem -> STRING .)
    QUICKADDTWO     reduce using rule 69 (Elem -> STRING .)
    QUICKSUBONE     reduce using rule 69 (Elem -> STRING .)
    QUICKSUBTWO     reduce using rule 69 (Elem -> STRING .)
    QUICKMULTWO     reduce using rule 69 (Elem -> STRING .)
    QUICKDIVTWO     reduce using rule 69 (Elem -> STRING .)
    ABS             reduce using rule 69 (Elem -> STRING .)
    NEGATE          reduce using rule 69 (Elem -> STRING .)
    MIN             reduce using rule 69 (Elem -> STRING .)
    MAX             reduce using rule 69 (Elem -> STRING .)
    DUP             reduce using rule 69 (Elem -> STRING .)
    2DUP            reduce using rule 69 (Elem -> STRING .)
    SWAP            reduce using rule 69 (Elem -> STRING .)
    ROT             reduce using rule 69 (Elem -> STRING .)
    OVER            reduce using rule 69 (Elem -> STRING .)
    DROP            reduce using rule 69 (Elem -> STRING .)
    EQUAL           reduce using rule 69 (Elem -> STRING .)
    NOTEQUAL        reduce using rule 69 (Elem -> STRING .)
    GREATER         reduce using rule 69 (Elem -> STRING .)
    LESS            reduce using rule 69 (Elem -> STRING .)
    ZEROEQUALS      reduce using rule 69 (Elem -> STRING .)
    ZEROLESS        reduce using rule 69 (Elem -> STRING .)
    ZEROGREATER     reduce using rule 69 (Elem -> STRING .)
    FALSE           reduce using rule 69 (Elem -> STRING .)
    TRUE            reduce using rule 69 (Elem -> STRING .)
    DO              reduce using rule 69 (Elem -> STRING .)
    BEGIN           reduce using rule 69 (Elem -> STRING .)
    I               reduce using rule 69 (Elem -> STRING .)
    IF              reduce using rule 69 (Elem -> STRING .)
    VARIABLE        reduce using rule 69 (Elem -> STRING .)
    ID              reduce using rule 69 (Elem -> STRING .)
    NUMBER          reduce using rule 69 (Elem -> STRING .)
    STRING          reduce using rule 69 (Elem -> STRING .)
    DOT             reduce using rule 69 (Elem -> STRING .)
    KEY             reduce using rule 69 (Elem -> STRING .)
    CHAR            reduce using rule 69 (Elem -> STRING .)
    CR              reduce using rule 69 (Elem -> STRING .)
    SPACE           reduce using rule 69 (Elem -> STRING .)
    SPACES          reduce using rule 69 (Elem -> STRING .)
    EMIT            reduce using rule 69 (Elem -> STRING .)
    $end            reduce using rule 69 (Elem -> STRING .)
    LOOP            reduce using rule 69 (Elem -> STRING .)
    PLUSLOOP        reduce using rule 69 (Elem -> STRING .)
    UNTIL           reduce using rule 69 (Elem -> STRING .)
    WHILE           reduce using rule 69 (Elem -> STRING .)
    ELSE            reduce using rule 69 (Elem -> STRING .)
    THEN            reduce using rule 69 (Elem -> STRING .)
    SEMICOLON       reduce using rule 69 (Elem -> STRING .)
    REPEAT          reduce using rule 69 (Elem -> STRING .)


state 57

    (61) Io -> DOT .

    COLON           reduce using rule 61 (Io -> DOT .)
    PLUS            reduce using rule 61 (Io -> DOT .)
    TIMES           reduce using rule 61 (Io -> DOT .)
    DIVIDE          reduce using rule 61 (Io -> DOT .)
    MINUS           reduce using rule 61 (Io -> DOT .)
    EXP             reduce using rule 61 (Io -> DOT .)
    MOD             reduce using rule 61 (Io -> DOT .)
    DIVMOD          reduce using rule 61 (Io -> DOT .)
    QUICKADDONE     reduce using rule 61 (Io -> DOT .)
    QUICKADDTWO     reduce using rule 61 (Io -> DOT .)
    QUICKSUBONE     reduce using rule 61 (Io -> DOT .)
    QUICKSUBTWO     reduce using rule 61 (Io -> DOT .)
    QUICKMULTWO     reduce using rule 61 (Io -> DOT .)
    QUICKDIVTWO     reduce using rule 61 (Io -> DOT .)
    ABS             reduce using rule 61 (Io -> DOT .)
    NEGATE          reduce using rule 61 (Io -> DOT .)
    MIN             reduce using rule 61 (Io -> DOT .)
    MAX             reduce using rule 61 (Io -> DOT .)
    DUP             reduce using rule 61 (Io -> DOT .)
    2DUP            reduce using rule 61 (Io -> DOT .)
    SWAP            reduce using rule 61 (Io -> DOT .)
    ROT             reduce using rule 61 (Io -> DOT .)
    OVER            reduce using rule 61 (Io -> DOT .)
    DROP            reduce using rule 61 (Io -> DOT .)
    EQUAL           reduce using rule 61 (Io -> DOT .)
    NOTEQUAL        reduce using rule 61 (Io -> DOT .)
    GREATER         reduce using rule 61 (Io -> DOT .)
    LESS            reduce using rule 61 (Io -> DOT .)
    ZEROEQUALS      reduce using rule 61 (Io -> DOT .)
    ZEROLESS        reduce using rule 61 (Io -> DOT .)
    ZEROGREATER     reduce using rule 61 (Io -> DOT .)
    FALSE           reduce using rule 61 (Io -> DOT .)
    TRUE            reduce using rule 61 (Io -> DOT .)
    DO              reduce using rule 61 (Io -> DOT .)
    BEGIN           reduce using rule 61 (Io -> DOT .)
    I               reduce using rule 61 (Io -> DOT .)
    IF              reduce using rule 61 (Io -> DOT .)
    VARIABLE        reduce using rule 61 (Io -> DOT .)
    ID              reduce using rule 61 (Io -> DOT .)
    NUMBER          reduce using rule 61 (Io -> DOT .)
    STRING          reduce using rule 61 (Io -> DOT .)
    DOT             reduce using rule 61 (Io -> DOT .)
    KEY             reduce using rule 61 (Io -> DOT .)
    CHAR            reduce using rule 61 (Io -> DOT .)
    CR              reduce using rule 61 (Io -> DOT .)
    SPACE           reduce using rule 61 (Io -> DOT .)
    SPACES          reduce using rule 61 (Io -> DOT .)
    EMIT            reduce using rule 61 (Io -> DOT .)
    $end            reduce using rule 61 (Io -> DOT .)
    LOOP            reduce using rule 61 (Io -> DOT .)
    PLUSLOOP        reduce using rule 61 (Io -> DOT .)
    UNTIL           reduce using rule 61 (Io -> DOT .)
    WHILE           reduce using rule 61 (Io -> DOT .)
    ELSE            reduce using rule 61 (Io -> DOT .)
    THEN            reduce using rule 61 (Io -> DOT .)
    SEMICOLON       reduce using rule 61 (Io -> DOT .)
    REPEAT          reduce using rule 61 (Io -> DOT .)


state 58

    (62) Io -> KEY .

    COLON           reduce using rule 62 (Io -> KEY .)
    PLUS            reduce using rule 62 (Io -> KEY .)
    TIMES           reduce using rule 62 (Io -> KEY .)
    DIVIDE          reduce using rule 62 (Io -> KEY .)
    MINUS           reduce using rule 62 (Io -> KEY .)
    EXP             reduce using rule 62 (Io -> KEY .)
    MOD             reduce using rule 62 (Io -> KEY .)
    DIVMOD          reduce using rule 62 (Io -> KEY .)
    QUICKADDONE     reduce using rule 62 (Io -> KEY .)
    QUICKADDTWO     reduce using rule 62 (Io -> KEY .)
    QUICKSUBONE     reduce using rule 62 (Io -> KEY .)
    QUICKSUBTWO     reduce using rule 62 (Io -> KEY .)
    QUICKMULTWO     reduce using rule 62 (Io -> KEY .)
    QUICKDIVTWO     reduce using rule 62 (Io -> KEY .)
    ABS             reduce using rule 62 (Io -> KEY .)
    NEGATE          reduce using rule 62 (Io -> KEY .)
    MIN             reduce using rule 62 (Io -> KEY .)
    MAX             reduce using rule 62 (Io -> KEY .)
    DUP             reduce using rule 62 (Io -> KEY .)
    2DUP            reduce using rule 62 (Io -> KEY .)
    SWAP            reduce using rule 62 (Io -> KEY .)
    ROT             reduce using rule 62 (Io -> KEY .)
    OVER            reduce using rule 62 (Io -> KEY .)
    DROP            reduce using rule 62 (Io -> KEY .)
    EQUAL           reduce using rule 62 (Io -> KEY .)
    NOTEQUAL        reduce using rule 62 (Io -> KEY .)
    GREATER         reduce using rule 62 (Io -> KEY .)
    LESS            reduce using rule 62 (Io -> KEY .)
    ZEROEQUALS      reduce using rule 62 (Io -> KEY .)
    ZEROLESS        reduce using rule 62 (Io -> KEY .)
    ZEROGREATER     reduce using rule 62 (Io -> KEY .)
    FALSE           reduce using rule 62 (Io -> KEY .)
    TRUE            reduce using rule 62 (Io -> KEY .)
    DO              reduce using rule 62 (Io -> KEY .)
    BEGIN           reduce using rule 62 (Io -> KEY .)
    I               reduce using rule 62 (Io -> KEY .)
    IF              reduce using rule 62 (Io -> KEY .)
    VARIABLE        reduce using rule 62 (Io -> KEY .)
    ID              reduce using rule 62 (Io -> KEY .)
    NUMBER          reduce using rule 62 (Io -> KEY .)
    STRING          reduce using rule 62 (Io -> KEY .)
    DOT             reduce using rule 62 (Io -> KEY .)
    KEY             reduce using rule 62 (Io -> KEY .)
    CHAR            reduce using rule 62 (Io -> KEY .)
    CR              reduce using rule 62 (Io -> KEY .)
    SPACE           reduce using rule 62 (Io -> KEY .)
    SPACES          reduce using rule 62 (Io -> KEY .)
    EMIT            reduce using rule 62 (Io -> KEY .)
    $end            reduce using rule 62 (Io -> KEY .)
    LOOP            reduce using rule 62 (Io -> KEY .)
    PLUSLOOP        reduce using rule 62 (Io -> KEY .)
    UNTIL           reduce using rule 62 (Io -> KEY .)
    WHILE           reduce using rule 62 (Io -> KEY .)
    ELSE            reduce using rule 62 (Io -> KEY .)
    THEN            reduce using rule 62 (Io -> KEY .)
    SEMICOLON       reduce using rule 62 (Io -> KEY .)
    REPEAT          reduce using rule 62 (Io -> KEY .)


state 59

    (63) Io -> CHAR .

    COLON           reduce using rule 63 (Io -> CHAR .)
    PLUS            reduce using rule 63 (Io -> CHAR .)
    TIMES           reduce using rule 63 (Io -> CHAR .)
    DIVIDE          reduce using rule 63 (Io -> CHAR .)
    MINUS           reduce using rule 63 (Io -> CHAR .)
    EXP             reduce using rule 63 (Io -> CHAR .)
    MOD             reduce using rule 63 (Io -> CHAR .)
    DIVMOD          reduce using rule 63 (Io -> CHAR .)
    QUICKADDONE     reduce using rule 63 (Io -> CHAR .)
    QUICKADDTWO     reduce using rule 63 (Io -> CHAR .)
    QUICKSUBONE     reduce using rule 63 (Io -> CHAR .)
    QUICKSUBTWO     reduce using rule 63 (Io -> CHAR .)
    QUICKMULTWO     reduce using rule 63 (Io -> CHAR .)
    QUICKDIVTWO     reduce using rule 63 (Io -> CHAR .)
    ABS             reduce using rule 63 (Io -> CHAR .)
    NEGATE          reduce using rule 63 (Io -> CHAR .)
    MIN             reduce using rule 63 (Io -> CHAR .)
    MAX             reduce using rule 63 (Io -> CHAR .)
    DUP             reduce using rule 63 (Io -> CHAR .)
    2DUP            reduce using rule 63 (Io -> CHAR .)
    SWAP            reduce using rule 63 (Io -> CHAR .)
    ROT             reduce using rule 63 (Io -> CHAR .)
    OVER            reduce using rule 63 (Io -> CHAR .)
    DROP            reduce using rule 63 (Io -> CHAR .)
    EQUAL           reduce using rule 63 (Io -> CHAR .)
    NOTEQUAL        reduce using rule 63 (Io -> CHAR .)
    GREATER         reduce using rule 63 (Io -> CHAR .)
    LESS            reduce using rule 63 (Io -> CHAR .)
    ZEROEQUALS      reduce using rule 63 (Io -> CHAR .)
    ZEROLESS        reduce using rule 63 (Io -> CHAR .)
    ZEROGREATER     reduce using rule 63 (Io -> CHAR .)
    FALSE           reduce using rule 63 (Io -> CHAR .)
    TRUE            reduce using rule 63 (Io -> CHAR .)
    DO              reduce using rule 63 (Io -> CHAR .)
    BEGIN           reduce using rule 63 (Io -> CHAR .)
    I               reduce using rule 63 (Io -> CHAR .)
    IF              reduce using rule 63 (Io -> CHAR .)
    VARIABLE        reduce using rule 63 (Io -> CHAR .)
    ID              reduce using rule 63 (Io -> CHAR .)
    NUMBER          reduce using rule 63 (Io -> CHAR .)
    STRING          reduce using rule 63 (Io -> CHAR .)
    DOT             reduce using rule 63 (Io -> CHAR .)
    KEY             reduce using rule 63 (Io -> CHAR .)
    CHAR            reduce using rule 63 (Io -> CHAR .)
    CR              reduce using rule 63 (Io -> CHAR .)
    SPACE           reduce using rule 63 (Io -> CHAR .)
    SPACES          reduce using rule 63 (Io -> CHAR .)
    EMIT            reduce using rule 63 (Io -> CHAR .)
    $end            reduce using rule 63 (Io -> CHAR .)
    LOOP            reduce using rule 63 (Io -> CHAR .)
    PLUSLOOP        reduce using rule 63 (Io -> CHAR .)
    UNTIL           reduce using rule 63 (Io -> CHAR .)
    WHILE           reduce using rule 63 (Io -> CHAR .)
    ELSE            reduce using rule 63 (Io -> CHAR .)
    THEN            reduce using rule 63 (Io -> CHAR .)
    SEMICOLON       reduce using rule 63 (Io -> CHAR .)
    REPEAT          reduce using rule 63 (Io -> CHAR .)


state 60

    (64) Io -> CR .

    COLON           reduce using rule 64 (Io -> CR .)
    PLUS            reduce using rule 64 (Io -> CR .)
    TIMES           reduce using rule 64 (Io -> CR .)
    DIVIDE          reduce using rule 64 (Io -> CR .)
    MINUS           reduce using rule 64 (Io -> CR .)
    EXP             reduce using rule 64 (Io -> CR .)
    MOD             reduce using rule 64 (Io -> CR .)
    DIVMOD          reduce using rule 64 (Io -> CR .)
    QUICKADDONE     reduce using rule 64 (Io -> CR .)
    QUICKADDTWO     reduce using rule 64 (Io -> CR .)
    QUICKSUBONE     reduce using rule 64 (Io -> CR .)
    QUICKSUBTWO     reduce using rule 64 (Io -> CR .)
    QUICKMULTWO     reduce using rule 64 (Io -> CR .)
    QUICKDIVTWO     reduce using rule 64 (Io -> CR .)
    ABS             reduce using rule 64 (Io -> CR .)
    NEGATE          reduce using rule 64 (Io -> CR .)
    MIN             reduce using rule 64 (Io -> CR .)
    MAX             reduce using rule 64 (Io -> CR .)
    DUP             reduce using rule 64 (Io -> CR .)
    2DUP            reduce using rule 64 (Io -> CR .)
    SWAP            reduce using rule 64 (Io -> CR .)
    ROT             reduce using rule 64 (Io -> CR .)
    OVER            reduce using rule 64 (Io -> CR .)
    DROP            reduce using rule 64 (Io -> CR .)
    EQUAL           reduce using rule 64 (Io -> CR .)
    NOTEQUAL        reduce using rule 64 (Io -> CR .)
    GREATER         reduce using rule 64 (Io -> CR .)
    LESS            reduce using rule 64 (Io -> CR .)
    ZEROEQUALS      reduce using rule 64 (Io -> CR .)
    ZEROLESS        reduce using rule 64 (Io -> CR .)
    ZEROGREATER     reduce using rule 64 (Io -> CR .)
    FALSE           reduce using rule 64 (Io -> CR .)
    TRUE            reduce using rule 64 (Io -> CR .)
    DO              reduce using rule 64 (Io -> CR .)
    BEGIN           reduce using rule 64 (Io -> CR .)
    I               reduce using rule 64 (Io -> CR .)
    IF              reduce using rule 64 (Io -> CR .)
    VARIABLE        reduce using rule 64 (Io -> CR .)
    ID              reduce using rule 64 (Io -> CR .)
    NUMBER          reduce using rule 64 (Io -> CR .)
    STRING          reduce using rule 64 (Io -> CR .)
    DOT             reduce using rule 64 (Io -> CR .)
    KEY             reduce using rule 64 (Io -> CR .)
    CHAR            reduce using rule 64 (Io -> CR .)
    CR              reduce using rule 64 (Io -> CR .)
    SPACE           reduce using rule 64 (Io -> CR .)
    SPACES          reduce using rule 64 (Io -> CR .)
    EMIT            reduce using rule 64 (Io -> CR .)
    $end            reduce using rule 64 (Io -> CR .)
    LOOP            reduce using rule 64 (Io -> CR .)
    PLUSLOOP        reduce using rule 64 (Io -> CR .)
    UNTIL           reduce using rule 64 (Io -> CR .)
    WHILE           reduce using rule 64 (Io -> CR .)
    ELSE            reduce using rule 64 (Io -> CR .)
    THEN            reduce using rule 64 (Io -> CR .)
    SEMICOLON       reduce using rule 64 (Io -> CR .)
    REPEAT          reduce using rule 64 (Io -> CR .)


state 61

    (65) Io -> SPACE .

    COLON           reduce using rule 65 (Io -> SPACE .)
    PLUS            reduce using rule 65 (Io -> SPACE .)
    TIMES           reduce using rule 65 (Io -> SPACE .)
    DIVIDE          reduce using rule 65 (Io -> SPACE .)
    MINUS           reduce using rule 65 (Io -> SPACE .)
    EXP             reduce using rule 65 (Io -> SPACE .)
    MOD             reduce using rule 65 (Io -> SPACE .)
    DIVMOD          reduce using rule 65 (Io -> SPACE .)
    QUICKADDONE     reduce using rule 65 (Io -> SPACE .)
    QUICKADDTWO     reduce using rule 65 (Io -> SPACE .)
    QUICKSUBONE     reduce using rule 65 (Io -> SPACE .)
    QUICKSUBTWO     reduce using rule 65 (Io -> SPACE .)
    QUICKMULTWO     reduce using rule 65 (Io -> SPACE .)
    QUICKDIVTWO     reduce using rule 65 (Io -> SPACE .)
    ABS             reduce using rule 65 (Io -> SPACE .)
    NEGATE          reduce using rule 65 (Io -> SPACE .)
    MIN             reduce using rule 65 (Io -> SPACE .)
    MAX             reduce using rule 65 (Io -> SPACE .)
    DUP             reduce using rule 65 (Io -> SPACE .)
    2DUP            reduce using rule 65 (Io -> SPACE .)
    SWAP            reduce using rule 65 (Io -> SPACE .)
    ROT             reduce using rule 65 (Io -> SPACE .)
    OVER            reduce using rule 65 (Io -> SPACE .)
    DROP            reduce using rule 65 (Io -> SPACE .)
    EQUAL           reduce using rule 65 (Io -> SPACE .)
    NOTEQUAL        reduce using rule 65 (Io -> SPACE .)
    GREATER         reduce using rule 65 (Io -> SPACE .)
    LESS            reduce using rule 65 (Io -> SPACE .)
    ZEROEQUALS      reduce using rule 65 (Io -> SPACE .)
    ZEROLESS        reduce using rule 65 (Io -> SPACE .)
    ZEROGREATER     reduce using rule 65 (Io -> SPACE .)
    FALSE           reduce using rule 65 (Io -> SPACE .)
    TRUE            reduce using rule 65 (Io -> SPACE .)
    DO              reduce using rule 65 (Io -> SPACE .)
    BEGIN           reduce using rule 65 (Io -> SPACE .)
    I               reduce using rule 65 (Io -> SPACE .)
    IF              reduce using rule 65 (Io -> SPACE .)
    VARIABLE        reduce using rule 65 (Io -> SPACE .)
    ID              reduce using rule 65 (Io -> SPACE .)
    NUMBER          reduce using rule 65 (Io -> SPACE .)
    STRING          reduce using rule 65 (Io -> SPACE .)
    DOT             reduce using rule 65 (Io -> SPACE .)
    KEY             reduce using rule 65 (Io -> SPACE .)
    CHAR            reduce using rule 65 (Io -> SPACE .)
    CR              reduce using rule 65 (Io -> SPACE .)
    SPACE           reduce using rule 65 (Io -> SPACE .)
    SPACES          reduce using rule 65 (Io -> SPACE .)
    EMIT            reduce using rule 65 (Io -> SPACE .)
    $end            reduce using rule 65 (Io -> SPACE .)
    LOOP            reduce using rule 65 (Io -> SPACE .)
    PLUSLOOP        reduce using rule 65 (Io -> SPACE .)
    UNTIL           reduce using rule 65 (Io -> SPACE .)
    WHILE           reduce using rule 65 (Io -> SPACE .)
    ELSE            reduce using rule 65 (Io -> SPACE .)
    THEN            reduce using rule 65 (Io -> SPACE .)
    SEMICOLON       reduce using rule 65 (Io -> SPACE .)
    REPEAT          reduce using rule 65 (Io -> SPACE .)


state 62

    (66) Io -> SPACES .

    COLON           reduce using rule 66 (Io -> SPACES .)
    PLUS            reduce using rule 66 (Io -> SPACES .)
    TIMES           reduce using rule 66 (Io -> SPACES .)
    DIVIDE          reduce using rule 66 (Io -> SPACES .)
    MINUS           reduce using rule 66 (Io -> SPACES .)
    EXP             reduce using rule 66 (Io -> SPACES .)
    MOD             reduce using rule 66 (Io -> SPACES .)
    DIVMOD          reduce using rule 66 (Io -> SPACES .)
    QUICKADDONE     reduce using rule 66 (Io -> SPACES .)
    QUICKADDTWO     reduce using rule 66 (Io -> SPACES .)
    QUICKSUBONE     reduce using rule 66 (Io -> SPACES .)
    QUICKSUBTWO     reduce using rule 66 (Io -> SPACES .)
    QUICKMULTWO     reduce using rule 66 (Io -> SPACES .)
    QUICKDIVTWO     reduce using rule 66 (Io -> SPACES .)
    ABS             reduce using rule 66 (Io -> SPACES .)
    NEGATE          reduce using rule 66 (Io -> SPACES .)
    MIN             reduce using rule 66 (Io -> SPACES .)
    MAX             reduce using rule 66 (Io -> SPACES .)
    DUP             reduce using rule 66 (Io -> SPACES .)
    2DUP            reduce using rule 66 (Io -> SPACES .)
    SWAP            reduce using rule 66 (Io -> SPACES .)
    ROT             reduce using rule 66 (Io -> SPACES .)
    OVER            reduce using rule 66 (Io -> SPACES .)
    DROP            reduce using rule 66 (Io -> SPACES .)
    EQUAL           reduce using rule 66 (Io -> SPACES .)
    NOTEQUAL        reduce using rule 66 (Io -> SPACES .)
    GREATER         reduce using rule 66 (Io -> SPACES .)
    LESS            reduce using rule 66 (Io -> SPACES .)
    ZEROEQUALS      reduce using rule 66 (Io -> SPACES .)
    ZEROLESS        reduce using rule 66 (Io -> SPACES .)
    ZEROGREATER     reduce using rule 66 (Io -> SPACES .)
    FALSE           reduce using rule 66 (Io -> SPACES .)
    TRUE            reduce using rule 66 (Io -> SPACES .)
    DO              reduce using rule 66 (Io -> SPACES .)
    BEGIN           reduce using rule 66 (Io -> SPACES .)
    I               reduce using rule 66 (Io -> SPACES .)
    IF              reduce using rule 66 (Io -> SPACES .)
    VARIABLE        reduce using rule 66 (Io -> SPACES .)
    ID              reduce using rule 66 (Io -> SPACES .)
    NUMBER          reduce using rule 66 (Io -> SPACES .)
    STRING          reduce using rule 66 (Io -> SPACES .)
    DOT             reduce using rule 66 (Io -> SPACES .)
    KEY             reduce using rule 66 (Io -> SPACES .)
    CHAR            reduce using rule 66 (Io -> SPACES .)
    CR              reduce using rule 66 (Io -> SPACES .)
    SPACE           reduce using rule 66 (Io -> SPACES .)
    SPACES          reduce using rule 66 (Io -> SPACES .)
    EMIT            reduce using rule 66 (Io -> SPACES .)
    $end            reduce using rule 66 (Io -> SPACES .)
    LOOP            reduce using rule 66 (Io -> SPACES .)
    PLUSLOOP        reduce using rule 66 (Io -> SPACES .)
    UNTIL           reduce using rule 66 (Io -> SPACES .)
    WHILE           reduce using rule 66 (Io -> SPACES .)
    ELSE            reduce using rule 66 (Io -> SPACES .)
    THEN            reduce using rule 66 (Io -> SPACES .)
    SEMICOLON       reduce using rule 66 (Io -> SPACES .)
    REPEAT          reduce using rule 66 (Io -> SPACES .)


state 63

    (67) Io -> EMIT .

    COLON           reduce using rule 67 (Io -> EMIT .)
    PLUS            reduce using rule 67 (Io -> EMIT .)
    TIMES           reduce using rule 67 (Io -> EMIT .)
    DIVIDE          reduce using rule 67 (Io -> EMIT .)
    MINUS           reduce using rule 67 (Io -> EMIT .)
    EXP             reduce using rule 67 (Io -> EMIT .)
    MOD             reduce using rule 67 (Io -> EMIT .)
    DIVMOD          reduce using rule 67 (Io -> EMIT .)
    QUICKADDONE     reduce using rule 67 (Io -> EMIT .)
    QUICKADDTWO     reduce using rule 67 (Io -> EMIT .)
    QUICKSUBONE     reduce using rule 67 (Io -> EMIT .)
    QUICKSUBTWO     reduce using rule 67 (Io -> EMIT .)
    QUICKMULTWO     reduce using rule 67 (Io -> EMIT .)
    QUICKDIVTWO     reduce using rule 67 (Io -> EMIT .)
    ABS             reduce using rule 67 (Io -> EMIT .)
    NEGATE          reduce using rule 67 (Io -> EMIT .)
    MIN             reduce using rule 67 (Io -> EMIT .)
    MAX             reduce using rule 67 (Io -> EMIT .)
    DUP             reduce using rule 67 (Io -> EMIT .)
    2DUP            reduce using rule 67 (Io -> EMIT .)
    SWAP            reduce using rule 67 (Io -> EMIT .)
    ROT             reduce using rule 67 (Io -> EMIT .)
    OVER            reduce using rule 67 (Io -> EMIT .)
    DROP            reduce using rule 67 (Io -> EMIT .)
    EQUAL           reduce using rule 67 (Io -> EMIT .)
    NOTEQUAL        reduce using rule 67 (Io -> EMIT .)
    GREATER         reduce using rule 67 (Io -> EMIT .)
    LESS            reduce using rule 67 (Io -> EMIT .)
    ZEROEQUALS      reduce using rule 67 (Io -> EMIT .)
    ZEROLESS        reduce using rule 67 (Io -> EMIT .)
    ZEROGREATER     reduce using rule 67 (Io -> EMIT .)
    FALSE           reduce using rule 67 (Io -> EMIT .)
    TRUE            reduce using rule 67 (Io -> EMIT .)
    DO              reduce using rule 67 (Io -> EMIT .)
    BEGIN           reduce using rule 67 (Io -> EMIT .)
    I               reduce using rule 67 (Io -> EMIT .)
    IF              reduce using rule 67 (Io -> EMIT .)
    VARIABLE        reduce using rule 67 (Io -> EMIT .)
    ID              reduce using rule 67 (Io -> EMIT .)
    NUMBER          reduce using rule 67 (Io -> EMIT .)
    STRING          reduce using rule 67 (Io -> EMIT .)
    DOT             reduce using rule 67 (Io -> EMIT .)
    KEY             reduce using rule 67 (Io -> EMIT .)
    CHAR            reduce using rule 67 (Io -> EMIT .)
    CR              reduce using rule 67 (Io -> EMIT .)
    SPACE           reduce using rule 67 (Io -> EMIT .)
    SPACES          reduce using rule 67 (Io -> EMIT .)
    EMIT            reduce using rule 67 (Io -> EMIT .)
    $end            reduce using rule 67 (Io -> EMIT .)
    LOOP            reduce using rule 67 (Io -> EMIT .)
    PLUSLOOP        reduce using rule 67 (Io -> EMIT .)
    UNTIL           reduce using rule 67 (Io -> EMIT .)
    WHILE           reduce using rule 67 (Io -> EMIT .)
    ELSE            reduce using rule 67 (Io -> EMIT .)
    THEN            reduce using rule 67 (Io -> EMIT .)
    SEMICOLON       reduce using rule 67 (Io -> EMIT .)
    REPEAT          reduce using rule 67 (Io -> EMIT .)


state 64

    (4) Function -> Options COLON ID . Options SEMICOLON
    (2) Options -> . Expression
    (3) Options -> . Function
    (5) Expression -> . Options Token
    (6) Expression -> .
    (4) Function -> . Options COLON ID Options SEMICOLON

    SEMICOLON       reduce using rule 6 (Expression -> .)
    COLON           reduce using rule 6 (Expression -> .)
    PLUS            reduce using rule 6 (Expression -> .)
    TIMES           reduce using rule 6 (Expression -> .)
    DIVIDE          reduce using rule 6 (Expression -> .)
    MINUS           reduce using rule 6 (Expression -> .)
    EXP             reduce using rule 6 (Expression -> .)
    MOD             reduce using rule 6 (Expression -> .)
    DIVMOD          reduce using rule 6 (Expression -> .)
    QUICKADDONE     reduce using rule 6 (Expression -> .)
    QUICKADDTWO     reduce using rule 6 (Expression -> .)
    QUICKSUBONE     reduce using rule 6 (Expression -> .)
    QUICKSUBTWO     reduce using rule 6 (Expression -> .)
    QUICKMULTWO     reduce using rule 6 (Expression -> .)
    QUICKDIVTWO     reduce using rule 6 (Expression -> .)
    ABS             reduce using rule 6 (Expression -> .)
    NEGATE          reduce using rule 6 (Expression -> .)
    MIN             reduce using rule 6 (Expression -> .)
    MAX             reduce using rule 6 (Expression -> .)
    DUP             reduce using rule 6 (Expression -> .)
    2DUP            reduce using rule 6 (Expression -> .)
    SWAP            reduce using rule 6 (Expression -> .)
    ROT             reduce using rule 6 (Expression -> .)
    OVER            reduce using rule 6 (Expression -> .)
    DROP            reduce using rule 6 (Expression -> .)
    EQUAL           reduce using rule 6 (Expression -> .)
    NOTEQUAL        reduce using rule 6 (Expression -> .)
    GREATER         reduce using rule 6 (Expression -> .)
    LESS            reduce using rule 6 (Expression -> .)
    ZEROEQUALS      reduce using rule 6 (Expression -> .)
    ZEROLESS        reduce using rule 6 (Expression -> .)
    ZEROGREATER     reduce using rule 6 (Expression -> .)
    FALSE           reduce using rule 6 (Expression -> .)
    TRUE            reduce using rule 6 (Expression -> .)
    DO              reduce using rule 6 (Expression -> .)
    BEGIN           reduce using rule 6 (Expression -> .)
    I               reduce using rule 6 (Expression -> .)
    IF              reduce using rule 6 (Expression -> .)
    VARIABLE        reduce using rule 6 (Expression -> .)
    ID              reduce using rule 6 (Expression -> .)
    NUMBER          reduce using rule 6 (Expression -> .)
    STRING          reduce using rule 6 (Expression -> .)
    DOT             reduce using rule 6 (Expression -> .)
    KEY             reduce using rule 6 (Expression -> .)
    CHAR            reduce using rule 6 (Expression -> .)
    CR              reduce using rule 6 (Expression -> .)
    SPACE           reduce using rule 6 (Expression -> .)
    SPACES          reduce using rule 6 (Expression -> .)
    EMIT            reduce using rule 6 (Expression -> .)

    Options                        shift and go to state 72
    Expression                     shift and go to state 3
    Function                       shift and go to state 4

state 65

    (57) Variables -> ID EXCLAMATION .

    COLON           reduce using rule 57 (Variables -> ID EXCLAMATION .)
    PLUS            reduce using rule 57 (Variables -> ID EXCLAMATION .)
    TIMES           reduce using rule 57 (Variables -> ID EXCLAMATION .)
    DIVIDE          reduce using rule 57 (Variables -> ID EXCLAMATION .)
    MINUS           reduce using rule 57 (Variables -> ID EXCLAMATION .)
    EXP             reduce using rule 57 (Variables -> ID EXCLAMATION .)
    MOD             reduce using rule 57 (Variables -> ID EXCLAMATION .)
    DIVMOD          reduce using rule 57 (Variables -> ID EXCLAMATION .)
    QUICKADDONE     reduce using rule 57 (Variables -> ID EXCLAMATION .)
    QUICKADDTWO     reduce using rule 57 (Variables -> ID EXCLAMATION .)
    QUICKSUBONE     reduce using rule 57 (Variables -> ID EXCLAMATION .)
    QUICKSUBTWO     reduce using rule 57 (Variables -> ID EXCLAMATION .)
    QUICKMULTWO     reduce using rule 57 (Variables -> ID EXCLAMATION .)
    QUICKDIVTWO     reduce using rule 57 (Variables -> ID EXCLAMATION .)
    ABS             reduce using rule 57 (Variables -> ID EXCLAMATION .)
    NEGATE          reduce using rule 57 (Variables -> ID EXCLAMATION .)
    MIN             reduce using rule 57 (Variables -> ID EXCLAMATION .)
    MAX             reduce using rule 57 (Variables -> ID EXCLAMATION .)
    DUP             reduce using rule 57 (Variables -> ID EXCLAMATION .)
    2DUP            reduce using rule 57 (Variables -> ID EXCLAMATION .)
    SWAP            reduce using rule 57 (Variables -> ID EXCLAMATION .)
    ROT             reduce using rule 57 (Variables -> ID EXCLAMATION .)
    OVER            reduce using rule 57 (Variables -> ID EXCLAMATION .)
    DROP            reduce using rule 57 (Variables -> ID EXCLAMATION .)
    EQUAL           reduce using rule 57 (Variables -> ID EXCLAMATION .)
    NOTEQUAL        reduce using rule 57 (Variables -> ID EXCLAMATION .)
    GREATER         reduce using rule 57 (Variables -> ID EXCLAMATION .)
    LESS            reduce using rule 57 (Variables -> ID EXCLAMATION .)
    ZEROEQUALS      reduce using rule 57 (Variables -> ID EXCLAMATION .)
    ZEROLESS        reduce using rule 57 (Variables -> ID EXCLAMATION .)
    ZEROGREATER     reduce using rule 57 (Variables -> ID EXCLAMATION .)
    FALSE           reduce using rule 57 (Variables -> ID EXCLAMATION .)
    TRUE            reduce using rule 57 (Variables -> ID EXCLAMATION .)
    DO              reduce using rule 57 (Variables -> ID EXCLAMATION .)
    BEGIN           reduce using rule 57 (Variables -> ID EXCLAMATION .)
    I               reduce using rule 57 (Variables -> ID EXCLAMATION .)
    IF              reduce using rule 57 (Variables -> ID EXCLAMATION .)
    VARIABLE        reduce using rule 57 (Variables -> ID EXCLAMATION .)
    ID              reduce using rule 57 (Variables -> ID EXCLAMATION .)
    NUMBER          reduce using rule 57 (Variables -> ID EXCLAMATION .)
    STRING          reduce using rule 57 (Variables -> ID EXCLAMATION .)
    DOT             reduce using rule 57 (Variables -> ID EXCLAMATION .)
    KEY             reduce using rule 57 (Variables -> ID EXCLAMATION .)
    CHAR            reduce using rule 57 (Variables -> ID EXCLAMATION .)
    CR              reduce using rule 57 (Variables -> ID EXCLAMATION .)
    SPACE           reduce using rule 57 (Variables -> ID EXCLAMATION .)
    SPACES          reduce using rule 57 (Variables -> ID EXCLAMATION .)
    EMIT            reduce using rule 57 (Variables -> ID EXCLAMATION .)
    $end            reduce using rule 57 (Variables -> ID EXCLAMATION .)
    LOOP            reduce using rule 57 (Variables -> ID EXCLAMATION .)
    PLUSLOOP        reduce using rule 57 (Variables -> ID EXCLAMATION .)
    UNTIL           reduce using rule 57 (Variables -> ID EXCLAMATION .)
    WHILE           reduce using rule 57 (Variables -> ID EXCLAMATION .)
    ELSE            reduce using rule 57 (Variables -> ID EXCLAMATION .)
    THEN            reduce using rule 57 (Variables -> ID EXCLAMATION .)
    SEMICOLON       reduce using rule 57 (Variables -> ID EXCLAMATION .)
    REPEAT          reduce using rule 57 (Variables -> ID EXCLAMATION .)


state 66

    (58) Variables -> ID ATSIGN .

    COLON           reduce using rule 58 (Variables -> ID ATSIGN .)
    PLUS            reduce using rule 58 (Variables -> ID ATSIGN .)
    TIMES           reduce using rule 58 (Variables -> ID ATSIGN .)
    DIVIDE          reduce using rule 58 (Variables -> ID ATSIGN .)
    MINUS           reduce using rule 58 (Variables -> ID ATSIGN .)
    EXP             reduce using rule 58 (Variables -> ID ATSIGN .)
    MOD             reduce using rule 58 (Variables -> ID ATSIGN .)
    DIVMOD          reduce using rule 58 (Variables -> ID ATSIGN .)
    QUICKADDONE     reduce using rule 58 (Variables -> ID ATSIGN .)
    QUICKADDTWO     reduce using rule 58 (Variables -> ID ATSIGN .)
    QUICKSUBONE     reduce using rule 58 (Variables -> ID ATSIGN .)
    QUICKSUBTWO     reduce using rule 58 (Variables -> ID ATSIGN .)
    QUICKMULTWO     reduce using rule 58 (Variables -> ID ATSIGN .)
    QUICKDIVTWO     reduce using rule 58 (Variables -> ID ATSIGN .)
    ABS             reduce using rule 58 (Variables -> ID ATSIGN .)
    NEGATE          reduce using rule 58 (Variables -> ID ATSIGN .)
    MIN             reduce using rule 58 (Variables -> ID ATSIGN .)
    MAX             reduce using rule 58 (Variables -> ID ATSIGN .)
    DUP             reduce using rule 58 (Variables -> ID ATSIGN .)
    2DUP            reduce using rule 58 (Variables -> ID ATSIGN .)
    SWAP            reduce using rule 58 (Variables -> ID ATSIGN .)
    ROT             reduce using rule 58 (Variables -> ID ATSIGN .)
    OVER            reduce using rule 58 (Variables -> ID ATSIGN .)
    DROP            reduce using rule 58 (Variables -> ID ATSIGN .)
    EQUAL           reduce using rule 58 (Variables -> ID ATSIGN .)
    NOTEQUAL        reduce using rule 58 (Variables -> ID ATSIGN .)
    GREATER         reduce using rule 58 (Variables -> ID ATSIGN .)
    LESS            reduce using rule 58 (Variables -> ID ATSIGN .)
    ZEROEQUALS      reduce using rule 58 (Variables -> ID ATSIGN .)
    ZEROLESS        reduce using rule 58 (Variables -> ID ATSIGN .)
    ZEROGREATER     reduce using rule 58 (Variables -> ID ATSIGN .)
    FALSE           reduce using rule 58 (Variables -> ID ATSIGN .)
    TRUE            reduce using rule 58 (Variables -> ID ATSIGN .)
    DO              reduce using rule 58 (Variables -> ID ATSIGN .)
    BEGIN           reduce using rule 58 (Variables -> ID ATSIGN .)
    I               reduce using rule 58 (Variables -> ID ATSIGN .)
    IF              reduce using rule 58 (Variables -> ID ATSIGN .)
    VARIABLE        reduce using rule 58 (Variables -> ID ATSIGN .)
    ID              reduce using rule 58 (Variables -> ID ATSIGN .)
    NUMBER          reduce using rule 58 (Variables -> ID ATSIGN .)
    STRING          reduce using rule 58 (Variables -> ID ATSIGN .)
    DOT             reduce using rule 58 (Variables -> ID ATSIGN .)
    KEY             reduce using rule 58 (Variables -> ID ATSIGN .)
    CHAR            reduce using rule 58 (Variables -> ID ATSIGN .)
    CR              reduce using rule 58 (Variables -> ID ATSIGN .)
    SPACE           reduce using rule 58 (Variables -> ID ATSIGN .)
    SPACES          reduce using rule 58 (Variables -> ID ATSIGN .)
    EMIT            reduce using rule 58 (Variables -> ID ATSIGN .)
    $end            reduce using rule 58 (Variables -> ID ATSIGN .)
    LOOP            reduce using rule 58 (Variables -> ID ATSIGN .)
    PLUSLOOP        reduce using rule 58 (Variables -> ID ATSIGN .)
    UNTIL           reduce using rule 58 (Variables -> ID ATSIGN .)
    WHILE           reduce using rule 58 (Variables -> ID ATSIGN .)
    ELSE            reduce using rule 58 (Variables -> ID ATSIGN .)
    THEN            reduce using rule 58 (Variables -> ID ATSIGN .)
    SEMICOLON       reduce using rule 58 (Variables -> ID ATSIGN .)
    REPEAT          reduce using rule 58 (Variables -> ID ATSIGN .)


state 67

    (59) Variables -> ID QUESTIONMARK .

    COLON           reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    PLUS            reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    TIMES           reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    DIVIDE          reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    MINUS           reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    EXP             reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    MOD             reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    DIVMOD          reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    QUICKADDONE     reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    QUICKADDTWO     reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    QUICKSUBONE     reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    QUICKSUBTWO     reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    QUICKMULTWO     reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    QUICKDIVTWO     reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    ABS             reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    NEGATE          reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    MIN             reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    MAX             reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    DUP             reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    2DUP            reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    SWAP            reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    ROT             reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    OVER            reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    DROP            reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    EQUAL           reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    NOTEQUAL        reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    GREATER         reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    LESS            reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    ZEROEQUALS      reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    ZEROLESS        reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    ZEROGREATER     reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    FALSE           reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    TRUE            reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    DO              reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    BEGIN           reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    I               reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    IF              reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    VARIABLE        reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    ID              reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    NUMBER          reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    STRING          reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    DOT             reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    KEY             reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    CHAR            reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    CR              reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    SPACE           reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    SPACES          reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    EMIT            reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    $end            reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    LOOP            reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    PLUSLOOP        reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    UNTIL           reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    WHILE           reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    ELSE            reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    THEN            reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    SEMICOLON       reduce using rule 59 (Variables -> ID QUESTIONMARK .)
    REPEAT          reduce using rule 59 (Variables -> ID QUESTIONMARK .)


state 68

    (24) Loop -> DO Options . LOOP
    (28) Loop -> DO Options . PLUSLOOP
    (5) Expression -> Options . Token
    (4) Function -> Options . COLON ID Options SEMICOLON
    (7) Token -> . Operation
    (8) Token -> . Quickie
    (9) Token -> . Misk
    (10) Token -> . Manuver
    (11) Token -> . Logic
    (12) Token -> . Loop
    (13) Token -> . Condition
    (14) Token -> . Variables
    (15) Token -> . Elem
    (16) Token -> . Io
    (17) Operation -> . PLUS
    (18) Operation -> . TIMES
    (19) Operation -> . DIVIDE
    (20) Operation -> . MINUS
    (21) Operation -> . EXP
    (22) Operation -> . MOD
    (23) Operation -> . DIVMOD
    (31) Quickie -> . QUICKADDONE
    (32) Quickie -> . QUICKADDTWO
    (33) Quickie -> . QUICKSUBONE
    (34) Quickie -> . QUICKSUBTWO
    (35) Quickie -> . QUICKMULTWO
    (36) Quickie -> . QUICKDIVTWO
    (46) Misk -> . ABS
    (47) Misk -> . NEGATE
    (48) Misk -> . MIN
    (49) Misk -> . MAX
    (50) Manuver -> . DUP
    (51) Manuver -> . 2DUP
    (52) Manuver -> . SWAP
    (53) Manuver -> . ROT
    (54) Manuver -> . OVER
    (55) Manuver -> . DROP
    (37) Logic -> . EQUAL
    (38) Logic -> . NOTEQUAL
    (39) Logic -> . GREATER
    (40) Logic -> . LESS
    (41) Logic -> . ZEROEQUALS
    (42) Logic -> . ZEROLESS
    (43) Logic -> . ZEROGREATER
    (44) Logic -> . FALSE
    (45) Logic -> . TRUE
    (24) Loop -> . DO Options LOOP
    (25) Loop -> . BEGIN Options UNTIL
    (26) Loop -> . BEGIN Options WHILE Options REPEAT
    (27) Loop -> . I
    (28) Loop -> . DO Options PLUSLOOP
    (29) Condition -> . IF Options ELSE Options THEN
    (30) Condition -> . IF Options THEN
    (56) Variables -> . VARIABLE ID
    (57) Variables -> . ID EXCLAMATION
    (58) Variables -> . ID ATSIGN
    (59) Variables -> . ID QUESTIONMARK
    (60) Variables -> . ID
    (68) Elem -> . NUMBER
    (69) Elem -> . STRING
    (61) Io -> . DOT
    (62) Io -> . KEY
    (63) Io -> . CHAR
    (64) Io -> . CR
    (65) Io -> . SPACE
    (66) Io -> . SPACES
    (67) Io -> . EMIT

    LOOP            shift and go to state 73
    PLUSLOOP        shift and go to state 74
    COLON           shift and go to state 6
    PLUS            shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    MINUS           shift and go to state 21
    EXP             shift and go to state 22
    MOD             shift and go to state 23
    DIVMOD          shift and go to state 24
    QUICKADDONE     shift and go to state 25
    QUICKADDTWO     shift and go to state 26
    QUICKSUBONE     shift and go to state 27
    QUICKSUBTWO     shift and go to state 28
    QUICKMULTWO     shift and go to state 29
    QUICKDIVTWO     shift and go to state 30
    ABS             shift and go to state 31
    NEGATE          shift and go to state 32
    MIN             shift and go to state 33
    MAX             shift and go to state 34
    DUP             shift and go to state 35
    2DUP            shift and go to state 36
    SWAP            shift and go to state 37
    ROT             shift and go to state 38
    OVER            shift and go to state 39
    DROP            shift and go to state 40
    EQUAL           shift and go to state 41
    NOTEQUAL        shift and go to state 42
    GREATER         shift and go to state 43
    LESS            shift and go to state 44
    ZEROEQUALS      shift and go to state 45
    ZEROLESS        shift and go to state 46
    ZEROGREATER     shift and go to state 47
    FALSE           shift and go to state 48
    TRUE            shift and go to state 49
    DO              shift and go to state 50
    BEGIN           shift and go to state 51
    I               shift and go to state 52
    IF              shift and go to state 53
    VARIABLE        shift and go to state 54
    ID              shift and go to state 7
    NUMBER          shift and go to state 55
    STRING          shift and go to state 56
    DOT             shift and go to state 57
    KEY             shift and go to state 58
    CHAR            shift and go to state 59
    CR              shift and go to state 60
    SPACE           shift and go to state 61
    SPACES          shift and go to state 62
    EMIT            shift and go to state 63

    Token                          shift and go to state 5
    Operation                      shift and go to state 8
    Quickie                        shift and go to state 9
    Misk                           shift and go to state 10
    Manuver                        shift and go to state 11
    Logic                          shift and go to state 12
    Loop                           shift and go to state 13
    Condition                      shift and go to state 14
    Variables                      shift and go to state 15
    Elem                           shift and go to state 16
    Io                             shift and go to state 17

state 69

    (25) Loop -> BEGIN Options . UNTIL
    (26) Loop -> BEGIN Options . WHILE Options REPEAT
    (5) Expression -> Options . Token
    (4) Function -> Options . COLON ID Options SEMICOLON
    (7) Token -> . Operation
    (8) Token -> . Quickie
    (9) Token -> . Misk
    (10) Token -> . Manuver
    (11) Token -> . Logic
    (12) Token -> . Loop
    (13) Token -> . Condition
    (14) Token -> . Variables
    (15) Token -> . Elem
    (16) Token -> . Io
    (17) Operation -> . PLUS
    (18) Operation -> . TIMES
    (19) Operation -> . DIVIDE
    (20) Operation -> . MINUS
    (21) Operation -> . EXP
    (22) Operation -> . MOD
    (23) Operation -> . DIVMOD
    (31) Quickie -> . QUICKADDONE
    (32) Quickie -> . QUICKADDTWO
    (33) Quickie -> . QUICKSUBONE
    (34) Quickie -> . QUICKSUBTWO
    (35) Quickie -> . QUICKMULTWO
    (36) Quickie -> . QUICKDIVTWO
    (46) Misk -> . ABS
    (47) Misk -> . NEGATE
    (48) Misk -> . MIN
    (49) Misk -> . MAX
    (50) Manuver -> . DUP
    (51) Manuver -> . 2DUP
    (52) Manuver -> . SWAP
    (53) Manuver -> . ROT
    (54) Manuver -> . OVER
    (55) Manuver -> . DROP
    (37) Logic -> . EQUAL
    (38) Logic -> . NOTEQUAL
    (39) Logic -> . GREATER
    (40) Logic -> . LESS
    (41) Logic -> . ZEROEQUALS
    (42) Logic -> . ZEROLESS
    (43) Logic -> . ZEROGREATER
    (44) Logic -> . FALSE
    (45) Logic -> . TRUE
    (24) Loop -> . DO Options LOOP
    (25) Loop -> . BEGIN Options UNTIL
    (26) Loop -> . BEGIN Options WHILE Options REPEAT
    (27) Loop -> . I
    (28) Loop -> . DO Options PLUSLOOP
    (29) Condition -> . IF Options ELSE Options THEN
    (30) Condition -> . IF Options THEN
    (56) Variables -> . VARIABLE ID
    (57) Variables -> . ID EXCLAMATION
    (58) Variables -> . ID ATSIGN
    (59) Variables -> . ID QUESTIONMARK
    (60) Variables -> . ID
    (68) Elem -> . NUMBER
    (69) Elem -> . STRING
    (61) Io -> . DOT
    (62) Io -> . KEY
    (63) Io -> . CHAR
    (64) Io -> . CR
    (65) Io -> . SPACE
    (66) Io -> . SPACES
    (67) Io -> . EMIT

    UNTIL           shift and go to state 75
    WHILE           shift and go to state 76
    COLON           shift and go to state 6
    PLUS            shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    MINUS           shift and go to state 21
    EXP             shift and go to state 22
    MOD             shift and go to state 23
    DIVMOD          shift and go to state 24
    QUICKADDONE     shift and go to state 25
    QUICKADDTWO     shift and go to state 26
    QUICKSUBONE     shift and go to state 27
    QUICKSUBTWO     shift and go to state 28
    QUICKMULTWO     shift and go to state 29
    QUICKDIVTWO     shift and go to state 30
    ABS             shift and go to state 31
    NEGATE          shift and go to state 32
    MIN             shift and go to state 33
    MAX             shift and go to state 34
    DUP             shift and go to state 35
    2DUP            shift and go to state 36
    SWAP            shift and go to state 37
    ROT             shift and go to state 38
    OVER            shift and go to state 39
    DROP            shift and go to state 40
    EQUAL           shift and go to state 41
    NOTEQUAL        shift and go to state 42
    GREATER         shift and go to state 43
    LESS            shift and go to state 44
    ZEROEQUALS      shift and go to state 45
    ZEROLESS        shift and go to state 46
    ZEROGREATER     shift and go to state 47
    FALSE           shift and go to state 48
    TRUE            shift and go to state 49
    DO              shift and go to state 50
    BEGIN           shift and go to state 51
    I               shift and go to state 52
    IF              shift and go to state 53
    VARIABLE        shift and go to state 54
    ID              shift and go to state 7
    NUMBER          shift and go to state 55
    STRING          shift and go to state 56
    DOT             shift and go to state 57
    KEY             shift and go to state 58
    CHAR            shift and go to state 59
    CR              shift and go to state 60
    SPACE           shift and go to state 61
    SPACES          shift and go to state 62
    EMIT            shift and go to state 63

    Token                          shift and go to state 5
    Operation                      shift and go to state 8
    Quickie                        shift and go to state 9
    Misk                           shift and go to state 10
    Manuver                        shift and go to state 11
    Logic                          shift and go to state 12
    Loop                           shift and go to state 13
    Condition                      shift and go to state 14
    Variables                      shift and go to state 15
    Elem                           shift and go to state 16
    Io                             shift and go to state 17

state 70

    (29) Condition -> IF Options . ELSE Options THEN
    (30) Condition -> IF Options . THEN
    (5) Expression -> Options . Token
    (4) Function -> Options . COLON ID Options SEMICOLON
    (7) Token -> . Operation
    (8) Token -> . Quickie
    (9) Token -> . Misk
    (10) Token -> . Manuver
    (11) Token -> . Logic
    (12) Token -> . Loop
    (13) Token -> . Condition
    (14) Token -> . Variables
    (15) Token -> . Elem
    (16) Token -> . Io
    (17) Operation -> . PLUS
    (18) Operation -> . TIMES
    (19) Operation -> . DIVIDE
    (20) Operation -> . MINUS
    (21) Operation -> . EXP
    (22) Operation -> . MOD
    (23) Operation -> . DIVMOD
    (31) Quickie -> . QUICKADDONE
    (32) Quickie -> . QUICKADDTWO
    (33) Quickie -> . QUICKSUBONE
    (34) Quickie -> . QUICKSUBTWO
    (35) Quickie -> . QUICKMULTWO
    (36) Quickie -> . QUICKDIVTWO
    (46) Misk -> . ABS
    (47) Misk -> . NEGATE
    (48) Misk -> . MIN
    (49) Misk -> . MAX
    (50) Manuver -> . DUP
    (51) Manuver -> . 2DUP
    (52) Manuver -> . SWAP
    (53) Manuver -> . ROT
    (54) Manuver -> . OVER
    (55) Manuver -> . DROP
    (37) Logic -> . EQUAL
    (38) Logic -> . NOTEQUAL
    (39) Logic -> . GREATER
    (40) Logic -> . LESS
    (41) Logic -> . ZEROEQUALS
    (42) Logic -> . ZEROLESS
    (43) Logic -> . ZEROGREATER
    (44) Logic -> . FALSE
    (45) Logic -> . TRUE
    (24) Loop -> . DO Options LOOP
    (25) Loop -> . BEGIN Options UNTIL
    (26) Loop -> . BEGIN Options WHILE Options REPEAT
    (27) Loop -> . I
    (28) Loop -> . DO Options PLUSLOOP
    (29) Condition -> . IF Options ELSE Options THEN
    (30) Condition -> . IF Options THEN
    (56) Variables -> . VARIABLE ID
    (57) Variables -> . ID EXCLAMATION
    (58) Variables -> . ID ATSIGN
    (59) Variables -> . ID QUESTIONMARK
    (60) Variables -> . ID
    (68) Elem -> . NUMBER
    (69) Elem -> . STRING
    (61) Io -> . DOT
    (62) Io -> . KEY
    (63) Io -> . CHAR
    (64) Io -> . CR
    (65) Io -> . SPACE
    (66) Io -> . SPACES
    (67) Io -> . EMIT

    ELSE            shift and go to state 77
    THEN            shift and go to state 78
    COLON           shift and go to state 6
    PLUS            shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    MINUS           shift and go to state 21
    EXP             shift and go to state 22
    MOD             shift and go to state 23
    DIVMOD          shift and go to state 24
    QUICKADDONE     shift and go to state 25
    QUICKADDTWO     shift and go to state 26
    QUICKSUBONE     shift and go to state 27
    QUICKSUBTWO     shift and go to state 28
    QUICKMULTWO     shift and go to state 29
    QUICKDIVTWO     shift and go to state 30
    ABS             shift and go to state 31
    NEGATE          shift and go to state 32
    MIN             shift and go to state 33
    MAX             shift and go to state 34
    DUP             shift and go to state 35
    2DUP            shift and go to state 36
    SWAP            shift and go to state 37
    ROT             shift and go to state 38
    OVER            shift and go to state 39
    DROP            shift and go to state 40
    EQUAL           shift and go to state 41
    NOTEQUAL        shift and go to state 42
    GREATER         shift and go to state 43
    LESS            shift and go to state 44
    ZEROEQUALS      shift and go to state 45
    ZEROLESS        shift and go to state 46
    ZEROGREATER     shift and go to state 47
    FALSE           shift and go to state 48
    TRUE            shift and go to state 49
    DO              shift and go to state 50
    BEGIN           shift and go to state 51
    I               shift and go to state 52
    IF              shift and go to state 53
    VARIABLE        shift and go to state 54
    ID              shift and go to state 7
    NUMBER          shift and go to state 55
    STRING          shift and go to state 56
    DOT             shift and go to state 57
    KEY             shift and go to state 58
    CHAR            shift and go to state 59
    CR              shift and go to state 60
    SPACE           shift and go to state 61
    SPACES          shift and go to state 62
    EMIT            shift and go to state 63

    Token                          shift and go to state 5
    Operation                      shift and go to state 8
    Quickie                        shift and go to state 9
    Misk                           shift and go to state 10
    Manuver                        shift and go to state 11
    Logic                          shift and go to state 12
    Loop                           shift and go to state 13
    Condition                      shift and go to state 14
    Variables                      shift and go to state 15
    Elem                           shift and go to state 16
    Io                             shift and go to state 17

state 71

    (56) Variables -> VARIABLE ID .

    COLON           reduce using rule 56 (Variables -> VARIABLE ID .)
    PLUS            reduce using rule 56 (Variables -> VARIABLE ID .)
    TIMES           reduce using rule 56 (Variables -> VARIABLE ID .)
    DIVIDE          reduce using rule 56 (Variables -> VARIABLE ID .)
    MINUS           reduce using rule 56 (Variables -> VARIABLE ID .)
    EXP             reduce using rule 56 (Variables -> VARIABLE ID .)
    MOD             reduce using rule 56 (Variables -> VARIABLE ID .)
    DIVMOD          reduce using rule 56 (Variables -> VARIABLE ID .)
    QUICKADDONE     reduce using rule 56 (Variables -> VARIABLE ID .)
    QUICKADDTWO     reduce using rule 56 (Variables -> VARIABLE ID .)
    QUICKSUBONE     reduce using rule 56 (Variables -> VARIABLE ID .)
    QUICKSUBTWO     reduce using rule 56 (Variables -> VARIABLE ID .)
    QUICKMULTWO     reduce using rule 56 (Variables -> VARIABLE ID .)
    QUICKDIVTWO     reduce using rule 56 (Variables -> VARIABLE ID .)
    ABS             reduce using rule 56 (Variables -> VARIABLE ID .)
    NEGATE          reduce using rule 56 (Variables -> VARIABLE ID .)
    MIN             reduce using rule 56 (Variables -> VARIABLE ID .)
    MAX             reduce using rule 56 (Variables -> VARIABLE ID .)
    DUP             reduce using rule 56 (Variables -> VARIABLE ID .)
    2DUP            reduce using rule 56 (Variables -> VARIABLE ID .)
    SWAP            reduce using rule 56 (Variables -> VARIABLE ID .)
    ROT             reduce using rule 56 (Variables -> VARIABLE ID .)
    OVER            reduce using rule 56 (Variables -> VARIABLE ID .)
    DROP            reduce using rule 56 (Variables -> VARIABLE ID .)
    EQUAL           reduce using rule 56 (Variables -> VARIABLE ID .)
    NOTEQUAL        reduce using rule 56 (Variables -> VARIABLE ID .)
    GREATER         reduce using rule 56 (Variables -> VARIABLE ID .)
    LESS            reduce using rule 56 (Variables -> VARIABLE ID .)
    ZEROEQUALS      reduce using rule 56 (Variables -> VARIABLE ID .)
    ZEROLESS        reduce using rule 56 (Variables -> VARIABLE ID .)
    ZEROGREATER     reduce using rule 56 (Variables -> VARIABLE ID .)
    FALSE           reduce using rule 56 (Variables -> VARIABLE ID .)
    TRUE            reduce using rule 56 (Variables -> VARIABLE ID .)
    DO              reduce using rule 56 (Variables -> VARIABLE ID .)
    BEGIN           reduce using rule 56 (Variables -> VARIABLE ID .)
    I               reduce using rule 56 (Variables -> VARIABLE ID .)
    IF              reduce using rule 56 (Variables -> VARIABLE ID .)
    VARIABLE        reduce using rule 56 (Variables -> VARIABLE ID .)
    ID              reduce using rule 56 (Variables -> VARIABLE ID .)
    NUMBER          reduce using rule 56 (Variables -> VARIABLE ID .)
    STRING          reduce using rule 56 (Variables -> VARIABLE ID .)
    DOT             reduce using rule 56 (Variables -> VARIABLE ID .)
    KEY             reduce using rule 56 (Variables -> VARIABLE ID .)
    CHAR            reduce using rule 56 (Variables -> VARIABLE ID .)
    CR              reduce using rule 56 (Variables -> VARIABLE ID .)
    SPACE           reduce using rule 56 (Variables -> VARIABLE ID .)
    SPACES          reduce using rule 56 (Variables -> VARIABLE ID .)
    EMIT            reduce using rule 56 (Variables -> VARIABLE ID .)
    $end            reduce using rule 56 (Variables -> VARIABLE ID .)
    LOOP            reduce using rule 56 (Variables -> VARIABLE ID .)
    PLUSLOOP        reduce using rule 56 (Variables -> VARIABLE ID .)
    UNTIL           reduce using rule 56 (Variables -> VARIABLE ID .)
    WHILE           reduce using rule 56 (Variables -> VARIABLE ID .)
    ELSE            reduce using rule 56 (Variables -> VARIABLE ID .)
    THEN            reduce using rule 56 (Variables -> VARIABLE ID .)
    SEMICOLON       reduce using rule 56 (Variables -> VARIABLE ID .)
    REPEAT          reduce using rule 56 (Variables -> VARIABLE ID .)


state 72

    (4) Function -> Options COLON ID Options . SEMICOLON
    (5) Expression -> Options . Token
    (4) Function -> Options . COLON ID Options SEMICOLON
    (7) Token -> . Operation
    (8) Token -> . Quickie
    (9) Token -> . Misk
    (10) Token -> . Manuver
    (11) Token -> . Logic
    (12) Token -> . Loop
    (13) Token -> . Condition
    (14) Token -> . Variables
    (15) Token -> . Elem
    (16) Token -> . Io
    (17) Operation -> . PLUS
    (18) Operation -> . TIMES
    (19) Operation -> . DIVIDE
    (20) Operation -> . MINUS
    (21) Operation -> . EXP
    (22) Operation -> . MOD
    (23) Operation -> . DIVMOD
    (31) Quickie -> . QUICKADDONE
    (32) Quickie -> . QUICKADDTWO
    (33) Quickie -> . QUICKSUBONE
    (34) Quickie -> . QUICKSUBTWO
    (35) Quickie -> . QUICKMULTWO
    (36) Quickie -> . QUICKDIVTWO
    (46) Misk -> . ABS
    (47) Misk -> . NEGATE
    (48) Misk -> . MIN
    (49) Misk -> . MAX
    (50) Manuver -> . DUP
    (51) Manuver -> . 2DUP
    (52) Manuver -> . SWAP
    (53) Manuver -> . ROT
    (54) Manuver -> . OVER
    (55) Manuver -> . DROP
    (37) Logic -> . EQUAL
    (38) Logic -> . NOTEQUAL
    (39) Logic -> . GREATER
    (40) Logic -> . LESS
    (41) Logic -> . ZEROEQUALS
    (42) Logic -> . ZEROLESS
    (43) Logic -> . ZEROGREATER
    (44) Logic -> . FALSE
    (45) Logic -> . TRUE
    (24) Loop -> . DO Options LOOP
    (25) Loop -> . BEGIN Options UNTIL
    (26) Loop -> . BEGIN Options WHILE Options REPEAT
    (27) Loop -> . I
    (28) Loop -> . DO Options PLUSLOOP
    (29) Condition -> . IF Options ELSE Options THEN
    (30) Condition -> . IF Options THEN
    (56) Variables -> . VARIABLE ID
    (57) Variables -> . ID EXCLAMATION
    (58) Variables -> . ID ATSIGN
    (59) Variables -> . ID QUESTIONMARK
    (60) Variables -> . ID
    (68) Elem -> . NUMBER
    (69) Elem -> . STRING
    (61) Io -> . DOT
    (62) Io -> . KEY
    (63) Io -> . CHAR
    (64) Io -> . CR
    (65) Io -> . SPACE
    (66) Io -> . SPACES
    (67) Io -> . EMIT

    SEMICOLON       shift and go to state 79
    COLON           shift and go to state 6
    PLUS            shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    MINUS           shift and go to state 21
    EXP             shift and go to state 22
    MOD             shift and go to state 23
    DIVMOD          shift and go to state 24
    QUICKADDONE     shift and go to state 25
    QUICKADDTWO     shift and go to state 26
    QUICKSUBONE     shift and go to state 27
    QUICKSUBTWO     shift and go to state 28
    QUICKMULTWO     shift and go to state 29
    QUICKDIVTWO     shift and go to state 30
    ABS             shift and go to state 31
    NEGATE          shift and go to state 32
    MIN             shift and go to state 33
    MAX             shift and go to state 34
    DUP             shift and go to state 35
    2DUP            shift and go to state 36
    SWAP            shift and go to state 37
    ROT             shift and go to state 38
    OVER            shift and go to state 39
    DROP            shift and go to state 40
    EQUAL           shift and go to state 41
    NOTEQUAL        shift and go to state 42
    GREATER         shift and go to state 43
    LESS            shift and go to state 44
    ZEROEQUALS      shift and go to state 45
    ZEROLESS        shift and go to state 46
    ZEROGREATER     shift and go to state 47
    FALSE           shift and go to state 48
    TRUE            shift and go to state 49
    DO              shift and go to state 50
    BEGIN           shift and go to state 51
    I               shift and go to state 52
    IF              shift and go to state 53
    VARIABLE        shift and go to state 54
    ID              shift and go to state 7
    NUMBER          shift and go to state 55
    STRING          shift and go to state 56
    DOT             shift and go to state 57
    KEY             shift and go to state 58
    CHAR            shift and go to state 59
    CR              shift and go to state 60
    SPACE           shift and go to state 61
    SPACES          shift and go to state 62
    EMIT            shift and go to state 63

    Token                          shift and go to state 5
    Operation                      shift and go to state 8
    Quickie                        shift and go to state 9
    Misk                           shift and go to state 10
    Manuver                        shift and go to state 11
    Logic                          shift and go to state 12
    Loop                           shift and go to state 13
    Condition                      shift and go to state 14
    Variables                      shift and go to state 15
    Elem                           shift and go to state 16
    Io                             shift and go to state 17

state 73

    (24) Loop -> DO Options LOOP .

    COLON           reduce using rule 24 (Loop -> DO Options LOOP .)
    PLUS            reduce using rule 24 (Loop -> DO Options LOOP .)
    TIMES           reduce using rule 24 (Loop -> DO Options LOOP .)
    DIVIDE          reduce using rule 24 (Loop -> DO Options LOOP .)
    MINUS           reduce using rule 24 (Loop -> DO Options LOOP .)
    EXP             reduce using rule 24 (Loop -> DO Options LOOP .)
    MOD             reduce using rule 24 (Loop -> DO Options LOOP .)
    DIVMOD          reduce using rule 24 (Loop -> DO Options LOOP .)
    QUICKADDONE     reduce using rule 24 (Loop -> DO Options LOOP .)
    QUICKADDTWO     reduce using rule 24 (Loop -> DO Options LOOP .)
    QUICKSUBONE     reduce using rule 24 (Loop -> DO Options LOOP .)
    QUICKSUBTWO     reduce using rule 24 (Loop -> DO Options LOOP .)
    QUICKMULTWO     reduce using rule 24 (Loop -> DO Options LOOP .)
    QUICKDIVTWO     reduce using rule 24 (Loop -> DO Options LOOP .)
    ABS             reduce using rule 24 (Loop -> DO Options LOOP .)
    NEGATE          reduce using rule 24 (Loop -> DO Options LOOP .)
    MIN             reduce using rule 24 (Loop -> DO Options LOOP .)
    MAX             reduce using rule 24 (Loop -> DO Options LOOP .)
    DUP             reduce using rule 24 (Loop -> DO Options LOOP .)
    2DUP            reduce using rule 24 (Loop -> DO Options LOOP .)
    SWAP            reduce using rule 24 (Loop -> DO Options LOOP .)
    ROT             reduce using rule 24 (Loop -> DO Options LOOP .)
    OVER            reduce using rule 24 (Loop -> DO Options LOOP .)
    DROP            reduce using rule 24 (Loop -> DO Options LOOP .)
    EQUAL           reduce using rule 24 (Loop -> DO Options LOOP .)
    NOTEQUAL        reduce using rule 24 (Loop -> DO Options LOOP .)
    GREATER         reduce using rule 24 (Loop -> DO Options LOOP .)
    LESS            reduce using rule 24 (Loop -> DO Options LOOP .)
    ZEROEQUALS      reduce using rule 24 (Loop -> DO Options LOOP .)
    ZEROLESS        reduce using rule 24 (Loop -> DO Options LOOP .)
    ZEROGREATER     reduce using rule 24 (Loop -> DO Options LOOP .)
    FALSE           reduce using rule 24 (Loop -> DO Options LOOP .)
    TRUE            reduce using rule 24 (Loop -> DO Options LOOP .)
    DO              reduce using rule 24 (Loop -> DO Options LOOP .)
    BEGIN           reduce using rule 24 (Loop -> DO Options LOOP .)
    I               reduce using rule 24 (Loop -> DO Options LOOP .)
    IF              reduce using rule 24 (Loop -> DO Options LOOP .)
    VARIABLE        reduce using rule 24 (Loop -> DO Options LOOP .)
    ID              reduce using rule 24 (Loop -> DO Options LOOP .)
    NUMBER          reduce using rule 24 (Loop -> DO Options LOOP .)
    STRING          reduce using rule 24 (Loop -> DO Options LOOP .)
    DOT             reduce using rule 24 (Loop -> DO Options LOOP .)
    KEY             reduce using rule 24 (Loop -> DO Options LOOP .)
    CHAR            reduce using rule 24 (Loop -> DO Options LOOP .)
    CR              reduce using rule 24 (Loop -> DO Options LOOP .)
    SPACE           reduce using rule 24 (Loop -> DO Options LOOP .)
    SPACES          reduce using rule 24 (Loop -> DO Options LOOP .)
    EMIT            reduce using rule 24 (Loop -> DO Options LOOP .)
    $end            reduce using rule 24 (Loop -> DO Options LOOP .)
    LOOP            reduce using rule 24 (Loop -> DO Options LOOP .)
    PLUSLOOP        reduce using rule 24 (Loop -> DO Options LOOP .)
    UNTIL           reduce using rule 24 (Loop -> DO Options LOOP .)
    WHILE           reduce using rule 24 (Loop -> DO Options LOOP .)
    ELSE            reduce using rule 24 (Loop -> DO Options LOOP .)
    THEN            reduce using rule 24 (Loop -> DO Options LOOP .)
    SEMICOLON       reduce using rule 24 (Loop -> DO Options LOOP .)
    REPEAT          reduce using rule 24 (Loop -> DO Options LOOP .)


state 74

    (28) Loop -> DO Options PLUSLOOP .

    COLON           reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    PLUS            reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    TIMES           reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    DIVIDE          reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    MINUS           reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    EXP             reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    MOD             reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    DIVMOD          reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    QUICKADDONE     reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    QUICKADDTWO     reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    QUICKSUBONE     reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    QUICKSUBTWO     reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    QUICKMULTWO     reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    QUICKDIVTWO     reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    ABS             reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    NEGATE          reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    MIN             reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    MAX             reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    DUP             reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    2DUP            reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    SWAP            reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    ROT             reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    OVER            reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    DROP            reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    EQUAL           reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    NOTEQUAL        reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    GREATER         reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    LESS            reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    ZEROEQUALS      reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    ZEROLESS        reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    ZEROGREATER     reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    FALSE           reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    TRUE            reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    DO              reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    BEGIN           reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    I               reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    IF              reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    VARIABLE        reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    ID              reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    NUMBER          reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    STRING          reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    DOT             reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    KEY             reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    CHAR            reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    CR              reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    SPACE           reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    SPACES          reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    EMIT            reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    $end            reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    LOOP            reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    PLUSLOOP        reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    UNTIL           reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    WHILE           reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    ELSE            reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    THEN            reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    SEMICOLON       reduce using rule 28 (Loop -> DO Options PLUSLOOP .)
    REPEAT          reduce using rule 28 (Loop -> DO Options PLUSLOOP .)


state 75

    (25) Loop -> BEGIN Options UNTIL .

    COLON           reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    PLUS            reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    TIMES           reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    DIVIDE          reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    MINUS           reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    EXP             reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    MOD             reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    DIVMOD          reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    QUICKADDONE     reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    QUICKADDTWO     reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    QUICKSUBONE     reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    QUICKSUBTWO     reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    QUICKMULTWO     reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    QUICKDIVTWO     reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    ABS             reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    NEGATE          reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    MIN             reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    MAX             reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    DUP             reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    2DUP            reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    SWAP            reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    ROT             reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    OVER            reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    DROP            reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    EQUAL           reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    NOTEQUAL        reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    GREATER         reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    LESS            reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    ZEROEQUALS      reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    ZEROLESS        reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    ZEROGREATER     reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    FALSE           reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    TRUE            reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    DO              reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    BEGIN           reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    I               reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    IF              reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    VARIABLE        reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    ID              reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    NUMBER          reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    STRING          reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    DOT             reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    KEY             reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    CHAR            reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    CR              reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    SPACE           reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    SPACES          reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    EMIT            reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    $end            reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    LOOP            reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    PLUSLOOP        reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    UNTIL           reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    WHILE           reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    ELSE            reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    THEN            reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    SEMICOLON       reduce using rule 25 (Loop -> BEGIN Options UNTIL .)
    REPEAT          reduce using rule 25 (Loop -> BEGIN Options UNTIL .)


state 76

    (26) Loop -> BEGIN Options WHILE . Options REPEAT
    (2) Options -> . Expression
    (3) Options -> . Function
    (5) Expression -> . Options Token
    (6) Expression -> .
    (4) Function -> . Options COLON ID Options SEMICOLON

    REPEAT          reduce using rule 6 (Expression -> .)
    COLON           reduce using rule 6 (Expression -> .)
    PLUS            reduce using rule 6 (Expression -> .)
    TIMES           reduce using rule 6 (Expression -> .)
    DIVIDE          reduce using rule 6 (Expression -> .)
    MINUS           reduce using rule 6 (Expression -> .)
    EXP             reduce using rule 6 (Expression -> .)
    MOD             reduce using rule 6 (Expression -> .)
    DIVMOD          reduce using rule 6 (Expression -> .)
    QUICKADDONE     reduce using rule 6 (Expression -> .)
    QUICKADDTWO     reduce using rule 6 (Expression -> .)
    QUICKSUBONE     reduce using rule 6 (Expression -> .)
    QUICKSUBTWO     reduce using rule 6 (Expression -> .)
    QUICKMULTWO     reduce using rule 6 (Expression -> .)
    QUICKDIVTWO     reduce using rule 6 (Expression -> .)
    ABS             reduce using rule 6 (Expression -> .)
    NEGATE          reduce using rule 6 (Expression -> .)
    MIN             reduce using rule 6 (Expression -> .)
    MAX             reduce using rule 6 (Expression -> .)
    DUP             reduce using rule 6 (Expression -> .)
    2DUP            reduce using rule 6 (Expression -> .)
    SWAP            reduce using rule 6 (Expression -> .)
    ROT             reduce using rule 6 (Expression -> .)
    OVER            reduce using rule 6 (Expression -> .)
    DROP            reduce using rule 6 (Expression -> .)
    EQUAL           reduce using rule 6 (Expression -> .)
    NOTEQUAL        reduce using rule 6 (Expression -> .)
    GREATER         reduce using rule 6 (Expression -> .)
    LESS            reduce using rule 6 (Expression -> .)
    ZEROEQUALS      reduce using rule 6 (Expression -> .)
    ZEROLESS        reduce using rule 6 (Expression -> .)
    ZEROGREATER     reduce using rule 6 (Expression -> .)
    FALSE           reduce using rule 6 (Expression -> .)
    TRUE            reduce using rule 6 (Expression -> .)
    DO              reduce using rule 6 (Expression -> .)
    BEGIN           reduce using rule 6 (Expression -> .)
    I               reduce using rule 6 (Expression -> .)
    IF              reduce using rule 6 (Expression -> .)
    VARIABLE        reduce using rule 6 (Expression -> .)
    ID              reduce using rule 6 (Expression -> .)
    NUMBER          reduce using rule 6 (Expression -> .)
    STRING          reduce using rule 6 (Expression -> .)
    DOT             reduce using rule 6 (Expression -> .)
    KEY             reduce using rule 6 (Expression -> .)
    CHAR            reduce using rule 6 (Expression -> .)
    CR              reduce using rule 6 (Expression -> .)
    SPACE           reduce using rule 6 (Expression -> .)
    SPACES          reduce using rule 6 (Expression -> .)
    EMIT            reduce using rule 6 (Expression -> .)

    Options                        shift and go to state 80
    Expression                     shift and go to state 3
    Function                       shift and go to state 4

state 77

    (29) Condition -> IF Options ELSE . Options THEN
    (2) Options -> . Expression
    (3) Options -> . Function
    (5) Expression -> . Options Token
    (6) Expression -> .
    (4) Function -> . Options COLON ID Options SEMICOLON

    THEN            reduce using rule 6 (Expression -> .)
    COLON           reduce using rule 6 (Expression -> .)
    PLUS            reduce using rule 6 (Expression -> .)
    TIMES           reduce using rule 6 (Expression -> .)
    DIVIDE          reduce using rule 6 (Expression -> .)
    MINUS           reduce using rule 6 (Expression -> .)
    EXP             reduce using rule 6 (Expression -> .)
    MOD             reduce using rule 6 (Expression -> .)
    DIVMOD          reduce using rule 6 (Expression -> .)
    QUICKADDONE     reduce using rule 6 (Expression -> .)
    QUICKADDTWO     reduce using rule 6 (Expression -> .)
    QUICKSUBONE     reduce using rule 6 (Expression -> .)
    QUICKSUBTWO     reduce using rule 6 (Expression -> .)
    QUICKMULTWO     reduce using rule 6 (Expression -> .)
    QUICKDIVTWO     reduce using rule 6 (Expression -> .)
    ABS             reduce using rule 6 (Expression -> .)
    NEGATE          reduce using rule 6 (Expression -> .)
    MIN             reduce using rule 6 (Expression -> .)
    MAX             reduce using rule 6 (Expression -> .)
    DUP             reduce using rule 6 (Expression -> .)
    2DUP            reduce using rule 6 (Expression -> .)
    SWAP            reduce using rule 6 (Expression -> .)
    ROT             reduce using rule 6 (Expression -> .)
    OVER            reduce using rule 6 (Expression -> .)
    DROP            reduce using rule 6 (Expression -> .)
    EQUAL           reduce using rule 6 (Expression -> .)
    NOTEQUAL        reduce using rule 6 (Expression -> .)
    GREATER         reduce using rule 6 (Expression -> .)
    LESS            reduce using rule 6 (Expression -> .)
    ZEROEQUALS      reduce using rule 6 (Expression -> .)
    ZEROLESS        reduce using rule 6 (Expression -> .)
    ZEROGREATER     reduce using rule 6 (Expression -> .)
    FALSE           reduce using rule 6 (Expression -> .)
    TRUE            reduce using rule 6 (Expression -> .)
    DO              reduce using rule 6 (Expression -> .)
    BEGIN           reduce using rule 6 (Expression -> .)
    I               reduce using rule 6 (Expression -> .)
    IF              reduce using rule 6 (Expression -> .)
    VARIABLE        reduce using rule 6 (Expression -> .)
    ID              reduce using rule 6 (Expression -> .)
    NUMBER          reduce using rule 6 (Expression -> .)
    STRING          reduce using rule 6 (Expression -> .)
    DOT             reduce using rule 6 (Expression -> .)
    KEY             reduce using rule 6 (Expression -> .)
    CHAR            reduce using rule 6 (Expression -> .)
    CR              reduce using rule 6 (Expression -> .)
    SPACE           reduce using rule 6 (Expression -> .)
    SPACES          reduce using rule 6 (Expression -> .)
    EMIT            reduce using rule 6 (Expression -> .)

    Options                        shift and go to state 81
    Expression                     shift and go to state 3
    Function                       shift and go to state 4

state 78

    (30) Condition -> IF Options THEN .

    COLON           reduce using rule 30 (Condition -> IF Options THEN .)
    PLUS            reduce using rule 30 (Condition -> IF Options THEN .)
    TIMES           reduce using rule 30 (Condition -> IF Options THEN .)
    DIVIDE          reduce using rule 30 (Condition -> IF Options THEN .)
    MINUS           reduce using rule 30 (Condition -> IF Options THEN .)
    EXP             reduce using rule 30 (Condition -> IF Options THEN .)
    MOD             reduce using rule 30 (Condition -> IF Options THEN .)
    DIVMOD          reduce using rule 30 (Condition -> IF Options THEN .)
    QUICKADDONE     reduce using rule 30 (Condition -> IF Options THEN .)
    QUICKADDTWO     reduce using rule 30 (Condition -> IF Options THEN .)
    QUICKSUBONE     reduce using rule 30 (Condition -> IF Options THEN .)
    QUICKSUBTWO     reduce using rule 30 (Condition -> IF Options THEN .)
    QUICKMULTWO     reduce using rule 30 (Condition -> IF Options THEN .)
    QUICKDIVTWO     reduce using rule 30 (Condition -> IF Options THEN .)
    ABS             reduce using rule 30 (Condition -> IF Options THEN .)
    NEGATE          reduce using rule 30 (Condition -> IF Options THEN .)
    MIN             reduce using rule 30 (Condition -> IF Options THEN .)
    MAX             reduce using rule 30 (Condition -> IF Options THEN .)
    DUP             reduce using rule 30 (Condition -> IF Options THEN .)
    2DUP            reduce using rule 30 (Condition -> IF Options THEN .)
    SWAP            reduce using rule 30 (Condition -> IF Options THEN .)
    ROT             reduce using rule 30 (Condition -> IF Options THEN .)
    OVER            reduce using rule 30 (Condition -> IF Options THEN .)
    DROP            reduce using rule 30 (Condition -> IF Options THEN .)
    EQUAL           reduce using rule 30 (Condition -> IF Options THEN .)
    NOTEQUAL        reduce using rule 30 (Condition -> IF Options THEN .)
    GREATER         reduce using rule 30 (Condition -> IF Options THEN .)
    LESS            reduce using rule 30 (Condition -> IF Options THEN .)
    ZEROEQUALS      reduce using rule 30 (Condition -> IF Options THEN .)
    ZEROLESS        reduce using rule 30 (Condition -> IF Options THEN .)
    ZEROGREATER     reduce using rule 30 (Condition -> IF Options THEN .)
    FALSE           reduce using rule 30 (Condition -> IF Options THEN .)
    TRUE            reduce using rule 30 (Condition -> IF Options THEN .)
    DO              reduce using rule 30 (Condition -> IF Options THEN .)
    BEGIN           reduce using rule 30 (Condition -> IF Options THEN .)
    I               reduce using rule 30 (Condition -> IF Options THEN .)
    IF              reduce using rule 30 (Condition -> IF Options THEN .)
    VARIABLE        reduce using rule 30 (Condition -> IF Options THEN .)
    ID              reduce using rule 30 (Condition -> IF Options THEN .)
    NUMBER          reduce using rule 30 (Condition -> IF Options THEN .)
    STRING          reduce using rule 30 (Condition -> IF Options THEN .)
    DOT             reduce using rule 30 (Condition -> IF Options THEN .)
    KEY             reduce using rule 30 (Condition -> IF Options THEN .)
    CHAR            reduce using rule 30 (Condition -> IF Options THEN .)
    CR              reduce using rule 30 (Condition -> IF Options THEN .)
    SPACE           reduce using rule 30 (Condition -> IF Options THEN .)
    SPACES          reduce using rule 30 (Condition -> IF Options THEN .)
    EMIT            reduce using rule 30 (Condition -> IF Options THEN .)
    $end            reduce using rule 30 (Condition -> IF Options THEN .)
    LOOP            reduce using rule 30 (Condition -> IF Options THEN .)
    PLUSLOOP        reduce using rule 30 (Condition -> IF Options THEN .)
    UNTIL           reduce using rule 30 (Condition -> IF Options THEN .)
    WHILE           reduce using rule 30 (Condition -> IF Options THEN .)
    ELSE            reduce using rule 30 (Condition -> IF Options THEN .)
    THEN            reduce using rule 30 (Condition -> IF Options THEN .)
    SEMICOLON       reduce using rule 30 (Condition -> IF Options THEN .)
    REPEAT          reduce using rule 30 (Condition -> IF Options THEN .)


state 79

    (4) Function -> Options COLON ID Options SEMICOLON .

    COLON           reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    PLUS            reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    TIMES           reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    DIVIDE          reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    MINUS           reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    EXP             reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    MOD             reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    DIVMOD          reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    QUICKADDONE     reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    QUICKADDTWO     reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    QUICKSUBONE     reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    QUICKSUBTWO     reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    QUICKMULTWO     reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    QUICKDIVTWO     reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    ABS             reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    NEGATE          reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    MIN             reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    MAX             reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    DUP             reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    2DUP            reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    SWAP            reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    ROT             reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    OVER            reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    DROP            reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    EQUAL           reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    NOTEQUAL        reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    GREATER         reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    LESS            reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    ZEROEQUALS      reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    ZEROLESS        reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    ZEROGREATER     reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    FALSE           reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    TRUE            reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    DO              reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    BEGIN           reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    I               reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    IF              reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    VARIABLE        reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    ID              reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    NUMBER          reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    STRING          reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    DOT             reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    KEY             reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    CHAR            reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    CR              reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    SPACE           reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    SPACES          reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    EMIT            reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    $end            reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    LOOP            reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    PLUSLOOP        reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    UNTIL           reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    WHILE           reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    ELSE            reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    THEN            reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    SEMICOLON       reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)
    REPEAT          reduce using rule 4 (Function -> Options COLON ID Options SEMICOLON .)


state 80

    (26) Loop -> BEGIN Options WHILE Options . REPEAT
    (5) Expression -> Options . Token
    (4) Function -> Options . COLON ID Options SEMICOLON
    (7) Token -> . Operation
    (8) Token -> . Quickie
    (9) Token -> . Misk
    (10) Token -> . Manuver
    (11) Token -> . Logic
    (12) Token -> . Loop
    (13) Token -> . Condition
    (14) Token -> . Variables
    (15) Token -> . Elem
    (16) Token -> . Io
    (17) Operation -> . PLUS
    (18) Operation -> . TIMES
    (19) Operation -> . DIVIDE
    (20) Operation -> . MINUS
    (21) Operation -> . EXP
    (22) Operation -> . MOD
    (23) Operation -> . DIVMOD
    (31) Quickie -> . QUICKADDONE
    (32) Quickie -> . QUICKADDTWO
    (33) Quickie -> . QUICKSUBONE
    (34) Quickie -> . QUICKSUBTWO
    (35) Quickie -> . QUICKMULTWO
    (36) Quickie -> . QUICKDIVTWO
    (46) Misk -> . ABS
    (47) Misk -> . NEGATE
    (48) Misk -> . MIN
    (49) Misk -> . MAX
    (50) Manuver -> . DUP
    (51) Manuver -> . 2DUP
    (52) Manuver -> . SWAP
    (53) Manuver -> . ROT
    (54) Manuver -> . OVER
    (55) Manuver -> . DROP
    (37) Logic -> . EQUAL
    (38) Logic -> . NOTEQUAL
    (39) Logic -> . GREATER
    (40) Logic -> . LESS
    (41) Logic -> . ZEROEQUALS
    (42) Logic -> . ZEROLESS
    (43) Logic -> . ZEROGREATER
    (44) Logic -> . FALSE
    (45) Logic -> . TRUE
    (24) Loop -> . DO Options LOOP
    (25) Loop -> . BEGIN Options UNTIL
    (26) Loop -> . BEGIN Options WHILE Options REPEAT
    (27) Loop -> . I
    (28) Loop -> . DO Options PLUSLOOP
    (29) Condition -> . IF Options ELSE Options THEN
    (30) Condition -> . IF Options THEN
    (56) Variables -> . VARIABLE ID
    (57) Variables -> . ID EXCLAMATION
    (58) Variables -> . ID ATSIGN
    (59) Variables -> . ID QUESTIONMARK
    (60) Variables -> . ID
    (68) Elem -> . NUMBER
    (69) Elem -> . STRING
    (61) Io -> . DOT
    (62) Io -> . KEY
    (63) Io -> . CHAR
    (64) Io -> . CR
    (65) Io -> . SPACE
    (66) Io -> . SPACES
    (67) Io -> . EMIT

    REPEAT          shift and go to state 82
    COLON           shift and go to state 6
    PLUS            shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    MINUS           shift and go to state 21
    EXP             shift and go to state 22
    MOD             shift and go to state 23
    DIVMOD          shift and go to state 24
    QUICKADDONE     shift and go to state 25
    QUICKADDTWO     shift and go to state 26
    QUICKSUBONE     shift and go to state 27
    QUICKSUBTWO     shift and go to state 28
    QUICKMULTWO     shift and go to state 29
    QUICKDIVTWO     shift and go to state 30
    ABS             shift and go to state 31
    NEGATE          shift and go to state 32
    MIN             shift and go to state 33
    MAX             shift and go to state 34
    DUP             shift and go to state 35
    2DUP            shift and go to state 36
    SWAP            shift and go to state 37
    ROT             shift and go to state 38
    OVER            shift and go to state 39
    DROP            shift and go to state 40
    EQUAL           shift and go to state 41
    NOTEQUAL        shift and go to state 42
    GREATER         shift and go to state 43
    LESS            shift and go to state 44
    ZEROEQUALS      shift and go to state 45
    ZEROLESS        shift and go to state 46
    ZEROGREATER     shift and go to state 47
    FALSE           shift and go to state 48
    TRUE            shift and go to state 49
    DO              shift and go to state 50
    BEGIN           shift and go to state 51
    I               shift and go to state 52
    IF              shift and go to state 53
    VARIABLE        shift and go to state 54
    ID              shift and go to state 7
    NUMBER          shift and go to state 55
    STRING          shift and go to state 56
    DOT             shift and go to state 57
    KEY             shift and go to state 58
    CHAR            shift and go to state 59
    CR              shift and go to state 60
    SPACE           shift and go to state 61
    SPACES          shift and go to state 62
    EMIT            shift and go to state 63

    Token                          shift and go to state 5
    Operation                      shift and go to state 8
    Quickie                        shift and go to state 9
    Misk                           shift and go to state 10
    Manuver                        shift and go to state 11
    Logic                          shift and go to state 12
    Loop                           shift and go to state 13
    Condition                      shift and go to state 14
    Variables                      shift and go to state 15
    Elem                           shift and go to state 16
    Io                             shift and go to state 17

state 81

    (29) Condition -> IF Options ELSE Options . THEN
    (5) Expression -> Options . Token
    (4) Function -> Options . COLON ID Options SEMICOLON
    (7) Token -> . Operation
    (8) Token -> . Quickie
    (9) Token -> . Misk
    (10) Token -> . Manuver
    (11) Token -> . Logic
    (12) Token -> . Loop
    (13) Token -> . Condition
    (14) Token -> . Variables
    (15) Token -> . Elem
    (16) Token -> . Io
    (17) Operation -> . PLUS
    (18) Operation -> . TIMES
    (19) Operation -> . DIVIDE
    (20) Operation -> . MINUS
    (21) Operation -> . EXP
    (22) Operation -> . MOD
    (23) Operation -> . DIVMOD
    (31) Quickie -> . QUICKADDONE
    (32) Quickie -> . QUICKADDTWO
    (33) Quickie -> . QUICKSUBONE
    (34) Quickie -> . QUICKSUBTWO
    (35) Quickie -> . QUICKMULTWO
    (36) Quickie -> . QUICKDIVTWO
    (46) Misk -> . ABS
    (47) Misk -> . NEGATE
    (48) Misk -> . MIN
    (49) Misk -> . MAX
    (50) Manuver -> . DUP
    (51) Manuver -> . 2DUP
    (52) Manuver -> . SWAP
    (53) Manuver -> . ROT
    (54) Manuver -> . OVER
    (55) Manuver -> . DROP
    (37) Logic -> . EQUAL
    (38) Logic -> . NOTEQUAL
    (39) Logic -> . GREATER
    (40) Logic -> . LESS
    (41) Logic -> . ZEROEQUALS
    (42) Logic -> . ZEROLESS
    (43) Logic -> . ZEROGREATER
    (44) Logic -> . FALSE
    (45) Logic -> . TRUE
    (24) Loop -> . DO Options LOOP
    (25) Loop -> . BEGIN Options UNTIL
    (26) Loop -> . BEGIN Options WHILE Options REPEAT
    (27) Loop -> . I
    (28) Loop -> . DO Options PLUSLOOP
    (29) Condition -> . IF Options ELSE Options THEN
    (30) Condition -> . IF Options THEN
    (56) Variables -> . VARIABLE ID
    (57) Variables -> . ID EXCLAMATION
    (58) Variables -> . ID ATSIGN
    (59) Variables -> . ID QUESTIONMARK
    (60) Variables -> . ID
    (68) Elem -> . NUMBER
    (69) Elem -> . STRING
    (61) Io -> . DOT
    (62) Io -> . KEY
    (63) Io -> . CHAR
    (64) Io -> . CR
    (65) Io -> . SPACE
    (66) Io -> . SPACES
    (67) Io -> . EMIT

    THEN            shift and go to state 83
    COLON           shift and go to state 6
    PLUS            shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    MINUS           shift and go to state 21
    EXP             shift and go to state 22
    MOD             shift and go to state 23
    DIVMOD          shift and go to state 24
    QUICKADDONE     shift and go to state 25
    QUICKADDTWO     shift and go to state 26
    QUICKSUBONE     shift and go to state 27
    QUICKSUBTWO     shift and go to state 28
    QUICKMULTWO     shift and go to state 29
    QUICKDIVTWO     shift and go to state 30
    ABS             shift and go to state 31
    NEGATE          shift and go to state 32
    MIN             shift and go to state 33
    MAX             shift and go to state 34
    DUP             shift and go to state 35
    2DUP            shift and go to state 36
    SWAP            shift and go to state 37
    ROT             shift and go to state 38
    OVER            shift and go to state 39
    DROP            shift and go to state 40
    EQUAL           shift and go to state 41
    NOTEQUAL        shift and go to state 42
    GREATER         shift and go to state 43
    LESS            shift and go to state 44
    ZEROEQUALS      shift and go to state 45
    ZEROLESS        shift and go to state 46
    ZEROGREATER     shift and go to state 47
    FALSE           shift and go to state 48
    TRUE            shift and go to state 49
    DO              shift and go to state 50
    BEGIN           shift and go to state 51
    I               shift and go to state 52
    IF              shift and go to state 53
    VARIABLE        shift and go to state 54
    ID              shift and go to state 7
    NUMBER          shift and go to state 55
    STRING          shift and go to state 56
    DOT             shift and go to state 57
    KEY             shift and go to state 58
    CHAR            shift and go to state 59
    CR              shift and go to state 60
    SPACE           shift and go to state 61
    SPACES          shift and go to state 62
    EMIT            shift and go to state 63

    Token                          shift and go to state 5
    Operation                      shift and go to state 8
    Quickie                        shift and go to state 9
    Misk                           shift and go to state 10
    Manuver                        shift and go to state 11
    Logic                          shift and go to state 12
    Loop                           shift and go to state 13
    Condition                      shift and go to state 14
    Variables                      shift and go to state 15
    Elem                           shift and go to state 16
    Io                             shift and go to state 17

state 82

    (26) Loop -> BEGIN Options WHILE Options REPEAT .

    COLON           reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    PLUS            reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    TIMES           reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    DIVIDE          reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    MINUS           reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    EXP             reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    MOD             reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    DIVMOD          reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    QUICKADDONE     reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    QUICKADDTWO     reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    QUICKSUBONE     reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    QUICKSUBTWO     reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    QUICKMULTWO     reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    QUICKDIVTWO     reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    ABS             reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    NEGATE          reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    MIN             reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    MAX             reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    DUP             reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    2DUP            reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    SWAP            reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    ROT             reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    OVER            reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    DROP            reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    EQUAL           reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    NOTEQUAL        reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    GREATER         reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    LESS            reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    ZEROEQUALS      reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    ZEROLESS        reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    ZEROGREATER     reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    FALSE           reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    TRUE            reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    DO              reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    BEGIN           reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    I               reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    IF              reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    VARIABLE        reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    ID              reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    NUMBER          reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    STRING          reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    DOT             reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    KEY             reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    CHAR            reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    CR              reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    SPACE           reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    SPACES          reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    EMIT            reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    $end            reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    LOOP            reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    PLUSLOOP        reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    UNTIL           reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    WHILE           reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    ELSE            reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    THEN            reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    SEMICOLON       reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)
    REPEAT          reduce using rule 26 (Loop -> BEGIN Options WHILE Options REPEAT .)


state 83

    (29) Condition -> IF Options ELSE Options THEN .

    COLON           reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    PLUS            reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    TIMES           reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    DIVIDE          reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    MINUS           reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    EXP             reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    MOD             reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    DIVMOD          reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    QUICKADDONE     reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    QUICKADDTWO     reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    QUICKSUBONE     reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    QUICKSUBTWO     reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    QUICKMULTWO     reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    QUICKDIVTWO     reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    ABS             reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    NEGATE          reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    MIN             reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    MAX             reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    DUP             reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    2DUP            reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    SWAP            reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    ROT             reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    OVER            reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    DROP            reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    EQUAL           reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    NOTEQUAL        reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    GREATER         reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    LESS            reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    ZEROEQUALS      reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    ZEROLESS        reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    ZEROGREATER     reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    FALSE           reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    TRUE            reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    DO              reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    BEGIN           reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    I               reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    IF              reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    VARIABLE        reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    ID              reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    NUMBER          reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    STRING          reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    DOT             reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    KEY             reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    CHAR            reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    CR              reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    SPACE           reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    SPACES          reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    EMIT            reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    $end            reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    LOOP            reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    PLUSLOOP        reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    UNTIL           reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    WHILE           reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    ELSE            reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    THEN            reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    SEMICOLON       reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)
    REPEAT          reduce using rule 29 (Condition -> IF Options ELSE Options THEN .)

